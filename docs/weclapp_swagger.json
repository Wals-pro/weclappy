{
  "basePath": "/webapp/api/v1/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "abstractEntity": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "acceptQuotationItem": {
      "properties": {
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "quotationItemId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "accountCategory": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "parentAccountCategoryId": {
          "type": "string",
          "x-relatedEntityName": "accountCategory"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "description"
      ],
      "type": "object"
    },
    "accountingGeneralSettings": {
      "properties": {
        "accountingStartDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "allowBookingWithoutPersonalAccount": {
          "type": "boolean"
        },
        "allowManualOpenItemClearance": {
          "type": "boolean"
        },
        "allowOpenItemPaymentCreation": {
          "type": "boolean"
        },
        "autoCreateNewFinancialYear": {
          "type": "boolean"
        },
        "autoUpdateCreditorAccountDescription": {
          "type": "boolean"
        },
        "autoUpdateDebtorAccountDescription": {
          "type": "boolean"
        },
        "defaultBookingTextForPurchaseInvoices": {
          "type": "string"
        },
        "defaultBookingTextForSalesInvoices": {
          "type": "string"
        },
        "enableAutomaticBooking": {
          "type": "boolean"
        },
        "openItemDueDateBasedOnInvoiceDate": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "accountingSettings": {
      "properties": {
        "datev": {
          "$ref": "#/definitions/datevSettings"
        },
        "dunningRun": {
          "$ref": "#/definitions/dunningRunSettings"
        },
        "general": {
          "$ref": "#/definitions/accountingGeneralSettings"
        },
        "intrastat": {
          "$ref": "#/definitions/intrastatSettings"
        },
        "paymentRun": {
          "$ref": "#/definitions/paymentRunSettings"
        },
        "paymentTolerance": {
          "$ref": "#/definitions/paymentToleranceSettings"
        },
        "riba": {
          "$ref": "#/definitions/ribaSettings"
        },
        "sepaDirectDebitMandate": {
          "$ref": "#/definitions/sepaDirectDebitMandateSettings"
        }
      },
      "type": "object"
    },
    "accountingTransaction": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountingImportDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "conversionRate": {
          "format": "number",
          "type": "string"
        },
        "conversionRateDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        },
        "externalRecordNumber": {
          "type": "string"
        },
        "internalRecordNumber": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "reverseTransaction": {
          "type": "boolean"
        },
        "status": {
          "enum": [
            "DRAFT",
            "ESTABLISHED",
            "PREBATCHBOOKING"
          ],
          "type": "string"
        },
        "transactionDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "transactionDetails": {
          "items": {
            "$ref": "#/definitions/accountingTransactionDetail"
          },
          "type": "array"
        },
        "transactionEstablishDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "transactionNumber": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CARRY_FORWARD",
            "CREDIT_ADVICE",
            "IMPERSONAL",
            "INCOMING_CREDIT_NOTE",
            "INCOMING_INVOICE",
            "INCOMING_MANUAL_ENTRY",
            "INCOMING_PAYMENT",
            "OUTGOING_CREDIT_NOTE",
            "OUTGOING_INVOICE",
            "OUTGOING_MANUAL_ENTRY",
            "OUTGOING_PAYMENT"
          ],
          "type": "string"
        }
      },
      "required": [
        "currencyId"
      ],
      "type": "object"
    },
    "accountingTransactionDetail": {
      "properties": {
        "accountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "amount": {
          "format": "number",
          "type": "string"
        },
        "debitCredit": {
          "enum": [
            "CREDIT",
            "DEBIT"
          ],
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        }
      },
      "type": "object"
    },
    "activityFeedEntry": {
      "properties": {
        "createDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "entityId": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "finalString": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "address": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "company2": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "deliveryAddress": {
          "type": "boolean"
        },
        "firstName": {
          "type": "string"
        },
        "globalLocationNumber": {
          "type": "string"
        },
        "invoiceAddress": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "postOfficeBoxCity": {
          "type": "string"
        },
        "postOfficeBoxNumber": {
          "type": "string"
        },
        "postOfficeBoxZipCode": {
          "type": "string"
        },
        "primeAddress": {
          "type": "boolean"
        },
        "salutation": {
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ],
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street1": {
          "type": "string"
        },
        "street2": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "titleId": {
          "type": "string",
          "x-relatedEntityName": "title"
        },
        "zipcode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "addressSettingsDto": {
      "properties": {
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "company2": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "globalLocationNumber": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "postOfficeBoxCity": {
          "type": "string"
        },
        "postOfficeBoxNumber": {
          "type": "string"
        },
        "postOfficeBoxZipCode": {
          "type": "string"
        },
        "salutation": {
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ],
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street1": {
          "type": "string"
        },
        "street2": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "titleId": {
          "type": "string",
          "x-relatedEntityName": "title"
        },
        "zipcode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "aggregatePackagingUnit": {
      "properties": {
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleName": {
          "type": "string"
        },
        "articleNumber": {
          "type": "string"
        },
        "baseArticleQuantity": {
          "format": "int64",
          "type": "integer"
        },
        "packagingUnitQuantity": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "aggregateStock": {
      "properties": {
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "packagingUnits": {
          "items": {
            "$ref": "#/definitions/aggregatePackagingUnit"
          },
          "type": "array"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "salesOrderItemId": {
          "type": "string"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        }
      },
      "type": "object"
    },
    "amount": {
      "properties": {
        "amountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "apiProblem": {
      "properties": {
        "detail": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "messages": {
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "validationErrors": {
          "items": {
            "$ref": "#/definitions/validationError"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "appSettings": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "settingsKey": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      },
      "required": [
        "settingsKey"
      ],
      "type": "object"
    },
    "appUserSettings": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "settingsKey": {
          "type": "string"
        },
        "shared": {
          "type": "boolean"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "value": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "archivedEmail": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "bccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "ccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "fromAddress": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "messageIdentifier": {
          "type": "string"
        },
        "receivedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "replyToAddress": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subject": {
          "type": "string"
        },
        "toAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "archivedEmailAttachment": {
      "properties": {
        "content": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "archivedEmailWithAttachments": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "attachments": {
          "items": {
            "$ref": "#/definitions/archivedEmailAttachment"
          },
          "type": "array"
        },
        "bccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "ccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "fromAddress": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "messageIdentifier": {
          "type": "string"
        },
        "receivedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "replyToAddress": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subject": {
          "type": "string"
        },
        "toAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "article": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountingCodeId": {
          "type": "string",
          "x-relatedEntityName": "articleAccountingCode"
        },
        "active": {
          "type": "boolean"
        },
        "applyCashDiscount": {
          "type": "boolean"
        },
        "articleAlternativeQuantities": {
          "items": {
            "$ref": "#/definitions/articleAlternativeQuantity"
          },
          "type": "array"
        },
        "articleCalculationPrices": {
          "items": {
            "$ref": "#/definitions/articleCalculationPrice"
          },
          "type": "array"
        },
        "articleCategoryId": {
          "type": "string",
          "x-relatedEntityName": "articleCategory"
        },
        "articleGrossWeight": {
          "format": "number",
          "type": "string"
        },
        "articleHeight": {
          "format": "number",
          "type": "string"
        },
        "articleImages": {
          "items": {
            "$ref": "#/definitions/articleImage"
          },
          "type": "array"
        },
        "articleLength": {
          "format": "number",
          "type": "string"
        },
        "articleNetWeight": {
          "format": "number",
          "type": "string"
        },
        "articleNumber": {
          "type": "string"
        },
        "articlePrices": {
          "items": {
            "$ref": "#/definitions/articlePriceWithoutArticleReference"
          },
          "type": "array"
        },
        "articleType": {
          "enum": [
            "BASIC",
            "LOADING_EQUIPMENT",
            "LOADING_EQUIPMENT_STORABLE",
            "PACKAGING_UNIT",
            "SALES_BILL_OF_MATERIAL",
            "SERVICE",
            "SHIPPING_COST",
            "STORABLE"
          ],
          "type": "string"
        },
        "articleWidth": {
          "format": "number",
          "type": "string"
        },
        "availableForSalesChannels": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "availableInSale": {
          "type": "boolean"
        },
        "averageDeliveryTime": {
          "format": "int32",
          "type": "integer"
        },
        "barcode": {
          "type": "string"
        },
        "batchNumberRequired": {
          "type": "boolean"
        },
        "billOfMaterialPartDeliveryPossible": {
          "type": "boolean"
        },
        "catalogCode": {
          "type": "string"
        },
        "commissionRate": {
          "format": "number",
          "type": "string"
        },
        "contractBillingCycle": {
          "enum": [
            "DAILY",
            "FIVE_YEARLY",
            "FOUR_YEARLY",
            "HALF_YEARLY",
            "MONTHLY",
            "NONE",
            "QUARTER",
            "THREE_YEARLY",
            "TWO_YEARLY",
            "WEEKLY",
            "YEARLY"
          ],
          "type": "string"
        },
        "contractBillingMode": {
          "enum": [
            "NON_RECURRENT",
            "RECURRENT"
          ],
          "type": "string"
        },
        "countryOfOriginCode": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerArticleNumbers": {
          "items": {
            "$ref": "#/definitions/customerSpecificArticleAttributes"
          },
          "type": "array"
        },
        "customsDescription": {
          "type": "string"
        },
        "customsTariffNumber": {
          "type": "string"
        },
        "customsTariffNumberId": {
          "type": "string",
          "x-relatedEntityName": "customsTariffNumber"
        },
        "defaultLoadingEquipmentIdentifierId": {
          "type": "string",
          "x-relatedEntityName": "loadingEquipmentIdentifier"
        },
        "defaultPriceCalculationType": {
          "enum": [
            "MARGIN_CALCULATION",
            "PURCHASE",
            "RECOMMENDED_RETAIL_PRICE",
            "SALES"
          ],
          "type": "string"
        },
        "defaultStoragePlaces": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "defineIndividualTaskTemplates": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "ean": {
          "type": "string"
        },
        "expenseAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "expenseAccountNumber": {
          "type": "string"
        },
        "expirationDays": {
          "format": "int32",
          "type": "integer"
        },
        "fixedPurchaseQuantity": {
          "format": "number",
          "type": "string"
        },
        "internalNote": {
          "type": "string"
        },
        "invoicingType": {
          "enum": [
            "EFFORT",
            "FIXED_PRICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "launchDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "loadingEquipmentArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "longText": {
          "type": "string"
        },
        "lowLevelCode": {
          "format": "int32",
          "type": "integer"
        },
        "manufacturerId": {
          "type": "string",
          "x-relatedEntityName": "manufacturer"
        },
        "manufacturerName": {
          "type": "string"
        },
        "manufacturerPartNumber": {
          "type": "string"
        },
        "marginCalculationPriceType": {
          "enum": [
            "ARTICLE_CALCULATION_PRICE",
            "EMPLOYEE_COST",
            "MOVING_AVERAGE",
            "PURCHASE_PRICE_PRODUCTION_COST"
          ],
          "type": "string"
        },
        "matchCode": {
          "type": "string"
        },
        "minimumPurchaseQuantity": {
          "format": "number",
          "type": "string"
        },
        "minimumStockQuantity": {
          "format": "number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "packagingQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "packagingUnitBaseArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "packagingUnitParentArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "plannedWorkingTimePerUnit": {
          "format": "int64",
          "type": "integer"
        },
        "priceCalculationParameters": {
          "items": {
            "$ref": "#/definitions/priceCalculationParameterV1"
          },
          "type": "array"
        },
        "primarySupplySourceId": {
          "type": "string",
          "x-relatedEntityName": "articleSupplySource"
        },
        "procurementLeadDays": {
          "format": "int32",
          "type": "integer"
        },
        "producerType": {
          "type": "string"
        },
        "productionArticle": {
          "type": "boolean"
        },
        "productionBillOfMaterialItems": {
          "items": {
            "$ref": "#/definitions/billOfMaterial"
          },
          "type": "array"
        },
        "productionConfigurationRule": {
          "enum": [
            "ALL_COMPONENTS",
            "AT_LEAST_ONE_COMPONENT",
            "AT_LEAST_ONE_COMPONENT_WITH_VARIABLE_QUANTITY",
            "ONE_COMPONENT",
            "ONE_COMPONENT_WITH_VARIABLE_QUANTITY"
          ],
          "type": "string"
        },
        "purchaseCostCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        },
        "purchaseCostCenterNumber": {
          "type": "string"
        },
        "quantityConversions": {
          "items": {
            "$ref": "#/definitions/quantityConversion"
          },
          "type": "array"
        },
        "ratingId": {
          "type": "string",
          "x-relatedEntityName": "articleRating"
        },
        "ratingName": {
          "type": "string"
        },
        "recordItemGroupName": {
          "type": "string"
        },
        "safetyStockDays": {
          "format": "int32",
          "type": "integer"
        },
        "salesBillOfMaterialItems": {
          "items": {
            "$ref": "#/definitions/salesBillOfMaterialArticleItem"
          },
          "type": "array"
        },
        "salesCostCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        },
        "salesCostCenterNumber": {
          "type": "string"
        },
        "sellByDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "sellFromDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "serialNumberRequired": {
          "type": "boolean"
        },
        "shortDescription1": {
          "type": "string"
        },
        "shortDescription2": {
          "type": "string"
        },
        "showOnDeliveryNote": {
          "type": "boolean"
        },
        "statusId": {
          "type": "string",
          "x-relatedEntityName": "articleStatus"
        },
        "supplySources": {
          "items": {
            "$ref": "#/definitions/supplySource"
          },
          "type": "array"
        },
        "supportUntilDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "systemCode": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "targetStockQuantity": {
          "format": "number",
          "type": "string"
        },
        "taxRateType": {
          "enum": [
            "REDUCED",
            "SLIGHTLY_REDUCED",
            "STANDARD",
            "SUPER_REDUCED",
            "ZERO"
          ],
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        },
        "useAvailableForSalesChannels": {
          "type": "boolean"
        },
        "useSalesBillOfMaterialItemPrices": {
          "type": "boolean"
        },
        "useSalesBillOfMaterialItemPricesForPurchase": {
          "type": "boolean"
        },
        "useSalesBillOfMaterialSubitemCosts": {
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "articleAlternativeQuantity": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "minimumOrderQuantity": {
          "format": "number",
          "type": "string"
        },
        "minimumStockQuantity": {
          "format": "number",
          "type": "string"
        },
        "targetStockQuantity": {
          "format": "number",
          "type": "string"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        },
        "warehouseName": {
          "type": "string"
        }
      },
      "required": [
        "warehouseId"
      ],
      "type": "object"
    },
    "articleCalculationPrice": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleCalculationPriceType": {
          "enum": [
            "CALCULATION_PRICE",
            "RECOMMENDED_RETAIL_PRICE"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "price": {
          "format": "number",
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "articleCalculationPriceType",
        "price"
      ],
      "type": "object"
    },
    "articleCategory": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleAccountingCodeId": {
          "type": "string",
          "x-relatedEntityName": "articleAccountingCode"
        },
        "articleCategoryClassificationId": {
          "type": "string",
          "x-relatedEntityName": "articleCategoryClassification"
        },
        "costTypeId": {
          "type": "string",
          "x-relatedEntityName": "costType"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "imageId": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "parentCategoryId": {
          "type": "string",
          "x-relatedEntityName": "articleCategory"
        },
        "purchaseCostCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        },
        "salesCostCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "articleExtraInformation": {
      "properties": {
        "amazonStockQuantity": {
          "format": "number",
          "type": "string"
        },
        "confirmedOrderedQuantity": {
          "format": "number",
          "type": "string"
        },
        "consignmentStockQuantity": {
          "format": "number",
          "type": "string"
        },
        "currentYearRevenue": {
          "format": "number",
          "type": "string"
        },
        "currentYearSalesOrderVolume": {
          "format": "number",
          "type": "string"
        },
        "inventoryValuationAtAvgArticlePrice": {
          "format": "number",
          "type": "string"
        },
        "lastYearRevenue": {
          "format": "number",
          "type": "string"
        },
        "lastYearSalesOrderVolume": {
          "format": "number",
          "type": "string"
        },
        "openQuantityInShipments": {
          "format": "number",
          "type": "string"
        },
        "openShipmentQuantity": {
          "format": "number",
          "type": "string"
        },
        "orderedQuantity": {
          "format": "number",
          "type": "string"
        },
        "plannedSalesQuantity": {
          "format": "number",
          "type": "string"
        },
        "productionPrice": {
          "format": "number",
          "type": "string"
        },
        "purchasePrice": {
          "format": "number",
          "type": "string"
        },
        "purchasePriceCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "reservedStockQuantity": {
          "format": "number",
          "type": "string"
        },
        "salesPrice": {
          "format": "number",
          "type": "string"
        },
        "salesPriceCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "stockQuantity": {
          "format": "number",
          "type": "string"
        },
        "stockQuantityWithoutOrder": {
          "format": "number",
          "type": "string"
        },
        "stockQuantityWithoutOrderToDate": {
          "format": "number",
          "type": "string"
        },
        "stockValuationPrice": {
          "format": "number",
          "type": "string"
        },
        "supplierStockQuantity": {
          "format": "number",
          "type": "string"
        },
        "unconfirmedOrderedQuantity": {
          "format": "number",
          "type": "string"
        },
        "unreservedStockQuantity": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "articleGeneralSettings": {
      "properties": {
        "defaultArticleType": {
          "enum": [
            "BASIC",
            "LOADING_EQUIPMENT",
            "LOADING_EQUIPMENT_STORABLE",
            "PACKAGING_UNIT",
            "SALES_BILL_OF_MATERIAL",
            "SERVICE",
            "SHIPPING_COST",
            "STORABLE"
          ],
          "type": "string"
        },
        "searchForArticleEanNumber": {
          "type": "boolean"
        },
        "searchForArticleManufacturer": {
          "type": "boolean"
        },
        "searchForArticleMatchCode": {
          "type": "boolean"
        },
        "searchForArticleMpn": {
          "type": "boolean"
        },
        "searchForCustomerArticleNumber": {
          "type": "boolean"
        },
        "showFreeToSaleQuantityInSearchResults": {
          "type": "boolean"
        },
        "useArticleNumberRange": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "articleIdWithNetAmount": {
      "properties": {
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "articleImage": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "mainImage": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "articleItemGroup": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/articleItemGroupItem"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "articleItemGroupItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        }
      },
      "required": [
        "quantity"
      ],
      "type": "object"
    },
    "articlePrice": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "description": {
          "type": "string"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedByUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "price": {
          "format": "number",
          "type": "string"
        },
        "priceScaleType": {
          "enum": [
            "SCALE_FROM",
            "SCALE_TO"
          ],
          "type": "string"
        },
        "priceScaleValue": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditions": {
          "items": {
            "$ref": "#/definitions/reductionAddition"
          },
          "type": "array"
        },
        "salesChannel": {
          "type": "string"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "articleId",
        "currencyId",
        "price",
        "priceScaleType",
        "priceScaleValue",
        "salesChannel"
      ],
      "type": "object"
    },
    "articlePriceWithoutArticleReference": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "description": {
          "type": "string"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedByUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "price": {
          "format": "number",
          "type": "string"
        },
        "priceScaleType": {
          "enum": [
            "SCALE_FROM",
            "SCALE_TO"
          ],
          "type": "string"
        },
        "priceScaleValue": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditions": {
          "items": {
            "$ref": "#/definitions/reductionAddition"
          },
          "type": "array"
        },
        "salesChannel": {
          "type": "string"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "currencyId",
        "price",
        "priceScaleType",
        "priceScaleValue",
        "salesChannel"
      ],
      "type": "object"
    },
    "articlePriceWithoutSalesChannel": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "description": {
          "type": "string"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedByUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "price": {
          "format": "number",
          "type": "string"
        },
        "priceScaleType": {
          "enum": [
            "SCALE_FROM",
            "SCALE_TO"
          ],
          "type": "string"
        },
        "priceScaleValue": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditions": {
          "items": {
            "$ref": "#/definitions/reductionAddition"
          },
          "type": "array"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "currencyId",
        "price",
        "priceScaleType",
        "priceScaleValue"
      ],
      "type": "object"
    },
    "articleSettings": {
      "properties": {
        "articleSupplySource": {
          "$ref": "#/definitions/articleSupplySourceSettings"
        },
        "basicArticle": {
          "$ref": "#/definitions/basicArticleSettings"
        },
        "general": {
          "$ref": "#/definitions/articleGeneralSettings"
        },
        "loadingEquipmentArticle": {
          "$ref": "#/definitions/loadingEquipmentArticleSettings"
        },
        "packagingUnitArticle": {
          "$ref": "#/definitions/packagingUnitArticleSettings"
        },
        "salesBillOfMaterialArticle": {
          "$ref": "#/definitions/salesBillOfMaterialArticleSettings"
        },
        "serviceArticle": {
          "$ref": "#/definitions/serviceArticleSettings"
        },
        "shippingCostArticle": {
          "$ref": "#/definitions/shippingCostArticleSettings"
        },
        "storableArticle": {
          "$ref": "#/definitions/storableArticleSettings"
        }
      },
      "type": "object"
    },
    "articleSupplySource": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleNumber": {
          "type": "string"
        },
        "articlePrices": {
          "items": {
            "$ref": "#/definitions/articlePriceWithoutSalesChannel"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "dropshippingPossible": {
          "type": "boolean"
        },
        "ean": {
          "type": "string"
        },
        "fixedPurchaseQuantity": {
          "format": "number",
          "type": "string"
        },
        "ignoreInDropshippingAutomation": {
          "type": "boolean"
        },
        "internalNote": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manufacturerPartNumber": {
          "type": "string"
        },
        "matchCode": {
          "type": "string"
        },
        "minimumPurchaseQuantity": {
          "format": "number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "procurementLeadDays": {
          "format": "int32",
          "type": "integer"
        },
        "shortDescription1": {
          "type": "string"
        },
        "shortDescription2": {
          "type": "string"
        },
        "supplierId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "supplierNumber": {
          "type": "string"
        },
        "supplierStockQuantity": {
          "format": "number",
          "type": "string"
        },
        "taxRateType": {
          "enum": [
            "REDUCED",
            "SLIGHTLY_REDUCED",
            "STANDARD",
            "SUPER_REDUCED",
            "ZERO"
          ],
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "articleSupplySourceSettings": {
      "properties": {
        "useArticleNumberAsSupplierArticleNumber": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "attendance": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "endTime": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "startTime": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "startTime"
      ],
      "type": "object"
    },
    "auditingHistoryEntry": {
      "properties": {
        "entryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "entryType": {
          "enum": [
            "ADD",
            "DEL",
            "MOD"
          ],
          "type": "string"
        },
        "jobType": {
          "enum": [
            "ACCOUNTING_DATASTRUCTURE_MIGRATION",
            "ACCOUNTING_EXPORT",
            "ACCOUNT_BALANCES_TRANSFER",
            "ADAPT_SALES_STAGES",
            "AMAZON_ARTICLE_WECLAPP_ARTICLE_FBA_SYNC",
            "AMAZON_ARTICLE_WECLAPP_ARTICLE_SYNC",
            "AMAZON_CREATE_REPORTS",
            "AMAZON_INVOICE_UPLOAD",
            "AMAZON_REPORT_SALES_ORDER_FBA_SYNC",
            "AMAZON_REPORT_SALES_ORDER_SYNC",
            "AMAZON_SETTLEMENT_WECLAPP_SYNC",
            "AMAZON_WECLAPP_ARTICLE_FBA_SYNC",
            "AMAZON_WECLAPP_ARTICLE_SYNC",
            "AMAZON_WECLAPP_REPORT_FBA_SYNC",
            "AMAZON_WECLAPP_REPORT_SYNC",
            "AMAZON_WECLAPP_SETTLEMENT_SYNC",
            "ARTICLE_DELETION",
            "ARTICLE_KEY_FIGURES_EXPORT",
            "ARTICLE_PRICE_TO_AMAZON_REPORT_SYNC",
            "BREVO_CAMPAIGN_PARTICIPANT_EXPORT",
            "BREVO_CONTACT_EXPORT",
            "BREVO_CONTACT_IMPORT",
            "BREVO_CUSTOMER_EXPORT",
            "BREVO_LEAD_EXPORT",
            "CAMPAIGN_EMAIL_SENDING",
            "CLEVER_REACH_CAMPAIGN_PARTICIPANT_EXPORT",
            "CLEVER_REACH_CONTACT_EXPORT",
            "CLEVER_REACH_CONTACT_IMPORT",
            "CLEVER_REACH_CUSTOMER_EXPORT",
            "CLEVER_REACH_LEAD_EXPORT",
            "COMMISSION_RUN",
            "CONTRACT_BILLING",
            "DATEV_BBS_TRANSMISSION",
            "DATEV_BDS_TRANSMISSION",
            "DATEV_RDS_TRANSMISSION",
            "EBAY_WECLAPP_DELETION_REQUEST_SYNC",
            "EBAY_WECLAPP_LISTING_SYNC",
            "EBAY_WECLAPP_ORDER_SYNC",
            "EBAY_WECLAPP_PAYMENT_SYNC",
            "EBAY_WECLAPP_SELLER_PROFILE_SYNC",
            "ERIC_CREATE_ACCOUNT_SHEET",
            "FATTURAPA_IMPORT",
            "FATTURAPA_SALES_INVOICE_XML_CREATION",
            "GROUPWARE_CONTACT_CREATION",
            "IMPORT_VCARD",
            "INVENTORY_BOOKING",
            "INVENTORY_VALUATION",
            "INVENTORY_VALUTATION_EXPORT",
            "ITSCOPE_ARTICLE_PRICE_UPDATE",
            "ITSCOPE_WECLAPP_ARTICLE_SYNC",
            "ITSCOPE_WECLAPP_PURCHASE_ORDER_SYNC",
            "ITSCOPE_WECLAPP_SALES_ORDER_SYNC",
            "IT_SCOPE_QUOTATION_SYNC",
            "KAUFLAND_ARTICLE_UPLOAD_CHECK_SYNC",
            "KAUFLAND_INVOICE_UPLOAD",
            "KAUFLAND_WECLAPP_ARTICLE_SYNC",
            "KAUFLAND_WECLAPP_ORDER_SYNC",
            "LISTING_TO_EBAY_UPDATE_SYNC",
            "MAGENTO2_WECLAPP_ARTICLE_SYNC",
            "MAGENTO2_WECLAPP_CUSTOMER_SYNC",
            "MAGENTO2_WECLAPP_ORDER_SYNC",
            "MAGENTO_WECLAPP_ARTICLE_SYNC",
            "MAGENTO_WECLAPP_CUSTOMER_SYNC",
            "MAGENTO_WECLAPP_ORDER_SYNC",
            "MAIL_CHIMP_CAMPAIGN_PARTICIPANT_EXPORT",
            "MAIL_CHIMP_CONTACT_EXPORT",
            "MAIL_CHIMP_CONTACT_IMPORT",
            "MAIL_CHIMP_CUSTOMER_EXPORT",
            "MAIL_CHIMP_LEAD_EXPORT",
            "MAIL_TO_INVOICE_IMPORT",
            "MASS_ACCOUNTING_TRANSACTION_DELETE",
            "MASS_ACCOUNTING_TRANSACTION_UPDATE",
            "MASS_ADVANCE_PAYMENT_INVOICE_COMPLETE_WORKFLOW",
            "MASS_ADVANCE_PAYMENT_INVOICE_CREATION",
            "MASS_AMAZON_SHIPMENT_CREATION",
            "MASS_ARTICLE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_ARTICLE_PRINT_DATASHEET",
            "MASS_ARTICLE_SUPPLY_SOURCE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_ARTICLE_SUPPLY_SOURCE_DELETION",
            "MASS_ARTICLE_SUPPLY_SOURCE_UPDATE",
            "MASS_ARTICLE_UPDATE",
            "MASS_BILL_OF_MATERIAL_ITEM_UPDATE",
            "MASS_BLANKET_PURCHASE_ORDER_CANCEL",
            "MASS_BLANKET_PURCHASE_ORDER_COMPLETE",
            "MASS_BLANKET_PURCHASE_ORDER_CONFIRM_BY_SUPPLIER",
            "MASS_BLANKET_PURCHASE_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_BLANKET_PURCHASE_ORDER_DELETION",
            "MASS_BLANKET_PURCHASE_ORDER_PRINT",
            "MASS_BLANKET_PURCHASE_ORDER_REOPEN",
            "MASS_BLANKET_PURCHASE_ORDER_SEND_EMAIL",
            "MASS_BLANKET_PURCHASE_ORDER_UPDATE",
            "MASS_BLANKET_PURCHASE_ORDER_UPDATE_FORM_TEXTS",
            "MASS_BUSINESS_TIMES_DAY_OFF_DELETE",
            "MASS_CAMPAIGN_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CAMPAIGN_PARTICIPANTS_UPDATE",
            "MASS_CAMPAIGN_UPDATE",
            "MASS_CANCELLATION_SEND_EMAIL",
            "MASS_CANCEL_TRANSPORTATION_ORDER",
            "MASS_CLEAR_OPEN_ITEM",
            "MASS_CLOSE_SUPPLIER_ORDER",
            "MASS_COMPLETE_WORKFLOW_TRANSPORTATION_ORDER",
            "MASS_CONTRACT_CHARGE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CONTRACT_CHARGE_UPDATE",
            "MASS_CONTRACT_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CONTRACT_DELETION",
            "MASS_CONTRACT_PRINT_DOCUMENT",
            "MASS_CONTRACT_SEND_EMAIL",
            "MASS_CONTRACT_UPDATE",
            "MASS_CONTRACT_UPDATE_FORM_TEXTS",
            "MASS_CREATE_DROPSHIPPING_ORDER",
            "MASS_CREATE_SALES_ORDER_COMMISSION",
            "MASS_CREATE_TRANSPORTATION_ORDER_FROM_PICKING_BOOKS",
            "MASS_CREDIT_NOTE_COMPLETE_WORKFLOW",
            "MASS_CRM_EVENT_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CRM_EVENT_DELETION",
            "MASS_CRM_EVENT_UPDATE",
            "MASS_CUSTOMER_RETURN_DELETE",
            "MASS_DELETE_PICKING_BOOK_RECORD",
            "MASS_DELETION_TRANSPORTATION_ORDER",
            "MASS_DELIVERY_NOTE_SEND_EMAIL",
            "MASS_DOWNLOAD_BANK_TRANSACTION",
            "MASS_DUNNING_RUN_PROCESS_PROPOSALS",
            "MASS_DUNNING_RUN_SEND_EMAIL_DETAIL",
            "MASS_DUNNING_RUN_SEND_EMAIL_OVERVIEW",
            "MASS_EBAY_LISTINGS_DELETE",
            "MASS_EBAY_LISTING_UPDATE",
            "MASS_INTERNAL_TRANSPORT_REFERENCE_DELETION",
            "MASS_INTERNAL_TRANSPORT_REFERENCE_UPDATE",
            "MASS_INVOICE_BOOK",
            "MASS_INVOICE_CHECK",
            "MASS_INVOICE_COMPLETE_ENTRY",
            "MASS_INVOICE_COMPLETE_WORKFLOW",
            "MASS_INVOICE_CREATE_OPEN_ITEMS",
            "MASS_INVOICE_DOCUMENT_CREATION",
            "MASS_INVOICE_SEND_EMAIL",
            "MASS_INVOICE_VERIFIED",
            "MASS_IT_SCOPE_ARTICLE_CREATION",
            "MASS_IT_SCOPE_ORDER_SYNC",
            "MASS_LEDGER_ACCOUNT_UPDATE",
            "MASS_OFFER_ACCEPT",
            "MASS_OFFER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_OFFER_DELETE",
            "MASS_OFFER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_OFFER_ITEM_UPDATE",
            "MASS_OFFER_PRINT_DOCUMENT",
            "MASS_OFFER_RECALCULATE_COSTS",
            "MASS_OFFER_REJECT",
            "MASS_OFFER_RESET_TAXES",
            "MASS_OFFER_SEND_EMAIL",
            "MASS_OFFER_UPDATE",
            "MASS_OFFER_UPDATE_FORM_TEXTS",
            "MASS_OPPORTUNITY_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_OPPORTUNITY_DELETION",
            "MASS_OPPORTUNITY_UPDATE",
            "MASS_ORDER_CANCEL",
            "MASS_ORDER_CLOSE",
            "MASS_ORDER_CONFIRMATION_CREATION",
            "MASS_ORDER_DELETE",
            "MASS_ORDER_RECALCULATE_COSTS",
            "MASS_ORDER_REOPEN",
            "MASS_ORDER_RESET_TAXES",
            "MASS_ORDER_SHIPPING_LABEL_CREATION",
            "MASS_ORDER_SHIPPING_RETURN_LABEL_CREATION",
            "MASS_ORDER_UPDATE",
            "MASS_ORDER_UPDATE_FORM_TEXTS",
            "MASS_PARTY_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PARTY_DELETION",
            "MASS_PARTY_MERGE",
            "MASS_PARTY_SET_PRIMARY_CONTACT",
            "MASS_PARTY_UPDATE",
            "MASS_PART_PAYMENT_INVOICE_COMPLETE_WORKFLOW",
            "MASS_PART_PAYMENT_INVOICE_CREATION",
            "MASS_PAYMENT_RUN_PROCESS_PROPOSALS",
            "MASS_PERFORMANCE_RECORD_COMPLETE_WORKFLOW_FOR_SALES_ORDER",
            "MASS_PERFORMANCE_RECORD_CREATE_DOCUMENTS",
            "MASS_PERFORMANCE_RECORD_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PERFORMANCE_RECORD_DELETE",
            "MASS_PERFORMANCE_RECORD_INVOICING",
            "MASS_PERFORMANCE_RECORD_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PERFORMANCE_RECORD_RECORDING",
            "MASS_PERFORMANCE_RECORD_SEND_EMAIL",
            "MASS_PERFORMANCE_RECORD_UPDATE",
            "MASS_PERFORMANCE_RECORD_UPDATE_FORM_TEXTS",
            "MASS_PICKING_LIST_CREATION",
            "MASS_PM_REQUIREMENT_ITEM_UPDATE",
            "MASS_PREPAYMENT_INVOICE_CREATION",
            "MASS_PREPAYMENT_INVOICE_WORKFLOW",
            "MASS_PRINT_DROPSHIPPING_ORDER_DELIVERY_NOTE",
            "MASS_PRINT_PRODUCTION_ORDER",
            "MASS_PRINT_PURCHASE_ORDER_DOCUMENTS",
            "MASS_PRINT_RETURNS_PICKUP_NOTE",
            "MASS_PRINT_RETURNS_RETURN_NOTE",
            "MASS_PRINT_RETURN_DELIVERY_NOTE",
            "MASS_PROCESS_DROPSHIPPING_ORDER",
            "MASS_PRODUCTION_ORDER_CANCELLATION",
            "MASS_PRODUCTION_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PRODUCTION_ORDER_DELETION",
            "MASS_PRODUCTION_ORDER_ITEM_ARTICLE_EXCHANGE",
            "MASS_PRODUCTION_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PRODUCTION_ORDER_MATERIAL_ITEMS_UPDATE",
            "MASS_PRODUCTION_ORDER_PICKING_LIST_CREATION",
            "MASS_PRODUCTION_ORDER_REOPEN",
            "MASS_PRODUCTION_ORDER_UPDATE",
            "MASS_PRODUCTION_ORDER_UPDATE_FORM_TEXTS",
            "MASS_PROJECT_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PROJECT_UPDATE",
            "MASS_PURCHASE_CREDIT_NOTE_COMPLETE_WORKFLOW",
            "MASS_PURCHASE_INVOICE_BACK_TO_ENTRY",
            "MASS_PURCHASE_INVOICE_BOOK_ACCOUNTING",
            "MASS_PURCHASE_INVOICE_CANCEL",
            "MASS_PURCHASE_INVOICE_COMPLETE_WORKFLOW",
            "MASS_PURCHASE_INVOICE_CREATE_CREDIT_NOTE",
            "MASS_PURCHASE_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_INVOICE_DELETE",
            "MASS_PURCHASE_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_INVOICE_ITEM_UPDATE",
            "MASS_PURCHASE_INVOICE_RESET_TAXES",
            "MASS_PURCHASE_INVOICE_SHIPPING_COST_ITEM_UPDATE",
            "MASS_PURCHASE_INVOICE_UPDATE",
            "MASS_PURCHASE_ORDER_CANCEL",
            "MASS_PURCHASE_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_ORDER_DELETION",
            "MASS_PURCHASE_ORDER_INVOICE_COMPLETE_WORKFLOW",
            "MASS_PURCHASE_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_ORDER_ITEM_UPDATE",
            "MASS_PURCHASE_ORDER_REOPEN",
            "MASS_PURCHASE_ORDER_SEND_EMAIL",
            "MASS_PURCHASE_ORDER_UPDATE",
            "MASS_PURCHASE_ORDER_UPDATE_FORM_TEXTS",
            "MASS_PURCHASE_REQUEST_CANCEL",
            "MASS_PURCHASE_REQUEST_CLOSE",
            "MASS_PURCHASE_REQUEST_CREATE_DOCUMENTS",
            "MASS_PURCHASE_REQUEST_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_REQUEST_DELETION",
            "MASS_PURCHASE_REQUEST_REOPEN",
            "MASS_PURCHASE_REQUEST_SEND_EMAIL",
            "MASS_PURCHASE_REQUEST_UPDATE",
            "MASS_PURCHASE_REQUEST_UPDATE_FORM_TEXTS",
            "MASS_RECORD_ADDRESS_FROM_CRM_UPDATE",
            "MASS_RECORD_EMAIL_ADDRESS_FROM_CRM_UPDATE",
            "MASS_RECURRING_CREATE_INVOICE",
            "MASS_RECURRING_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_RECURRING_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_RECURRING_INVOICE_ITEM_UPDATE",
            "MASS_RECURRING_INVOICE_UPDATE",
            "MASS_RECURRING_INVOICE_UPDATE_FORM_TEXTS",
            "MASS_RECURRING_RECALCULATION_COST",
            "MASS_REGION_UPDATE",
            "MASS_REMINDER_DELETION",
            "MASS_REMINDER_UPDATE",
            "MASS_RESET_CLEAR_OPEN_ITEM",
            "MASS_SALES_BILL_OF_MATERIAL_ITEM_UPDATE",
            "MASS_SALES_INVOICE_BACK_TO_ENTRY",
            "MASS_SALES_INVOICE_BOOK_ACCOUNTING",
            "MASS_SALES_INVOICE_CANCEL",
            "MASS_SALES_INVOICE_CREATE_CREDIT_NOTE",
            "MASS_SALES_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_INVOICE_DELETE",
            "MASS_SALES_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_INVOICE_ITEM_UPDATE",
            "MASS_SALES_INVOICE_RECALCULATE_COSTS",
            "MASS_SALES_INVOICE_RESET_TAXES",
            "MASS_SALES_INVOICE_SHIPPING_COST_ITEM_UPDATE",
            "MASS_SALES_INVOICE_UPDATE",
            "MASS_SALES_INVOICE_UPDATE_FORM_TEXTS",
            "MASS_SALES_ORDER_CASH_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_ORDER_COMPLETE_WORKFLOW",
            "MASS_SALES_ORDER_CREATE_PERFORMANCE_RECORD",
            "MASS_SALES_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_ORDER_ITEM_UPDATE",
            "MASS_SALES_ORDER_SEND_EMAIL",
            "MASS_SALES_PRICE_ADD_SPECIAL_PRICE",
            "MASS_SALES_PRICE_DELETION",
            "MASS_SAVE_ORDER_CONFIRMED",
            "MASS_SEPA_MAIN_BANK_UPDATE",
            "MASS_SERIALNUMBER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SET_ORDERS_SHIPPED",
            "MASS_SHIPMENT_ARRIVAL_CANCEL",
            "MASS_SHIPMENT_ARRIVAL_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_ARRIVAL_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_COMPLETE_WORKFLOW",
            "MASS_SHIPMENT_COMPLETE_WORKFLOW_FOR_SALES_ORDER",
            "MASS_SHIPMENT_CREATION",
            "MASS_SHIPMENT_INCOMING_DELETE",
            "MASS_SHIPMENT_INCOMING_REOPEN",
            "MASS_SHIPMENT_INCOMING_UPDATE",
            "MASS_SHIPMENT_INCOMING_UPDATE_FORM_TEXTS",
            "MASS_SHIPMENT_INVOICE_CREATION",
            "MASS_SHIPMENT_OUTGOING_BACK_TO_ENTRY",
            "MASS_SHIPMENT_OUTGOING_CANCEL",
            "MASS_SHIPMENT_OUTGOING_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_OUTGOING_DELETE",
            "MASS_SHIPMENT_OUTGOING_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_OUTGOING_RETURN_LABEL_CREATION",
            "MASS_SHIPMENT_OUTGOING_UPDATE",
            "MASS_SHIPMENT_OUTGOING_UPDATE_FORM_TEXTS",
            "MASS_SHIPPING_CARRIER_UPDATE",
            "MASS_SHIPPING_CONFIRMATION_OF_ARRIVAL_CREATION",
            "MASS_SHIPPING_CONFIRMATION_OF_ARRIVAL_SEND_EMAIL",
            "MASS_SHIPPING_LABEL_CREATION",
            "MASS_SHIPPING_NOTE_CREATION",
            "MASS_SHIPPING_RETURN_LABEL_CREATION",
            "MASS_SHIP_IN",
            "MASS_SHIP_OUT",
            "MASS_STANDARD_INVOICE_CREATION",
            "MASS_STANDARD_INVOICE_WORKFLOW",
            "MASS_START_PRODUCTION_ORDER",
            "MASS_STOCK_BATCH_NUMBER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_STORAGE_PLACE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_STORAGE_PLACE_DELETE",
            "MASS_STORAGE_PLACE_UPDATE",
            "MASS_SUPPLIER_PRICE_DELETION",
            "MASS_SUPPLIER_RETURN_DELETE",
            "MASS_TAG_DELETE",
            "MASS_TASK_BILLING_DATA_UPDATE",
            "MASS_TASK_CREATE_PERFORMANCE_RECORD",
            "MASS_TASK_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
            "MASS_TASK_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TASK_DELETION",
            "MASS_TASK_UPDATE",
            "MASS_TAX_DELETE",
            "MASS_TAX_RESET",
            "MASS_TEAMVIEWER_DOWNLOAD_TIME_ENTRIES",
            "MASS_TICKET_CATEGORY_UPDATE",
            "MASS_TICKET_CREATE_PERFORMANCE_RECORD",
            "MASS_TICKET_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
            "MASS_TICKET_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TICKET_DELETE",
            "MASS_TICKET_FAQ_COPY",
            "MASS_TICKET_FAQ_UPDATE",
            "MASS_TICKET_LINK_TO_SALES_ORDER",
            "MASS_TICKET_MERGE",
            "MASS_TICKET_SLA_RECALCULATE",
            "MASS_TICKET_STATUS_UPDATE",
            "MASS_TICKET_UPDATE",
            "MASS_TIME_RECORD_CREATE_PERFORMANCE_RECORD",
            "MASS_TIME_RECORD_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
            "MASS_TIME_RECORD_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TIME_RECORD_MOVE",
            "MASS_TIME_RECORD_UPDATE",
            "MASS_TRANSACTION_BOOKING",
            "MASS_TRANSACTION_CLEARING",
            "MASS_TRANSACTION_DELETE",
            "MASS_TRANSACTION_PROCESSING",
            "MASS_TRANSACTION_REMOVE_PAYMENTAPPLICATIONS",
            "MASS_TRANSACTION_RESET_IGNORE",
            "MASS_TRANSACTION_SET_IGNORE",
            "MASS_TRANSPORTATION_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TRANSPORTATION_ORDER_PICKING_LIST_CREATION",
            "MASS_UPDATE_CONTRACT_PRICES",
            "MASS_UPDATE_OFFER_PRICES",
            "MASS_UPDATE_RECURRING_INVOICE_PRICES",
            "MASS_UPDATE_SALES_INVOICE_PRICES",
            "MASS_UPDATE_SALES_ORDER_PRICES",
            "MASS_VARIANT_ARTICLE_DELETION",
            "MATERIAL_PLANNING_RUN",
            "OFFER_EXPORT",
            "OTTO_ARTICLE_UPLOAD_CHECK_SYNC",
            "OTTO_WECLAPP_ARTICLE_SYNC",
            "OTTO_WECLAPP_CREDIT_NOTE_SYNC",
            "OTTO_WECLAPP_INVOICE_SYNC",
            "OTTO_WECLAPP_ORDER_SYNC",
            "PRESTA_WECLAPP_ARTICLE_SYNC",
            "PRESTA_WECLAPP_CUSTOMER_SYNC",
            "PRESTA_WECLAPP_ORDER_SYNC",
            "PRICE_CALCULATION_ARTICLE",
            "PURCHASE_INVOICE_EXPORT",
            "PURCHASE_INVOICE_SHIPPING_COST_EXPORT",
            "PURCHASE_ORDER_EXPORT",
            "PURCHASE_ORDER_REQUEST_SEND_EMAIL",
            "RECEIVED_INVOICE_IMPORT",
            "RECURRING_INVOICE_INVOICE_CREATION",
            "RESET_ACCOUNTING",
            "RESET_BUSINESS_TRANSACTIONS",
            "SALES_INVOICE_EXPORT",
            "SALES_INVOICE_SHIPPING_COST_ITEMS_EXPORT",
            "SALES_INVOICE_XRECHNUNG_EXPORT",
            "SALES_ORDER_EXPORT",
            "SHIPMENTIN_EXPORT",
            "SHIPMENTOUT_EXPORT",
            "SHOPIFY_WECLAPP_ARTICLE_SYNC",
            "SHOPIFY_WECLAPP_CUSTOMER_SYNC",
            "SHOPIFY_WECLAPP_ORDER_SYNC",
            "SHOPIFY_WECLAPP_PAYMENT_SYNC",
            "SHOPWARE6_WECLAPP_ARTICLE_SYNC",
            "SHOPWARE6_WECLAPP_CUSTOMER_SYNC",
            "SHOPWARE6_WECLAPP_ORDER_SYNC",
            "SHOPWARE_WECLAPP_ARTICLE_SYNC",
            "SHOPWARE_WECLAPP_CUSTOMER_SYNC",
            "SHOPWARE_WECLAPP_ORDER_SYNC",
            "SYNAXON_WECLAPP_ARTICLE_UPDATE",
            "TRANSUS_SALES_INVOICE_XML_CREATION",
            "TRANSUS_SHIPMENT_XML_CREATION",
            "TRANSUS_WECLAPP_ORDER_SYNC",
            "WECLAPP_AMAZON_OUTBOUND_SHIPMENT_SYNC",
            "WECLAPP_AMAZON_STOCK_SYNC",
            "WECLAPP_EBAY_LISTING_STOCK_SYNC",
            "WECLAPP_EBAY_ORDER_SYNC",
            "WECLAPP_ITSCOPE_ARTICLE_PRICE_UPDATE",
            "WECLAPP_ITSCOPE_ORDER_SYNC",
            "WECLAPP_KAUFLAND_ARTICLE_SYNC",
            "WECLAPP_KAUFLAND_ORDER_SYNC",
            "WECLAPP_KAUFLAND_STOCK_SYNC",
            "WECLAPP_MAGENTO2_ARTICLE_SYNC",
            "WECLAPP_MAGENTO2_ORDER_SYNC",
            "WECLAPP_MAGENTO2_STOCK_SYNC",
            "WECLAPP_MAGENTO_ARTICLE_SYNC",
            "WECLAPP_MAGENTO_ORDER_SYNC",
            "WECLAPP_MAGENTO_STOCK_SYNC",
            "WECLAPP_OTTO_ARTICLE_SYNC",
            "WECLAPP_OTTO_ORDER_SYNC",
            "WECLAPP_OTTO_STOCK_SYNC",
            "WECLAPP_PRESTA_ARTICLE_SYNC",
            "WECLAPP_PRESTA_CUSTOMER_SYNC",
            "WECLAPP_PRESTA_ORDER_SYNC",
            "WECLAPP_PRESTA_STOCK_SYNC",
            "WECLAPP_SALES_ORDER_AMAZON_REPORT_SYNC",
            "WECLAPP_SHOPIFY_ARTICLE_SYNC",
            "WECLAPP_SHOPIFY_ORDER_SYNC",
            "WECLAPP_SHOPIFY_STOCK_SYNC",
            "WECLAPP_SHOPWARE6_ARTICLE_SYNC",
            "WECLAPP_SHOPWARE6_ORDER_SYNC",
            "WECLAPP_SHOPWARE6_STOCK_SYNC",
            "WECLAPP_SHOPWARE_ARTICLE_SYNC",
            "WECLAPP_SHOPWARE_CUSTOMER_SYNC",
            "WECLAPP_SHOPWARE_ORDER_SYNC",
            "WECLAPP_SHOPWARE_STOCK_SYNC",
            "WECLAPP_TO_AMAZON_ARTICLE_REPORT_SYNC",
            "WECLAPP_TO_AMAZON_REPORT_SYNC",
            "WECLAPP_TO_SHOPIFY_CUSTOMER_SYNC",
            "WECLAPP_TO_SHOPWARE6_CUSTOMER_SYNC",
            "WECLAPP_TO_WECLAPP_ARTICLE_PUSH",
            "WECLAPP_TO_WECLAPP_CUSTOM_ATTRIBUTES_PULL",
            "WECLAPP_TO_WECLAPP_DELETION",
            "WECLAPP_TO_WECLAPP_OFFER_PULL",
            "WECLAPP_TO_WECLAPP_OTHER_DATA_PUSH",
            "WECLAPP_TO_WECLAPP_PARTY_PULL",
            "WECLAPP_TO_WECLAPP_PARTY_PUSH",
            "WECLAPP_TO_WECLAPP_PURCHASE_ORDERS_AS_SALES_ORDERS_PULL",
            "WECLAPP_TO_WECLAPP_PURCHASE_ORDER_PUSH",
            "WECLAPP_TO_WECLAPP_SALES_ORDER_PULL",
            "WECLAPP_TO_WECLAPP_STORE_PUSH",
            "WECLAPP_TO_WECLAPP_SUPPLIER_STOCK_SYNC",
            "WECLAPP_TO_WECLAPP_TICKET_PULL",
            "WECLAPP_TO_WECLAPP_USER_PULL",
            "WECLAPP_WOOCOMMERCE_ARTICLE_SYNC",
            "WECLAPP_WOOCOMMERCE_ORDER_SYNC",
            "WECLAPP_WOOCOMMERCE_STOCK_SYNC",
            "WOOCOMMERCE_WECLAPP_ARTICLE_SYNC",
            "WOOCOMMERCE_WECLAPP_CUSTOMER_SYNC",
            "WOOCOMMERCE_WECLAPP_ORDER_SYNC",
            "XT_WECLAPP_ARTICLE_SYNC",
            "XT_WECLAPP_ORDER_SYNC"
          ],
          "type": "string"
        },
        "newValues": {
          "type": "object"
        },
        "oldValues": {
          "type": "object"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "autoCreateDunningRunSettings": {
      "properties": {
        "autoProcessStartDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "autoSentDunningRunItemsViaEmail": {
          "type": "boolean"
        },
        "baossUserId": {
          "type": "string"
        },
        "enable": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "bankAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountHolder": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "accountNumber": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "autoSync": {
          "type": "boolean"
        },
        "automaticProcessing": {
          "enum": [
            "BOOK",
            "CLEAR",
            "NONE",
            "PROCESS"
          ],
          "type": "string"
        },
        "balance": {
          "format": "number",
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "connectionFailure": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creditInstitute": {
          "type": "string"
        },
        "creditInstituteCity": {
          "type": "string"
        },
        "creditInstituteStreet": {
          "type": "string"
        },
        "creditInstituteZip": {
          "type": "string"
        },
        "creditLine": {
          "format": "number",
          "type": "string"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "differentSepaCreditorIdentifier": {
          "type": "string"
        },
        "enabledForElectronicPaymentTransactions": {
          "type": "boolean"
        },
        "iban": {
          "type": "string"
        },
        "incidentalCostsOfMonetaryTrafficAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "incidentalCostsOfMonetaryTrafficTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "lastDownload": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "primary": {
          "type": "boolean"
        },
        "qrIban": {
          "type": "string"
        },
        "qrIdentifier": {
          "type": "string"
        },
        "swiftBic": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "basicArticleSettings": {
      "properties": {
        "availableInSale": {
          "type": "boolean"
        },
        "baseUnitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "showOnDeliveryNote": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "basicSettings": {
      "properties": {
        "unit": {
          "$ref": "#/definitions/unitSettings"
        }
      },
      "type": "object"
    },
    "batchBooking": {
      "properties": {
        "batchBookingRecords": {
          "items": {
            "$ref": "#/definitions/batchBookingRecord"
          },
          "type": "array"
        },
        "bookingText": {
          "type": "string"
        },
        "costCenterId": {
          "type": "string"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "externalRecordNumber": {
          "type": "string"
        },
        "transactionDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "batchBookingRecord": {
      "properties": {
        "amount": {
          "format": "number",
          "type": "string"
        },
        "creditAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "debitAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "description": {
          "type": "string"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        }
      },
      "type": "object"
    },
    "batchNumber": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "batchNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "expirationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "articleId",
        "batchNumber"
      ],
      "type": "object"
    },
    "batchSerialNumber": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "batchNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "expirationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "serialNumbers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "billOfMaterial": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        }
      },
      "required": [
        "articleId",
        "quantity"
      ],
      "type": "object"
    },
    "blanketPurchaseOrder": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "blanketPurchaseOrderNumber": {
          "type": "string"
        },
        "calculationMode": {
          "enum": [
            "ROUND_SUMS_TO_0_05"
          ],
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "confirmationNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "description": {
          "type": "string"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "formSettingsFromDistributionChannel": {
          "type": "string"
        },
        "headerDiscount": {
          "format": "number",
          "type": "string"
        },
        "headerSurcharge": {
          "format": "number",
          "type": "string"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "nonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "orderDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "orderQuantity": {
          "format": "number",
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "recipientCountryCode": {
          "type": "string"
        },
        "recordAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "recordComment": {
          "type": "string"
        },
        "recordCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "recordEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordOpening": {
          "type": "string"
        },
        "reductionAdditionItems": {
          "items": {
            "$ref": "#/definitions/reductionAdditionItem"
          },
          "type": "array"
        },
        "releases": {
          "items": {
            "$ref": "#/definitions/releases"
          },
          "type": "array"
        },
        "residualQuantity": {
          "format": "number",
          "type": "string"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "senderCountryCode": {
          "type": "string"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "shipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "CONFIRMED",
            "DOCUMENT_PRINTED",
            "NEW"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/blanketPurchaseOrderStatusHistory"
          },
          "type": "array"
        },
        "supplierBlanketPurchaseOrderNumber": {
          "type": "string"
        },
        "supplierId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "supplierQuotationNumber": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "useManualUnitPrice": {
          "type": "boolean"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        }
      },
      "required": [
        "articleId",
        "status",
        "supplierId"
      ],
      "type": "object"
    },
    "blanketPurchaseOrderStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "CONFIRMED",
            "DOCUMENT_PRINTED",
            "NEW"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "businessHolidays": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "baossUserCreatedId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "companyDefault": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "baossUserCreatedId",
        "name"
      ],
      "type": "object"
    },
    "businessHours": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "baossUserCreatedId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "companyDefault": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "baossUserCreatedId",
        "name"
      ],
      "type": "object"
    },
    "calendar": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "caldavAccountId": {
          "type": "string"
        },
        "calendarColor": {
          "type": "string"
        },
        "calendarKey": {
          "type": "string"
        },
        "calendarSharingPermissions": {
          "items": {
            "$ref": "#/definitions/calendarSharingPermissions"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastEventsSyncToken": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "mailAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ownerId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "sharePrivateEvents": {
          "type": "boolean"
        },
        "synchronize": {
          "type": "boolean"
        }
      },
      "required": [
        "calendarColor",
        "name"
      ],
      "type": "object"
    },
    "calendarEvent": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "allDayEvent": {
          "type": "boolean"
        },
        "attendees": {
          "items": {
            "$ref": "#/definitions/calendarEventAttendee"
          },
          "type": "array"
        },
        "calendarId": {
          "type": "string",
          "x-relatedEntityName": "calendar"
        },
        "concerningId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "contactId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "location": {
          "type": "string"
        },
        "privateEvent": {
          "type": "boolean"
        },
        "recurringEvent": {
          "$ref": "#/definitions/recurringEvent"
        },
        "references": {
          "items": {
            "$ref": "#/definitions/entityReference"
          },
          "type": "array"
        },
        "reminderSendType": {
          "enum": [
            "MAIL",
            "NOTIFICATION"
          ],
          "type": "string"
        },
        "reminderTime": {
          "format": "int32",
          "type": "integer"
        },
        "showAs": {
          "enum": [
            "BUSY",
            "FREE",
            "OUT_OF_OFFICE",
            "TENTATIVE"
          ],
          "type": "string"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "subject": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "required": [
        "calendarId",
        "endDate",
        "startDate",
        "subject"
      ],
      "type": "object"
    },
    "calendarEventAttendee": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "attendeeStatus": {
          "enum": [
            "ACCEPT",
            "CANCEL",
            "DECLINE",
            "INVITATION",
            "TENTATIVE",
            "UNDEFINED"
          ],
          "type": "string"
        },
        "calendarEventId": {
          "type": "string",
          "x-relatedEntityName": "calendarEvent"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "eventPermission": {
          "enum": [
            "CAN_MODIFY_EVERYTHING",
            "CAN_MODIFY_EVERYTHING_BUT_NOT_PARTICIPIENT_LIST",
            "CAN_MODIFY_ONLY_PARTICIPIENT_LIST",
            "CAN_NOT_MODIFY_ANYTHING"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "calendarSharingPermissions": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "permissionType": {
          "enum": [
            "ADMIN",
            "READ",
            "READ_WRITE"
          ],
          "type": "string"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "campaign": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "campaignEndDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "campaignName": {
          "type": "string"
        },
        "campaignNumber": {
          "type": "string"
        },
        "campaignStartDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "campaignType": {
          "enum": [
            "ADVERTISEMENT",
            "BULKMAIL",
            "EMAIL",
            "EVENT",
            "EXPOSITION",
            "FAIR",
            "OTHER",
            "PUBLICRELATION",
            "TELEMARKETING",
            "WEBINAR"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        }
      },
      "required": [
        "campaignName"
      ],
      "type": "object"
    },
    "campaignParticipant": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "campaignId": {
          "type": "string",
          "x-relatedEntityName": "campaign"
        },
        "campaignNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "participation": {
          "type": "boolean"
        },
        "partyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        }
      },
      "required": [
        "partyId"
      ],
      "type": "object"
    },
    "cashAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "openingBalance": {
          "format": "number",
          "type": "string"
        },
        "treasurerId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "required": [
        "currencyId",
        "treasurerId"
      ],
      "type": "object"
    },
    "cashAccountCashCountItem": {
      "properties": {
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "cashAccountSheet": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "cashAccountId": {
          "type": "string",
          "x-relatedEntityName": "cashAccount"
        },
        "cashCountItems": {
          "items": {
            "$ref": "#/definitions/cashAccountCashCountItem"
          },
          "type": "array"
        },
        "closed": {
          "type": "boolean"
        },
        "closingBalance": {
          "format": "number",
          "type": "string"
        },
        "closingExplanation": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "openingBalance": {
          "format": "number",
          "type": "string"
        },
        "openingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "sheetNumber": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "cashAccountId",
        "sheetNumber"
      ],
      "type": "object"
    },
    "comment": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "authorName": {
          "type": "string"
        },
        "authorUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "authorUserUsername": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "entityId": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "htmlComment": {
          "type": "string"
        },
        "lastEditDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "parentCommentId": {
          "type": "string",
          "x-relatedEntityName": "comment"
        },
        "privateComment": {
          "type": "boolean"
        },
        "publicComment": {
          "type": "boolean"
        },
        "recipientUsers": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "solution": {
          "type": "boolean"
        }
      },
      "required": [
        "comment"
      ],
      "type": "object"
    },
    "commercialLanguage": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "languageCode": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "languageCode"
      ],
      "type": "object"
    },
    "commissionRunSalesSettingsDto": {
      "properties": {
        "addZeroAmountItemForPartnersWithNoCommission": {
          "type": "boolean"
        },
        "considerOnlyPaidInvoices": {
          "type": "boolean"
        },
        "includeShippingCostItems": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "commissionSalesPartner": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "commissionFix": {
          "format": "number",
          "type": "string"
        },
        "commissionPercentage": {
          "format": "number",
          "type": "string"
        },
        "commissionType": {
          "enum": [
            "FIX",
            "FIX_AND_MARGIN",
            "FIX_AND_REVENUE",
            "MARGIN",
            "NO_COMMISSION",
            "REVENUE"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "salesPartnerSupplierId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "salesPartnerSupplierNumber": {
          "type": "string"
        }
      },
      "required": [
        "commissionType",
        "salesPartnerSupplierId"
      ],
      "type": "object"
    },
    "conditionsForEntityType": {
      "properties": {
        "entityType": {
          "enum": [
            "article",
            "articleSupplySource",
            "batchNumber",
            "blanketPurchaseOrder",
            "blanketSalesOrder",
            "campaign",
            "competitor",
            "contract",
            "contractItem",
            "crmEvent",
            "customer",
            "incomingGoods",
            "incomingGoodsItem",
            "opportunity",
            "party",
            "performanceRecord",
            "performanceRecordItem",
            "productionOrder",
            "productionOrderItem",
            "project",
            "purchaseInvoice",
            "purchaseInvoiceItem",
            "purchaseOrder",
            "purchaseOrderItem",
            "purchaseOrderRequest",
            "purchaseOrderRequestItem",
            "purchaseRequisition",
            "quotation",
            "quotationItem",
            "recurringInvoice",
            "recurringInvoiceItem",
            "salesInvoice",
            "salesInvoiceItem",
            "salesOrder",
            "salesOrderItem",
            "serialNumber",
            "shipment",
            "shipmentItem",
            "storageLocation",
            "storagePlace",
            "supplier",
            "task",
            "ticket",
            "timeRecord",
            "transportationOrder",
            "user",
            "warehouse",
            "warehouseStockMovement"
          ],
          "type": "string"
        },
        "propertyConditions": {
          "items": {
            "$ref": "#/definitions/customAttributeDefinitionPropertyCondition"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "contact": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addresses": {
          "items": {
            "$ref": "#/definitions/address"
          },
          "type": "array"
        },
        "birthDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "company": {
          "type": "string"
        },
        "company2": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerCategoryId": {
          "type": "string",
          "x-relatedEntityName": "customerCategory"
        },
        "customerCategoryName": {
          "type": "string"
        },
        "deliveryAddressId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "fixPhone2": {
          "type": "string"
        },
        "invoiceAddressId": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "mobilePhone1": {
          "type": "string"
        },
        "mobilePhone2": {
          "type": "string"
        },
        "onlineAccounts": {
          "items": {
            "$ref": "#/definitions/onlineAccount"
          },
          "type": "array"
        },
        "optIn": {
          "type": "boolean"
        },
        "optInLetter": {
          "type": "boolean"
        },
        "optInPhone": {
          "type": "boolean"
        },
        "optInSms": {
          "type": "boolean"
        },
        "partyType": {
          "enum": [
            "ORGANIZATION",
            "PERSON"
          ],
          "type": "string"
        },
        "personCompany": {
          "type": "string"
        },
        "personDepartmentId": {
          "type": "string",
          "x-relatedEntityName": "personDepartment"
        },
        "personRoleId": {
          "type": "string",
          "x-relatedEntityName": "personRole"
        },
        "phone": {
          "type": "string"
        },
        "phoneHome": {
          "type": "string"
        },
        "primaryAddressId": {
          "type": "string"
        },
        "salutation": {
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ],
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "titleId": {
          "type": "string",
          "x-relatedEntityName": "title"
        },
        "website": {
          "type": "string"
        }
      },
      "required": [
        "partyType"
      ],
      "type": "object"
    },
    "contract": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "additionalAddresses": {
          "items": {
            "$ref": "#/definitions/contractAdditionalAddress"
          },
          "type": "array"
        },
        "authorizationUnitId": {
          "type": "string",
          "x-relatedEntityName": "contractAuthorizationUnit"
        },
        "automaticExtension": {
          "type": "boolean"
        },
        "billUntil": {
          "enum": [
            "CURRENT_MONTH_1",
            "CURRENT_MONTH_10",
            "CURRENT_MONTH_11",
            "CURRENT_MONTH_12",
            "CURRENT_MONTH_13",
            "CURRENT_MONTH_14",
            "CURRENT_MONTH_15",
            "CURRENT_MONTH_16",
            "CURRENT_MONTH_17",
            "CURRENT_MONTH_18",
            "CURRENT_MONTH_19",
            "CURRENT_MONTH_2",
            "CURRENT_MONTH_20",
            "CURRENT_MONTH_21",
            "CURRENT_MONTH_22",
            "CURRENT_MONTH_23",
            "CURRENT_MONTH_24",
            "CURRENT_MONTH_25",
            "CURRENT_MONTH_26",
            "CURRENT_MONTH_27",
            "CURRENT_MONTH_28",
            "CURRENT_MONTH_29",
            "CURRENT_MONTH_3",
            "CURRENT_MONTH_30",
            "CURRENT_MONTH_31",
            "CURRENT_MONTH_4",
            "CURRENT_MONTH_5",
            "CURRENT_MONTH_6",
            "CURRENT_MONTH_7",
            "CURRENT_MONTH_8",
            "CURRENT_MONTH_9",
            "NEXT_MONTH_1",
            "NEXT_MONTH_10",
            "NEXT_MONTH_11",
            "NEXT_MONTH_12",
            "NEXT_MONTH_13",
            "NEXT_MONTH_14",
            "NEXT_MONTH_15",
            "NEXT_MONTH_16",
            "NEXT_MONTH_17",
            "NEXT_MONTH_18",
            "NEXT_MONTH_19",
            "NEXT_MONTH_2",
            "NEXT_MONTH_20",
            "NEXT_MONTH_21",
            "NEXT_MONTH_22",
            "NEXT_MONTH_23",
            "NEXT_MONTH_24",
            "NEXT_MONTH_25",
            "NEXT_MONTH_26",
            "NEXT_MONTH_27",
            "NEXT_MONTH_28",
            "NEXT_MONTH_29",
            "NEXT_MONTH_3",
            "NEXT_MONTH_30",
            "NEXT_MONTH_31",
            "NEXT_MONTH_4",
            "NEXT_MONTH_5",
            "NEXT_MONTH_6",
            "NEXT_MONTH_7",
            "NEXT_MONTH_8",
            "NEXT_MONTH_9"
          ],
          "type": "string"
        },
        "billingDay": {
          "format": "int32",
          "type": "integer"
        },
        "billingTargetInvoiceStatus": {
          "enum": [
            "DOCUMENT_CREATED",
            "NEW",
            "OPEN_ITEM_CREATED"
          ],
          "type": "string"
        },
        "billingType": {
          "enum": [
            "INVOICE_AFTER",
            "INVOICE_BEFORE",
            "NONE",
            "NOT_INVOICEABLE",
            "SALES_ORDER"
          ],
          "type": "string"
        },
        "cancellationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "cancellationPeriodQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "cancellationPeriodSoftframe": {
          "enum": [
            "CONTRACT_END",
            "END_OF_CALENDAR_YEAR",
            "END_OF_CONTRACT_YEAR",
            "END_OF_MONTH",
            "END_OF_QUARTER",
            "FIFTEENTH_OF_MONTH",
            "FIFTEENTH_OR_END_OF_MONTH",
            "HALF_OF_CALENDAR_YEAR"
          ],
          "type": "string"
        },
        "cancellationPeriodUnit": {
          "enum": [
            "DAY",
            "MONTH",
            "WEEK",
            "YEAR"
          ],
          "type": "string"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        },
        "commissionSalesPartners": {
          "items": {
            "$ref": "#/definitions/commissionSalesPartner"
          },
          "type": "array"
        },
        "contractCostItems": {
          "items": {
            "$ref": "#/definitions/contractCostItem"
          },
          "type": "array"
        },
        "contractDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "contractItems": {
          "items": {
            "$ref": "#/definitions/contractItem"
          },
          "type": "array"
        },
        "contractNumber": {
          "type": "string"
        },
        "contractNumberAtParty": {
          "type": "string"
        },
        "contractStatus": {
          "enum": [
            "ACTIVE",
            "DRAFT",
            "INACTIVE"
          ],
          "type": "string"
        },
        "correspondenceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "deliveryEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "description": {
          "type": "string"
        },
        "differingCorrespondenceAddress": {
          "type": "boolean"
        },
        "differingDeliveryAddress": {
          "type": "boolean"
        },
        "differingInvoiceAddress": {
          "type": "boolean"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "extensionQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "extensionUnit": {
          "enum": [
            "DAY",
            "MONTH",
            "WEEK",
            "YEAR"
          ],
          "type": "string"
        },
        "factoring": {
          "type": "boolean"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "invoiceRecipientId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "latestCancellationWarningQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "latestCancellationWarningUnit": {
          "enum": [
            "DAY",
            "MONTH",
            "WEEK",
            "YEAR"
          ],
          "type": "string"
        },
        "latestPossibleTerminationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "nextContractBillingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "nonStandardInputTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "orderNumberAtCustomer": {
          "type": "string"
        },
        "partyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "pricingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "purchaseEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordComment": {
          "type": "string"
        },
        "recordCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "recordCurrencyName": {
          "type": "string"
        },
        "recordEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordOpening": {
          "type": "string"
        },
        "reminderDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "reminderSendType": {
          "enum": [
            "MAIL",
            "NOTIFICATION"
          ],
          "type": "string"
        },
        "reminderType": {
          "enum": [
            "AUTOMATIC_REMINDER",
            "DATE_REMINDER",
            "NO_REMINDER"
          ],
          "type": "string"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "salesChannel": {
          "type": "string"
        },
        "salesInvoiceEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "salesOrderEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "template": {
          "type": "boolean"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "terminationReasonId": {
          "type": "string",
          "x-relatedEntityName": "contractTerminationReason"
        },
        "ticketServiceLevelAgreementId": {
          "type": "string",
          "x-relatedEntityName": "ticketServiceLevelAgreement"
        },
        "types": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "unlimited": {
          "type": "boolean"
        }
      },
      "required": [
        "contractStatus",
        "recordCurrencyId"
      ],
      "type": "object"
    },
    "contractAdditionalAddress": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/recordAddress"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "contractAuthorizationUnit": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "contractBillingSettings": {
      "properties": {
        "billUntil": {
          "enum": [
            "CURRENT_MONTH_1",
            "CURRENT_MONTH_10",
            "CURRENT_MONTH_11",
            "CURRENT_MONTH_12",
            "CURRENT_MONTH_13",
            "CURRENT_MONTH_14",
            "CURRENT_MONTH_15",
            "CURRENT_MONTH_16",
            "CURRENT_MONTH_17",
            "CURRENT_MONTH_18",
            "CURRENT_MONTH_19",
            "CURRENT_MONTH_2",
            "CURRENT_MONTH_20",
            "CURRENT_MONTH_21",
            "CURRENT_MONTH_22",
            "CURRENT_MONTH_23",
            "CURRENT_MONTH_24",
            "CURRENT_MONTH_25",
            "CURRENT_MONTH_26",
            "CURRENT_MONTH_27",
            "CURRENT_MONTH_28",
            "CURRENT_MONTH_29",
            "CURRENT_MONTH_3",
            "CURRENT_MONTH_30",
            "CURRENT_MONTH_31",
            "CURRENT_MONTH_4",
            "CURRENT_MONTH_5",
            "CURRENT_MONTH_6",
            "CURRENT_MONTH_7",
            "CURRENT_MONTH_8",
            "CURRENT_MONTH_9",
            "NEXT_MONTH_1",
            "NEXT_MONTH_10",
            "NEXT_MONTH_11",
            "NEXT_MONTH_12",
            "NEXT_MONTH_13",
            "NEXT_MONTH_14",
            "NEXT_MONTH_15",
            "NEXT_MONTH_16",
            "NEXT_MONTH_17",
            "NEXT_MONTH_18",
            "NEXT_MONTH_19",
            "NEXT_MONTH_2",
            "NEXT_MONTH_20",
            "NEXT_MONTH_21",
            "NEXT_MONTH_22",
            "NEXT_MONTH_23",
            "NEXT_MONTH_24",
            "NEXT_MONTH_25",
            "NEXT_MONTH_26",
            "NEXT_MONTH_27",
            "NEXT_MONTH_28",
            "NEXT_MONTH_29",
            "NEXT_MONTH_3",
            "NEXT_MONTH_30",
            "NEXT_MONTH_31",
            "NEXT_MONTH_4",
            "NEXT_MONTH_5",
            "NEXT_MONTH_6",
            "NEXT_MONTH_7",
            "NEXT_MONTH_8",
            "NEXT_MONTH_9"
          ],
          "type": "string"
        },
        "billingDay": {
          "format": "int32",
          "type": "integer"
        },
        "billingGroupId": {
          "type": "string",
          "x-relatedEntityName": "contractBillingGroup"
        },
        "billingType": {
          "enum": [
            "INVOICE_AFTER",
            "INVOICE_BEFORE",
            "NONE",
            "NOT_INVOICEABLE",
            "SALES_ORDER"
          ],
          "type": "string"
        },
        "desiredInvoiceStatus": {
          "enum": [
            "DOCUMENT_CREATED",
            "NEW",
            "OPEN_ITEM_CREATED"
          ],
          "type": "string"
        },
        "desiredSalesOrderStatus": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "MANUALLY_CLOSED",
            "ORDER_CONFIRMATION_PRINTED",
            "ORDER_ENTRY_IN_PROGRESS"
          ],
          "type": "string"
        },
        "paymentMethodTypeId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        }
      },
      "type": "object"
    },
    "contractCostItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "interval": {
          "enum": [
            "DAILY",
            "FIVE_YEARLY",
            "FOUR_YEARLY",
            "HALF_YEARLY",
            "MONTHLY",
            "NONE",
            "QUARTER",
            "THREE_YEARLY",
            "TWO_YEARLY",
            "WEEKLY",
            "YEARLY"
          ],
          "type": "string"
        },
        "intervalType": {
          "enum": [
            "NON_RECURRENT",
            "RECURRENT"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "required": [
        "interval",
        "intervalType"
      ],
      "type": "object"
    },
    "contractGeneralSettings": {
      "properties": {
        "automaticallyRecalculateDaily": {
          "type": "boolean"
        },
        "reapplyMasterDataWhenGeneratingDocument": {
          "type": "boolean"
        },
        "reapplyTaxRulesWhenGeneratingDocument": {
          "type": "boolean"
        },
        "showContractWithNoAuthorisationUnit": {
          "type": "boolean"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "DRAFT",
            "INACTIVE"
          ],
          "type": "string"
        },
        "terminationPeriodQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "terminationPeriodSoftframe": {
          "enum": [
            "CONTRACT_END",
            "END_OF_CALENDAR_YEAR",
            "END_OF_CONTRACT_YEAR",
            "END_OF_MONTH",
            "END_OF_QUARTER",
            "FIFTEENTH_OF_MONTH",
            "FIFTEENTH_OR_END_OF_MONTH",
            "HALF_OF_CALENDAR_YEAR"
          ],
          "type": "string"
        },
        "terminationPeriodUnit": {
          "enum": [
            "DAY",
            "MONTH",
            "WEEK",
            "YEAR"
          ],
          "type": "string"
        },
        "typeIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "unlimited": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "contractItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addPageBreakBefore": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "billingGroupId": {
          "type": "string",
          "x-relatedEntityName": "contractBillingGroup"
        },
        "commissionSalesPartners": {
          "items": {
            "$ref": "#/definitions/commissionSalesPartner"
          },
          "type": "array"
        },
        "costTypeId": {
          "type": "string",
          "x-relatedEntityName": "costType"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "interval": {
          "enum": [
            "DAILY",
            "FIVE_YEARLY",
            "FOUR_YEARLY",
            "HALF_YEARLY",
            "MONTHLY",
            "NONE",
            "QUARTER",
            "THREE_YEARLY",
            "TWO_YEARLY",
            "WEEKLY",
            "YEARLY"
          ],
          "type": "string"
        },
        "intervalType": {
          "enum": [
            "NON_RECURRENT",
            "RECURRENT"
          ],
          "type": "string"
        },
        "itemType": {
          "enum": [
            "DEFAULT",
            "FREE_TEXT",
            "SERVICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatistics": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatisticsInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "nextContractBillingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "note": {
          "type": "string"
        },
        "parentItemId": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "previousContractBillingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditionItems": {
          "items": {
            "$ref": "#/definitions/reductionAdditionItem"
          },
          "type": "array"
        },
        "servicePeriodFromDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodToDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "enum": [
            "COST",
            "REVENUE"
          ],
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "required": [
        "interval",
        "intervalType",
        "type"
      ],
      "type": "object"
    },
    "contractItemsSettings": {
      "properties": {
        "automaticallyRenumberContractCharges": {
          "type": "boolean"
        },
        "chargeInterval": {
          "enum": [
            "DAILY",
            "FIVE_YEARLY",
            "FOUR_YEARLY",
            "HALF_YEARLY",
            "MONTHLY",
            "NONE",
            "QUARTER",
            "THREE_YEARLY",
            "TWO_YEARLY",
            "WEEKLY",
            "YEARLY"
          ],
          "type": "string"
        },
        "chargeIntervalType": {
          "enum": [
            "NON_RECURRENT",
            "RECURRENT"
          ],
          "type": "string"
        },
        "groupName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "contractOptionalWorkflowActionsSettings": {
      "properties": {
        "updateRecordPrices": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "contractSettings": {
      "properties": {
        "billing": {
          "$ref": "#/definitions/contractBillingSettings"
        },
        "general": {
          "$ref": "#/definitions/contractGeneralSettings"
        },
        "items": {
          "$ref": "#/definitions/contractItemsSettings"
        },
        "optionalWorkflowActions": {
          "$ref": "#/definitions/contractOptionalWorkflowActionsSettings"
        }
      },
      "type": "object"
    },
    "costCenter": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "costCenterGroupId": {
          "type": "string",
          "x-relatedEntityName": "costCenterGroup"
        },
        "costCenterNumber": {
          "type": "string"
        },
        "costCenterType": {
          "enum": [
            "DIRECT_COST_CENTER",
            "INDIRECT_COST_CENTER",
            "SERVICE_COST_CENTER"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "costCenterNumber",
        "costCenterType"
      ],
      "type": "object"
    },
    "costCenterWithDistributionPercentage": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "costCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        },
        "costCenterNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "distributionPercentage": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "costCenterId",
        "distributionPercentage"
      ],
      "type": "object"
    },
    "costType": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "countResult": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "crmEvent": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "callCategoryId": {
          "type": "string",
          "x-relatedEntityName": "crmCallCategory"
        },
        "contactId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorUserId": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "eventCategoryId": {
          "type": "string",
          "x-relatedEntityName": "crmEventCategory"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "location": {
          "type": "string"
        },
        "opportunityId": {
          "type": "string",
          "x-relatedEntityName": "opportunity"
        },
        "partyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "subject": {
          "type": "string"
        },
        "type": {
          "enum": [
            "GENERAL",
            "INCOMING_CALL",
            "LETTER",
            "OUTGOING_CALL"
          ],
          "type": "string"
        }
      },
      "required": [
        "partyId",
        "subject",
        "type"
      ],
      "type": "object"
    },
    "crmSettings": {
      "properties": {
        "userSettings": {
          "$ref": "#/definitions/crmUserSettings"
        }
      },
      "type": "object"
    },
    "crmUserSettings": {
      "properties": {
        "syncGroupwareContactsMailAccountId": {
          "type": "string",
          "x-relatedEntityName": "mailAccount"
        }
      },
      "type": "object"
    },
    "crossCheckInvoiceWithPurchaseOrderSettings": {
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "maximumDifferenceInPercent": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "currency": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencySymbol": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "customAttribute": {
      "properties": {
        "attributeDefinitionId": {
          "type": "string",
          "x-relatedEntityName": "customAttributeDefinition"
        },
        "booleanValue": {
          "type": "boolean"
        },
        "dateValue": {
          "format": "timestamp",
          "type": "integer"
        },
        "entityId": {
          "type": "string"
        },
        "entityReferences": {
          "items": {
            "$ref": "#/definitions/entityReference"
          },
          "type": "array"
        },
        "numberValue": {
          "format": "number",
          "type": "string"
        },
        "selectedValueId": {
          "type": "string"
        },
        "selectedValues": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "stringValue": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customAttributeDefinition": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "attributeDescription": {
          "type": "string"
        },
        "attributeEntityType": {
          "enum": [
            "article",
            "blanketPurchaseOrder",
            "blanketSalesOrder",
            "campaign",
            "contract",
            "customer",
            "incomingGoods",
            "opportunity",
            "party",
            "performanceRecord",
            "productionOrder",
            "project",
            "purchaseInvoice",
            "purchaseOrder",
            "purchaseOrderRequest",
            "quotation",
            "recurringInvoice",
            "salesInvoice",
            "salesOrder",
            "serialNumber",
            "shipment",
            "supplier",
            "ticket",
            "user"
          ],
          "type": "string"
        },
        "attributeKey": {
          "type": "string"
        },
        "attributeLabels": {
          "items": {
            "$ref": "#/definitions/customAttributeDefinitionTranslation"
          },
          "type": "array"
        },
        "attributeType": {
          "enum": [
            "BOOLEAN",
            "DATE",
            "DECIMAL",
            "ENTITY",
            "INTEGER",
            "LARGE_TEXT",
            "LIST",
            "MULTISELECT_LIST",
            "REFERENCE",
            "STRING",
            "URL"
          ],
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/customAttributeDefinitionConditions"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "defaultBooleanValue": {
          "type": "boolean"
        },
        "defaultDateValue": {
          "format": "timestamp",
          "type": "integer"
        },
        "defaultNumberValue": {
          "format": "number",
          "type": "string"
        },
        "defaultStringValue": {
          "type": "string"
        },
        "entities": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "groupName": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "legacyEntities": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mandatory": {
          "type": "boolean"
        },
        "permissions": {
          "items": {
            "$ref": "#/definitions/customAttributeDefinitionPermission"
          },
          "type": "array"
        },
        "publicPageTypes": {
          "items": {
            "enum": [
              "PURCHASE_ORDER_REQUEST",
              "QUOTATION"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "readOnly": {
          "type": "boolean"
        },
        "selectableValues": {
          "items": {
            "$ref": "#/definitions/customAttributeDefinitionListValue"
          },
          "type": "array"
        },
        "showAttributeEntityType": {
          "type": "boolean"
        },
        "showInOverview": {
          "type": "boolean"
        },
        "showOnCreationDialog": {
          "type": "boolean"
        },
        "systemCustomAttribute": {
          "type": "boolean"
        }
      },
      "required": [
        "attributeType",
        "label"
      ],
      "type": "object"
    },
    "customAttributeDefinitionConditions": {
      "properties": {
        "conditionsForEntityType": {
          "items": {
            "$ref": "#/definitions/conditionsForEntityType"
          },
          "type": "array"
        },
        "ignoreConditionsIfValueIsSet": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "customAttributeDefinitionListValue": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "defaultValue": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customAttributeDefinitionOrder": {
      "properties": {
        "id": {
          "type": "string"
        },
        "overrideGroupName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customAttributeDefinitionPermission": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "permissionType": {
          "enum": [
            "READ",
            "READ_AND_UPDATE"
          ],
          "type": "string"
        },
        "userRoleId": {
          "type": "string",
          "x-relatedEntityName": "userRole"
        }
      },
      "required": [
        "permissionType"
      ],
      "type": "object"
    },
    "customAttributeDefinitionPropertyCondition": {
      "properties": {
        "conditionOperator": {
          "enum": [
            "EQUAL",
            "NOT_EQUAL"
          ],
          "type": "string"
        },
        "propertyName": {
          "type": "string"
        },
        "propertyType": {
          "enum": [
            "BOOLEAN",
            "STRING"
          ],
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customAttributeDefinitionTranslation": {
      "properties": {
        "labelText": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customValue": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "customer": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addresses": {
          "items": {
            "$ref": "#/definitions/address"
          },
          "type": "array"
        },
        "amountInsured": {
          "format": "number",
          "type": "string"
        },
        "annualRevenue": {
          "format": "number",
          "type": "string"
        },
        "bankAccounts": {
          "items": {
            "$ref": "#/definitions/partyBankAccount"
          },
          "type": "array"
        },
        "birthDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "blockNotice": {
          "type": "string"
        },
        "blocked": {
          "type": "boolean"
        },
        "commercialLanguageId": {
          "type": "string",
          "x-relatedEntityName": "commercialLanguage"
        },
        "commissionSalesPartners": {
          "items": {
            "$ref": "#/definitions/commissionSalesPartner"
          },
          "type": "array"
        },
        "company": {
          "type": "string"
        },
        "company2": {
          "type": "string"
        },
        "companySizeId": {
          "type": "string",
          "x-relatedEntityName": "companySize"
        },
        "companySizeName": {
          "type": "string"
        },
        "contacts": {
          "items": {
            "$ref": "#/definitions/contact"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creditLimit": {
          "format": "number",
          "type": "string"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerCategoryId": {
          "type": "string",
          "x-relatedEntityName": "customerCategory"
        },
        "customerCategoryName": {
          "type": "string"
        },
        "customerNumber": {
          "type": "string"
        },
        "customerRatingId": {
          "type": "string",
          "x-relatedEntityName": "partyRating"
        },
        "customerRatingName": {
          "type": "string"
        },
        "customerSupplierNumber": {
          "type": "string"
        },
        "customerTopics": {
          "items": {
            "$ref": "#/definitions/entity"
          },
          "type": "array"
        },
        "defaultHeaderDiscount": {
          "format": "number",
          "type": "string"
        },
        "defaultHeaderSurcharge": {
          "format": "number",
          "type": "string"
        },
        "deliveryAddressId": {
          "type": "string"
        },
        "deliveryBlock": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "insolvent": {
          "type": "boolean"
        },
        "insured": {
          "type": "boolean"
        },
        "invoiceAddressId": {
          "type": "string"
        },
        "invoiceBlock": {
          "type": "boolean"
        },
        "invoiceRecipientId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "leadSourceId": {
          "type": "string",
          "x-relatedEntityName": "leadSource"
        },
        "leadSourceName": {
          "type": "string"
        },
        "lossDescription": {
          "type": "string"
        },
        "lossReasonId": {
          "type": "string",
          "x-relatedEntityName": "customerLeadLossReason"
        },
        "lossReasonName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "mobilePhone1": {
          "type": "string"
        },
        "nonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "oldCustomerNumber": {
          "type": "string"
        },
        "onlineAccounts": {
          "items": {
            "$ref": "#/definitions/onlineAccount"
          },
          "type": "array"
        },
        "optIn": {
          "type": "boolean"
        },
        "optInLetter": {
          "type": "boolean"
        },
        "optInPhone": {
          "type": "boolean"
        },
        "optInSms": {
          "type": "boolean"
        },
        "parentPartyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "partyType": {
          "enum": [
            "ORGANIZATION",
            "PERSON"
          ],
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "personCompany": {
          "type": "string"
        },
        "personDepartmentId": {
          "type": "string",
          "x-relatedEntityName": "personDepartment"
        },
        "personRoleId": {
          "type": "string",
          "x-relatedEntityName": "personRole"
        },
        "phone": {
          "type": "string"
        },
        "primaryAddressId": {
          "type": "string"
        },
        "primaryContactId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "referenceNumber": {
          "type": "string"
        },
        "responsibleUserFixed": {
          "type": "boolean"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        },
        "salesStageId": {
          "type": "string",
          "x-relatedEntityName": "salesStage"
        },
        "salesStageName": {
          "type": "string"
        },
        "salutation": {
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ],
          "type": "string"
        },
        "satisfaction": {
          "enum": [
            "NEUTRAL",
            "SATISFIED",
            "UNSATISFIED"
          ],
          "type": "string"
        },
        "sectorId": {
          "type": "string",
          "x-relatedEntityName": "sector"
        },
        "sectorName": {
          "type": "string"
        },
        "shipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "shipmentMethodName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "termOfPaymentName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "titleId": {
          "type": "string",
          "x-relatedEntityName": "title"
        },
        "useCustomsTariffNumber": {
          "type": "boolean"
        },
        "vatRegistrationNumber": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      },
      "required": [
        "partyType"
      ],
      "type": "object"
    },
    "customerOperationalFigures": {
      "properties": {
        "amountOpenItems": {
          "format": "number",
          "type": "string"
        },
        "amountOverdue": {
          "format": "number",
          "type": "string"
        },
        "quotationAcceptanceRate": {
          "format": "number",
          "type": "string"
        },
        "quotationAcceptanceTimeInDays": {
          "format": "int64",
          "type": "integer"
        },
        "revenueCurrentYear": {
          "format": "number",
          "type": "string"
        },
        "revenuePreviousYear": {
          "format": "number",
          "type": "string"
        },
        "salesOrderVolumeCurrentYear": {
          "format": "number",
          "type": "string"
        },
        "salesOrderVolumePreviousYear": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "customerReturnSalesSettingsDto": {
      "properties": {
        "copyShippingCosts": {
          "type": "boolean"
        },
        "defaultShippingCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "presetBatchNumbers": {
          "type": "boolean"
        },
        "presetSerialNumbers": {
          "type": "boolean"
        },
        "useDefaultLevel": {
          "type": "boolean"
        },
        "workflowActions": {
          "$ref": "#/definitions/customerReturnWorkflowSettings"
        }
      },
      "type": "object"
    },
    "customerReturnWorkflowSettings": {
      "properties": {
        "printLabels": {
          "type": "boolean"
        },
        "printReturnLabels": {
          "type": "boolean"
        },
        "printReturnNote": {
          "type": "boolean"
        },
        "printReturnsPickupNote": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "customerSpecificArticleAttributes": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customerArticleNumber": {
          "type": "string"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "customerArticleNumber",
        "customerId"
      ],
      "type": "object"
    },
    "datevSettings": {
      "properties": {
        "version": {
          "enum": [
            "V5",
            "V7",
            "V_141"
          ],
          "type": "string"
        },
        "consultantNumber": {
          "format": "int32",
          "type": "integer"
        },
        "impersonalAccountNumberLength": {
          "format": "int32",
          "type": "integer"
        },
        "kne": {
          "type": "boolean"
        },
        "recordInformation2ValueForExport": {
          "enum": [
            "DUE_DATE",
            "EMPTY",
            "TERM_OF_PAYMENT_FOREIGN_REFERENCE"
          ],
          "type": "string"
        },
        "shareInvoiceDocuments": {
          "type": "boolean"
        },
        "tenantNumber": {
          "format": "int32",
          "type": "integer"
        },
        "useDatevConnectOnline": {
          "type": "boolean"
        }
      },
      "required": [
        "version"
      ],
      "type": "object"
    },
    "defaultProjectOrderTeamUserDataSettings": {
      "properties": {
        "role": {
          "enum": [
            "MANAGER",
            "USER"
          ],
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "demoTestSystemInfo": {
      "properties": {
        "createPossible": {
          "type": "boolean"
        },
        "creationInProgress": {
          "type": "boolean"
        },
        "demoInstanceUrl": {
          "type": "string"
        },
        "mainInstanceUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "document": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "documentSize": {
          "format": "int32",
          "type": "integer"
        },
        "documentType": {
          "enum": [
            "ARTICLE_DATASHEET",
            "ARTICLE_LABEL",
            "BLANKET_PURCHASE_ORDER",
            "BLANKET_SALES_ORDER",
            "CANCELLATION_UBL",
            "CANCELLATION_XR",
            "CONTRACT",
            "CREDIT_ADVICE",
            "CREDIT_ADVICE_CANCELLATION",
            "CREDIT_ADVICE_PRELIMINARY_INVOICE",
            "CREDIT_ADVICE_UBL",
            "CREDIT_ADVICE_XR",
            "CRM_EVENT_LETTER",
            "CUSTOMER_ARTICLE_PRICE_LIST",
            "DUNNING",
            "INCOMING_GOODS",
            "INCOMING_GOODS_FROM_RETURN",
            "INCOMING_GOODS_RETURNS_PICKUP_NOTE",
            "INVENTORY_TAKING",
            "PERFORMANCE_RECORD",
            "PRODUCTION_ORDER",
            "PURCHASE_INVOICE",
            "PURCHASE_INVOICE_FATTURAPA",
            "PURCHASE_INVOICE_ZUGFERD",
            "PURCHASE_ORDER",
            "PURCHASE_ORDER_CANCELLATION",
            "PURCHASE_ORDER_DEFAULT",
            "PURCHASE_ORDER_REQUEST",
            "PURCHASE_ORDER_REQUEST_OFFER_ITEM_CSV",
            "PURCHASE_ORDER_REQUEST_SUPPLIER_DOCUMENT",
            "QUOTATION",
            "QUOTATION_DEFAULT",
            "SALES_INVOICE",
            "SALES_INVOICE_CANCELLATION",
            "SALES_INVOICE_DEFAULT",
            "SALES_INVOICE_FATTURAPA",
            "SALES_INVOICE_PRELIMINARY",
            "SALES_INVOICE_QR",
            "SALES_INVOICE_UBL",
            "SALES_INVOICE_XR",
            "SALES_ORDER",
            "SALES_ORDER_DEFAULT",
            "SHIPMENT_CUSTOMS_DECLARATION",
            "SHIPMENT_DELIVERY_LABEL",
            "SHIPMENT_DELIVERY_NOTE",
            "SHIPMENT_DELIVERY_NOTE_DEFAULT",
            "SHIPMENT_PICKING_LIST",
            "SHIPMENT_PROFORMA_INVOICE",
            "SHIPMENT_RETURN_DELIVERY_NOTE",
            "SHIPMENT_RETURN_LABEL",
            "SHIPMENT_SERIAL_NUMBERS_CSV",
            "TICKET",
            "ZUGFERD_VALIDATION"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "mediaType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "versions": {
          "items": {
            "$ref": "#/definitions/documentVersion"
          },
          "type": "array"
        }
      },
      "required": [
        "mediaType",
        "name"
      ],
      "type": "object"
    },
    "documentVersion": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "documentSize": {
          "format": "int32",
          "type": "integer"
        },
        "documentVersion": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "dropshippingSettings": {
      "properties": {
        "advancePaymentSalesOrderAutomaticCreationEvent": {
          "enum": [
            "NONE",
            "OPEN_ITEM_PAID_ADVANCE_PAYMENT",
            "OPEN_ITEM_PAID_PREPAYMENT",
            "ORDER_CONFIRMATION_CREATED"
          ],
          "type": "string"
        },
        "allowFreeTextItemsFromSalesOrder": {
          "type": "boolean"
        },
        "allowManualItemsFromSalesOrder": {
          "type": "boolean"
        },
        "automaticCreationFinalStatus": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "CONFIRMED",
            "ORDER_DOCUMENTS_PRINTED",
            "ORDER_ENTRY_COMPLETED",
            "ORDER_ENTRY_IN_PROGRESS"
          ],
          "type": "string"
        },
        "automaticCreationMode": {
          "enum": [
            "ALWAYS",
            "IF_ARTICLE_NOT_AVAILABLE",
            "NEVER"
          ],
          "type": "string"
        },
        "createDropshippingDeliveryNoteInAutomaticCreation": {
          "type": "boolean"
        },
        "createOrderDocumentsInAutomaticCreation": {
          "type": "boolean"
        },
        "differingInvoiceAddress": {
          "$ref": "#/definitions/addressSettingsDto"
        },
        "generateDummyBatchSerialNumbers": {
          "type": "boolean"
        },
        "ignoreMinimumAndFixedOrderQuantities": {
          "type": "boolean"
        },
        "invoiceAddressMode": {
          "enum": [
            "DIFFERING_INVOICE_ADDRESS",
            "PRIMARY_ADDRESS_FROM_COMPANY_DATA"
          ],
          "type": "string"
        },
        "onlyIncludeNotAvailableItemQuantity": {
          "type": "boolean"
        },
        "partPaymentSalesOrderAutomaticCreationEvent": {
          "enum": [
            "NONE",
            "OPEN_ITEM_PAID_ADVANCE_PAYMENT",
            "OPEN_ITEM_PAID_PREPAYMENT",
            "ORDER_CONFIRMATION_CREATED"
          ],
          "type": "string"
        },
        "prepaymentSalesOrderAutomaticCreationEvent": {
          "enum": [
            "NONE",
            "OPEN_ITEM_PAID_ADVANCE_PAYMENT",
            "OPEN_ITEM_PAID_PREPAYMENT",
            "ORDER_CONFIRMATION_CREATED"
          ],
          "type": "string"
        },
        "processDropshippingOrderInAutomaticCreation": {
          "type": "boolean"
        },
        "standardSalesOrderAutomaticCreationEvent": {
          "enum": [
            "NONE",
            "OPEN_ITEM_PAID_ADVANCE_PAYMENT",
            "OPEN_ITEM_PAID_PREPAYMENT",
            "ORDER_CONFIRMATION_CREATED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "dropshippingShipmentParameters": {
      "properties": {
        "deliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "deliveryNoteNumber": {
          "type": "string"
        },
        "shippingDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "dunningRunSettings": {
      "properties": {
        "attachOriginDocument": {
          "type": "boolean"
        },
        "autoCreateDunningRun": {
          "$ref": "#/definitions/autoCreateDunningRunSettings"
        },
        "calculateDueDateFromRunDate": {
          "type": "boolean"
        },
        "considerUnassignedCreditNotes": {
          "type": "boolean"
        },
        "considerUnassignedPayments": {
          "type": "boolean"
        },
        "defaultInterestEnabled": {
          "type": "boolean"
        },
        "distributionChannel": {
          "type": "string"
        },
        "doNotUpdateDueDateAndLevel": {
          "type": "boolean"
        },
        "dunningLevelFilterId": {
          "type": "string"
        },
        "feeInPercent": {
          "type": "boolean"
        },
        "ignoreDunningBlockSettings": {
          "type": "boolean"
        },
        "includeMaxLevelItems": {
          "type": "boolean"
        },
        "includePrepaymentInvoice": {
          "type": "boolean"
        },
        "minAmount": {
          "format": "number",
          "type": "string"
        },
        "oneDocumentPerLevel": {
          "type": "boolean"
        },
        "paymentMethodTypes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "waitingPeriod": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "duration": {
      "properties": {
        "durationSeconds": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ecommerceOrder": {
      "properties": {
        "ecommerceId": {
          "type": "string"
        },
        "externalConnectionId": {
          "type": "string",
          "x-relatedEntityName": "externalConnection"
        }
      },
      "required": [
        "ecommerceId",
        "externalConnectionId"
      ],
      "type": "object"
    },
    "emailAddresses": {
      "properties": {
        "bccAddresses": {
          "type": "string"
        },
        "ccAddresses": {
          "type": "string"
        },
        "toAddresses": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "entity": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "entityReference": {
      "properties": {
        "entityId": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "existingReservation": {
      "properties": {
        "pickId": {
          "type": "string"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "serialNumbers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "externalConnection": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "connectionType": {
          "enum": [
            "AMAZON",
            "BREVO",
            "CLEVERREACH",
            "DATEV_CONNECT_ONLINE_PROD",
            "DATEV_CONNECT_ONLINE_STAGING",
            "DHL",
            "EBAY",
            "FINTEC_SYSTEMS",
            "GOOGLEV3",
            "ITSCOPE",
            "JIRA",
            "KAUFLAND",
            "MAGENTO",
            "MAGENTO2",
            "MAILCHIMP",
            "MAPBOX",
            "MOLLIE_PROD",
            "MOLLIE_STAGING",
            "NAMIRIAL_2C_SOLUTION",
            "OTTO",
            "PRESTA",
            "SENDCLOUD",
            "SHIPCLOUD",
            "SHOPIFY",
            "SHOPWARE",
            "SHOPWARE6",
            "STRIPE_PROD",
            "STRIPE_STAGING",
            "SYNAXON",
            "TEAMVIEWER",
            "TINK",
            "VERSACOMMERCE",
            "WECLAPP2WECLAPP",
            "WOOCOMMERCE",
            "XTCOMMERCE"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "connectionType",
        "name"
      ],
      "type": "object"
    },
    "fastProductionBookingResult": {
      "properties": {
        "message": {
          "enum": [
            "INVALID_ORDER",
            "INVALID_ORDER_NUMBER",
            "INVALID_QUANTITY",
            "SUCCESS"
          ],
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "financialYear": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "periods": {
          "items": {
            "$ref": "#/definitions/period"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            "CLOSED",
            "CURRENT",
            "PLANNED",
            "PRELIMINARY_CLOSED"
          ],
          "type": "string"
        },
        "validFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "validTo": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "status"
      ],
      "type": "object"
    },
    "fulfillmentProvider": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "fulfillmentProviderType": {
          "enum": [
            "AMAZON",
            "EXTERNAL",
            "INTERNAL"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        }
      },
      "required": [
        "fulfillmentProviderType",
        "name"
      ],
      "type": "object"
    },
    "generalSalesSettingsDto": {
      "properties": {
        "addVariantDescriptionToRecordItemTitle": {
          "type": "boolean"
        },
        "allowManualArticlePricesInSales": {
          "type": "boolean"
        },
        "calculateGlobalAvailability": {
          "type": "boolean"
        },
        "copyRecordAddressWithContactEmailAddress": {
          "type": "boolean"
        },
        "fullFormTextsRefreshOnRecordRecipientChange": {
          "type": "boolean"
        },
        "fullItemRefreshOnRecordRecipientChange": {
          "type": "boolean"
        },
        "initialDeliveryDateMode": {
          "enum": [
            "CURRENT_DATE",
            "CURRENT_DATE_PLUS_AVG_DELIVERY_TIME",
            "DATE_FROM_HEADER",
            "NO_INITIALIZATION",
            "PLANNED_SHIPPING_DATE_ITEM_PLUS_AVG_DELIVERY_TIME"
          ],
          "type": "string"
        },
        "initialShippingDateMode": {
          "enum": [
            "CURRENT_DATE",
            "CURRENT_DATE_PLUS_PROCUREMENT_DAYS",
            "CURRENT_DATE_PLUS_PROCUREMENT_DAYS_FOR_UNAVAILABLE_ITEMS",
            "DATE_FROM_HEADER",
            "NO_INITIALIZATION"
          ],
          "type": "string"
        },
        "itemTaxCorrectionMode": {
          "enum": [
            "AUTO_CORRECT",
            "AllOW_IGNORE",
            "AllOW_WARN",
            "MANUAL_CORRECT"
          ],
          "type": "string"
        },
        "priceSearchInAnyCurrency": {
          "type": "boolean"
        },
        "renumberRecordItemsOnSave": {
          "type": "boolean"
        },
        "shippingCostEntry": {
          "type": "boolean"
        },
        "showInactiveShipmentMethodsInReports": {
          "type": "boolean"
        },
        "showPrecedingRecordDocuments": {
          "type": "boolean"
        },
        "useDefaultDocumentForMail": {
          "type": "boolean"
        },
        "usePrimaryContactsAddressAsRecordAddress": {
          "type": "boolean"
        }
      },
      "required": [
        "itemTaxCorrectionMode"
      ],
      "type": "object"
    },
    "groupwareContact": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addressBusiness": {
          "$ref": "#/definitions/groupwareContactAddress"
        },
        "addressHome": {
          "$ref": "#/definitions/groupwareContactAddress"
        },
        "birthDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "emailBusiness": {
          "type": "string"
        },
        "emailHome": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "mobileBusiness": {
          "type": "string"
        },
        "mobileHome": {
          "type": "string"
        },
        "personCompany": {
          "type": "string"
        },
        "phoneBusiness": {
          "type": "string"
        },
        "phoneHome": {
          "type": "string"
        },
        "salutation": {
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ],
          "type": "string"
        },
        "titleId": {
          "type": "string",
          "x-relatedEntityName": "title"
        },
        "titleName": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      },
      "required": [
        "lastName"
      ],
      "type": "object"
    },
    "groupwareContactAddress": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "postOfficeBoxCity": {
          "type": "string"
        },
        "postOfficeBoxNumber": {
          "type": "string"
        },
        "postOfficeBoxZipCode": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street1": {
          "type": "string"
        },
        "street2": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "headReductionAddition": {
      "properties": {
        "amount": {
          "format": "number",
          "type": "string"
        },
        "amountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "percent": {
          "format": "number",
          "type": "string"
        },
        "type": {
          "enum": [
            "ADDITION_PERCENT",
            "REDUCTION_PERCENT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "humanResourcesSettings": {
      "properties": {
        "enableEmployeeTimeTracking": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "incomingBooking": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleValuationPrice": {
          "format": "number",
          "type": "string"
        },
        "batchNumber": {
          "type": "string"
        },
        "bookIntoWarehouse": {
          "type": "boolean"
        },
        "confirmedByUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "confirmedByUserIdDeprecated": {
          "type": "string"
        },
        "confirmedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "confirmedDateDeprecated": {
          "format": "timestamp",
          "type": "integer"
        },
        "confirmedQuantityDeprecated": {
          "format": "number",
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "expirationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "incomingGoodsItemId": {
          "type": "string"
        },
        "internalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "loadingEquipmentIdentifierId": {
          "type": "string",
          "x-relatedEntityName": "loadingEquipmentIdentifier"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "serialNumbers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "storagePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        }
      },
      "required": [
        "quantity",
        "serialNumbers",
        "storagePlaceId"
      ],
      "type": "object"
    },
    "incomingGoods": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerDeliveryAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "customerInvoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "deliveryNoteNumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dhlReceiverId": {
          "type": "string"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "dropshippingShipmentId": {
          "type": "string",
          "x-relatedEntityName": "shipment"
        },
        "incomingGoodsItems": {
          "items": {
            "$ref": "#/definitions/incomingGoodsItem"
          },
          "type": "array"
        },
        "incomingGoodsNumber": {
          "type": "string"
        },
        "incomingGoodsType": {
          "enum": [
            "CUSTOMER_RETURN",
            "INTERNAL",
            "STANDARD",
            "SUPPLIER_COMPENSATION"
          ],
          "type": "string"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "invoiceRecipientId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "purchaseOrderId": {
          "type": "string",
          "x-relatedEntityName": "purchaseOrder"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "purchaseOrders": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "recipientAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "recordComment": {
          "type": "string"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordOpening": {
          "type": "string"
        },
        "relatedShipmentId": {
          "type": "string",
          "x-relatedEntityName": "shipment"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "returnAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "salesOrderId": {
          "type": "string",
          "x-relatedEntityName": "salesOrder"
        },
        "salesOrderNumber": {
          "type": "string"
        },
        "salesOrders": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "senderCustomerNumber": {
          "type": "string"
        },
        "senderPartyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "senderSupplierNumber": {
          "type": "string"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "shippingReturnCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "sourceWarehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        },
        "sourceWarehouseName": {
          "type": "string"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "DELIVERED",
            "DELIVERY_NOTE_PRINTED",
            "INCOMING_CANCELLED",
            "INCOMING_MOVED_INTO_STORE",
            "INCOMING_SHIPPED",
            "IN_ROUTE",
            "NEW",
            "SHIPPED"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/shipmentStatus"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        },
        "warehouseName": {
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "incomingGoodsItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "dropshippingShipmentItemId": {
          "type": "string",
          "x-relatedEntityName": "shipment"
        },
        "itemGroup": {
          "type": "string"
        },
        "itemType": {
          "enum": [
            "DEFAULT",
            "FREE_TEXT",
            "SERVICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "note": {
          "type": "string"
        },
        "parentItemId": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "purchaseOrderItemId": {
          "type": "string"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "returnAssessmentId": {
          "type": "string",
          "x-relatedEntityName": "shipmentReturnAssessment"
        },
        "returnAssessmentName": {
          "type": "string"
        },
        "returnDescription": {
          "type": "string"
        },
        "returnErrorId": {
          "type": "string",
          "x-relatedEntityName": "shipmentReturnError"
        },
        "returnErrorName": {
          "type": "string"
        },
        "returnReasonId": {
          "type": "string",
          "x-relatedEntityName": "shipmentReturnReason"
        },
        "returnReasonName": {
          "type": "string"
        },
        "returnRectificationId": {
          "type": "string",
          "x-relatedEntityName": "shipmentReturnRectification"
        },
        "returnRectificationName": {
          "type": "string"
        },
        "salesOrderItemId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "incomingGoodsSettings": {
      "properties": {
        "automaticallyCreateIncomingBookRecords": {
          "type": "boolean"
        },
        "considerHeaderRebatesInValuationPrice": {
          "type": "boolean"
        },
        "defaultStoragePlaceInitialisationMode": {
          "enum": [
            "USE_DEFAULT_LEVELS",
            "USE_WITH_SAME_ARTICLE_OR_EMPTY_LEVEL"
          ],
          "type": "string"
        },
        "workflowActions": {
          "$ref": "#/definitions/incomingGoodsWorkflowSettings"
        }
      },
      "required": [
        "defaultStoragePlaceInitialisationMode"
      ],
      "type": "object"
    },
    "incomingGoodsWorkflowSettings": {
      "properties": {
        "bookIntoWarehouseAndCompleteEntry": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "internalTransportReference": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "internalTransportReferenceNumber": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "loadingEquipmentArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "loadingEquipmentIdentifierId": {
          "type": "string",
          "x-relatedEntityName": "loadingEquipmentIdentifier"
        },
        "permanent": {
          "type": "boolean"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        }
      },
      "required": [
        "loadingEquipmentArticleId",
        "loadingEquipmentIdentifierId",
        "warehouseId"
      ],
      "type": "object"
    },
    "intrastatSettings": {
      "properties": {
        "intrastatExportThreshold": {
          "format": "number",
          "type": "string"
        },
        "intrastatImportThreshold": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "inventory": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "counter": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "inventoryGroupId": {
          "type": "string"
        },
        "inventoryNumber": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "levelOfDetail": {
          "enum": [
            "ARTICLE",
            "SERIAL_NUMBER",
            "STORAGE_PLACE",
            "WAREHOUSE"
          ],
          "type": "string"
        },
        "managerId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "recorder": {
          "type": "string"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "status": {
          "enum": [
            "BOOKED",
            "CANCELLED",
            "CLOSED",
            "COMPLETE",
            "DIFFERENCE_CHECKED",
            "DOCUMENTS_PRINTED",
            "NEW",
            "PLANNED",
            "STARTED"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/inventoryStatusHistory"
          },
          "type": "array"
        },
        "warehouseId": {
          "type": "string"
        }
      },
      "required": [
        "inventoryGroupId",
        "status",
        "warehouseId"
      ],
      "type": "object"
    },
    "inventoryGroup": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "inventoryItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "batchNumber": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "countedQuantity": {
          "format": "number",
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "expectedQuantity": {
          "format": "number",
          "type": "string"
        },
        "expirationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "inboundDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "inventoryId": {
          "type": "string",
          "x-relatedEntityName": "inventory"
        },
        "inventorySerialNumbers": {
          "items": {
            "$ref": "#/definitions/inventorySerialNumber"
          },
          "type": "array"
        },
        "inventoryTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "inventoryTransportReference"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualPosition": {
          "type": "boolean"
        },
        "orderItemId": {
          "type": "string"
        },
        "positionNumber": {
          "type": "string"
        },
        "replacementValue": {
          "format": "number",
          "type": "string"
        },
        "storagePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        }
      },
      "required": [
        "inventoryId"
      ],
      "type": "object"
    },
    "inventorySerialNumber": {
      "properties": {
        "serialNumber": {
          "type": "string"
        },
        "status": {
          "enum": [
            "CHECKED",
            "EXPECTED",
            "MANUALLY",
            "MISSING"
          ],
          "type": "string"
        }
      },
      "required": [
        "serialNumber",
        "status"
      ],
      "type": "object"
    },
    "inventoryStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "BOOKED",
            "CANCELLED",
            "CLOSED",
            "COMPLETE",
            "DIFFERENCE_CHECKED",
            "DOCUMENTS_PRINTED",
            "NEW",
            "PLANNED",
            "STARTED"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "inventoryTransportReference": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "internalTransportNumber": {
          "type": "string"
        },
        "inventoryId": {
          "type": "string",
          "x-relatedEntityName": "inventory"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "loadingEquipmentArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "loadingEquipmentIdentifierId": {
          "type": "string",
          "x-relatedEntityName": "loadingEquipmentIdentifier"
        },
        "manualReference": {
          "type": "boolean"
        }
      },
      "required": [
        "internalTransportNumber",
        "inventoryId",
        "loadingEquipmentArticleId",
        "loadingEquipmentIdentifierId"
      ],
      "type": "object"
    },
    "invoiceCompleteWorkflowSettings": {
      "properties": {
        "completeEntry": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "invoiceSalesSettingsDto": {
      "properties": {
        "addShippingAndDeliveryDataInItemDescriptionForPartialShipments": {
          "type": "boolean"
        },
        "addShippingCostsOnlyOnce": {
          "type": "boolean"
        },
        "addZugferdInformationToDocument": {
          "type": "boolean"
        },
        "defaultCollectiveInvoicePositionPrintType": {
          "enum": [
            "ORDER_POSITION_GROUP",
            "PERFORMANCE_RECORD_POSITION_GROUP",
            "SHIPMENT_POSITION_GROUP"
          ],
          "type": "string"
        },
        "itemsOfOrderBasedInvoicesEditable": {
          "type": "boolean"
        },
        "responsiblePersonId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsiblePersonInitialisationType": {
          "enum": [
            "CURRENT_USER_AS_RESPONSIBLE",
            "FIXED",
            "RESPONSIBLE_FROM_PREVIOUS",
            "RESPONSIBLE_FROM_SUPPLIER"
          ],
          "type": "string"
        },
        "shippingAndDeliveryDateInitialisationMode": {
          "enum": [
            "ORDER_PLANNED_SHIPPING_DELIVERY_DATE",
            "SENT_SHIPMENT_DATE",
            "SHIPMENT_SHIPPING_DELIVERY_DATE"
          ],
          "type": "string"
        },
        "usePaymentApplicationsInFinalInvoiceCalculation": {
          "type": "boolean"
        },
        "usePrintDateAsInvoiceDate": {
          "type": "boolean"
        },
        "workflowActions": {
          "$ref": "#/definitions/salesInvoiceWorkflowSettings"
        }
      },
      "required": [
        "shippingAndDeliveryDateInitialisationMode"
      ],
      "type": "object"
    },
    "itemPick": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "batchNumber": {
          "type": "string"
        },
        "bookedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "confirmedByUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "confirmedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "internalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "orderItemId": {
          "type": "string"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "serialNumbers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sourceInternalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "sourceStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "storagePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "transportationOrderId": {
          "type": "string"
        }
      },
      "required": [
        "quantity",
        "serialNumbers",
        "storagePlaceId"
      ],
      "type": "object"
    },
    "jobLogEntry": {
      "properties": {
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "entityReference": {
          "$ref": "#/definitions/entityReference"
        },
        "jobType": {
          "enum": [
            "ACCOUNTING_DATASTRUCTURE_MIGRATION",
            "ACCOUNTING_EXPORT",
            "ACCOUNT_BALANCES_TRANSFER",
            "ADAPT_SALES_STAGES",
            "AMAZON_ARTICLE_WECLAPP_ARTICLE_FBA_SYNC",
            "AMAZON_ARTICLE_WECLAPP_ARTICLE_SYNC",
            "AMAZON_CREATE_REPORTS",
            "AMAZON_INVOICE_UPLOAD",
            "AMAZON_REPORT_SALES_ORDER_FBA_SYNC",
            "AMAZON_REPORT_SALES_ORDER_SYNC",
            "AMAZON_SETTLEMENT_WECLAPP_SYNC",
            "AMAZON_WECLAPP_ARTICLE_FBA_SYNC",
            "AMAZON_WECLAPP_ARTICLE_SYNC",
            "AMAZON_WECLAPP_REPORT_FBA_SYNC",
            "AMAZON_WECLAPP_REPORT_SYNC",
            "AMAZON_WECLAPP_SETTLEMENT_SYNC",
            "ARTICLE_DELETION",
            "ARTICLE_KEY_FIGURES_EXPORT",
            "ARTICLE_PRICE_TO_AMAZON_REPORT_SYNC",
            "BREVO_CAMPAIGN_PARTICIPANT_EXPORT",
            "BREVO_CONTACT_EXPORT",
            "BREVO_CONTACT_IMPORT",
            "BREVO_CUSTOMER_EXPORT",
            "BREVO_LEAD_EXPORT",
            "CAMPAIGN_EMAIL_SENDING",
            "CLEVER_REACH_CAMPAIGN_PARTICIPANT_EXPORT",
            "CLEVER_REACH_CONTACT_EXPORT",
            "CLEVER_REACH_CONTACT_IMPORT",
            "CLEVER_REACH_CUSTOMER_EXPORT",
            "CLEVER_REACH_LEAD_EXPORT",
            "COMMISSION_RUN",
            "CONTRACT_BILLING",
            "DATEV_BBS_TRANSMISSION",
            "DATEV_BDS_TRANSMISSION",
            "DATEV_RDS_TRANSMISSION",
            "EBAY_WECLAPP_DELETION_REQUEST_SYNC",
            "EBAY_WECLAPP_LISTING_SYNC",
            "EBAY_WECLAPP_ORDER_SYNC",
            "EBAY_WECLAPP_PAYMENT_SYNC",
            "EBAY_WECLAPP_SELLER_PROFILE_SYNC",
            "ERIC_CREATE_ACCOUNT_SHEET",
            "FATTURAPA_IMPORT",
            "FATTURAPA_SALES_INVOICE_XML_CREATION",
            "GROUPWARE_CONTACT_CREATION",
            "IMPORT_VCARD",
            "INVENTORY_BOOKING",
            "INVENTORY_VALUATION",
            "INVENTORY_VALUTATION_EXPORT",
            "ITSCOPE_ARTICLE_PRICE_UPDATE",
            "ITSCOPE_WECLAPP_ARTICLE_SYNC",
            "ITSCOPE_WECLAPP_PURCHASE_ORDER_SYNC",
            "ITSCOPE_WECLAPP_SALES_ORDER_SYNC",
            "IT_SCOPE_QUOTATION_SYNC",
            "KAUFLAND_ARTICLE_UPLOAD_CHECK_SYNC",
            "KAUFLAND_INVOICE_UPLOAD",
            "KAUFLAND_WECLAPP_ARTICLE_SYNC",
            "KAUFLAND_WECLAPP_ORDER_SYNC",
            "LISTING_TO_EBAY_UPDATE_SYNC",
            "MAGENTO2_WECLAPP_ARTICLE_SYNC",
            "MAGENTO2_WECLAPP_CUSTOMER_SYNC",
            "MAGENTO2_WECLAPP_ORDER_SYNC",
            "MAGENTO_WECLAPP_ARTICLE_SYNC",
            "MAGENTO_WECLAPP_CUSTOMER_SYNC",
            "MAGENTO_WECLAPP_ORDER_SYNC",
            "MAIL_CHIMP_CAMPAIGN_PARTICIPANT_EXPORT",
            "MAIL_CHIMP_CONTACT_EXPORT",
            "MAIL_CHIMP_CONTACT_IMPORT",
            "MAIL_CHIMP_CUSTOMER_EXPORT",
            "MAIL_CHIMP_LEAD_EXPORT",
            "MAIL_TO_INVOICE_IMPORT",
            "MASS_ACCOUNTING_TRANSACTION_DELETE",
            "MASS_ACCOUNTING_TRANSACTION_UPDATE",
            "MASS_ADVANCE_PAYMENT_INVOICE_COMPLETE_WORKFLOW",
            "MASS_ADVANCE_PAYMENT_INVOICE_CREATION",
            "MASS_AMAZON_SHIPMENT_CREATION",
            "MASS_ARTICLE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_ARTICLE_PRINT_DATASHEET",
            "MASS_ARTICLE_SUPPLY_SOURCE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_ARTICLE_SUPPLY_SOURCE_DELETION",
            "MASS_ARTICLE_SUPPLY_SOURCE_UPDATE",
            "MASS_ARTICLE_UPDATE",
            "MASS_BILL_OF_MATERIAL_ITEM_UPDATE",
            "MASS_BLANKET_PURCHASE_ORDER_CANCEL",
            "MASS_BLANKET_PURCHASE_ORDER_COMPLETE",
            "MASS_BLANKET_PURCHASE_ORDER_CONFIRM_BY_SUPPLIER",
            "MASS_BLANKET_PURCHASE_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_BLANKET_PURCHASE_ORDER_DELETION",
            "MASS_BLANKET_PURCHASE_ORDER_PRINT",
            "MASS_BLANKET_PURCHASE_ORDER_REOPEN",
            "MASS_BLANKET_PURCHASE_ORDER_SEND_EMAIL",
            "MASS_BLANKET_PURCHASE_ORDER_UPDATE",
            "MASS_BLANKET_PURCHASE_ORDER_UPDATE_FORM_TEXTS",
            "MASS_BUSINESS_TIMES_DAY_OFF_DELETE",
            "MASS_CAMPAIGN_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CAMPAIGN_PARTICIPANTS_UPDATE",
            "MASS_CAMPAIGN_UPDATE",
            "MASS_CANCELLATION_SEND_EMAIL",
            "MASS_CANCEL_TRANSPORTATION_ORDER",
            "MASS_CLEAR_OPEN_ITEM",
            "MASS_CLOSE_SUPPLIER_ORDER",
            "MASS_COMPLETE_WORKFLOW_TRANSPORTATION_ORDER",
            "MASS_CONTRACT_CHARGE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CONTRACT_CHARGE_UPDATE",
            "MASS_CONTRACT_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CONTRACT_DELETION",
            "MASS_CONTRACT_PRINT_DOCUMENT",
            "MASS_CONTRACT_SEND_EMAIL",
            "MASS_CONTRACT_UPDATE",
            "MASS_CONTRACT_UPDATE_FORM_TEXTS",
            "MASS_CREATE_DROPSHIPPING_ORDER",
            "MASS_CREATE_SALES_ORDER_COMMISSION",
            "MASS_CREATE_TRANSPORTATION_ORDER_FROM_PICKING_BOOKS",
            "MASS_CREDIT_NOTE_COMPLETE_WORKFLOW",
            "MASS_CRM_EVENT_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CRM_EVENT_DELETION",
            "MASS_CRM_EVENT_UPDATE",
            "MASS_CUSTOMER_RETURN_DELETE",
            "MASS_DELETE_PICKING_BOOK_RECORD",
            "MASS_DELETION_TRANSPORTATION_ORDER",
            "MASS_DELIVERY_NOTE_SEND_EMAIL",
            "MASS_DOWNLOAD_BANK_TRANSACTION",
            "MASS_DUNNING_RUN_PROCESS_PROPOSALS",
            "MASS_DUNNING_RUN_SEND_EMAIL_DETAIL",
            "MASS_DUNNING_RUN_SEND_EMAIL_OVERVIEW",
            "MASS_EBAY_LISTINGS_DELETE",
            "MASS_EBAY_LISTING_UPDATE",
            "MASS_INTERNAL_TRANSPORT_REFERENCE_DELETION",
            "MASS_INTERNAL_TRANSPORT_REFERENCE_UPDATE",
            "MASS_INVOICE_BOOK",
            "MASS_INVOICE_CHECK",
            "MASS_INVOICE_COMPLETE_ENTRY",
            "MASS_INVOICE_COMPLETE_WORKFLOW",
            "MASS_INVOICE_CREATE_OPEN_ITEMS",
            "MASS_INVOICE_DOCUMENT_CREATION",
            "MASS_INVOICE_SEND_EMAIL",
            "MASS_INVOICE_VERIFIED",
            "MASS_IT_SCOPE_ARTICLE_CREATION",
            "MASS_IT_SCOPE_ORDER_SYNC",
            "MASS_LEDGER_ACCOUNT_UPDATE",
            "MASS_OFFER_ACCEPT",
            "MASS_OFFER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_OFFER_DELETE",
            "MASS_OFFER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_OFFER_ITEM_UPDATE",
            "MASS_OFFER_PRINT_DOCUMENT",
            "MASS_OFFER_RECALCULATE_COSTS",
            "MASS_OFFER_REJECT",
            "MASS_OFFER_RESET_TAXES",
            "MASS_OFFER_SEND_EMAIL",
            "MASS_OFFER_UPDATE",
            "MASS_OFFER_UPDATE_FORM_TEXTS",
            "MASS_OPPORTUNITY_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_OPPORTUNITY_DELETION",
            "MASS_OPPORTUNITY_UPDATE",
            "MASS_ORDER_CANCEL",
            "MASS_ORDER_CLOSE",
            "MASS_ORDER_CONFIRMATION_CREATION",
            "MASS_ORDER_DELETE",
            "MASS_ORDER_RECALCULATE_COSTS",
            "MASS_ORDER_REOPEN",
            "MASS_ORDER_RESET_TAXES",
            "MASS_ORDER_SHIPPING_LABEL_CREATION",
            "MASS_ORDER_SHIPPING_RETURN_LABEL_CREATION",
            "MASS_ORDER_UPDATE",
            "MASS_ORDER_UPDATE_FORM_TEXTS",
            "MASS_PARTY_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PARTY_DELETION",
            "MASS_PARTY_MERGE",
            "MASS_PARTY_SET_PRIMARY_CONTACT",
            "MASS_PARTY_UPDATE",
            "MASS_PART_PAYMENT_INVOICE_COMPLETE_WORKFLOW",
            "MASS_PART_PAYMENT_INVOICE_CREATION",
            "MASS_PAYMENT_RUN_PROCESS_PROPOSALS",
            "MASS_PERFORMANCE_RECORD_COMPLETE_WORKFLOW_FOR_SALES_ORDER",
            "MASS_PERFORMANCE_RECORD_CREATE_DOCUMENTS",
            "MASS_PERFORMANCE_RECORD_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PERFORMANCE_RECORD_DELETE",
            "MASS_PERFORMANCE_RECORD_INVOICING",
            "MASS_PERFORMANCE_RECORD_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PERFORMANCE_RECORD_RECORDING",
            "MASS_PERFORMANCE_RECORD_SEND_EMAIL",
            "MASS_PERFORMANCE_RECORD_UPDATE",
            "MASS_PERFORMANCE_RECORD_UPDATE_FORM_TEXTS",
            "MASS_PICKING_LIST_CREATION",
            "MASS_PM_REQUIREMENT_ITEM_UPDATE",
            "MASS_PREPAYMENT_INVOICE_CREATION",
            "MASS_PREPAYMENT_INVOICE_WORKFLOW",
            "MASS_PRINT_DROPSHIPPING_ORDER_DELIVERY_NOTE",
            "MASS_PRINT_PRODUCTION_ORDER",
            "MASS_PRINT_PURCHASE_ORDER_DOCUMENTS",
            "MASS_PRINT_RETURNS_PICKUP_NOTE",
            "MASS_PRINT_RETURNS_RETURN_NOTE",
            "MASS_PRINT_RETURN_DELIVERY_NOTE",
            "MASS_PROCESS_DROPSHIPPING_ORDER",
            "MASS_PRODUCTION_ORDER_CANCELLATION",
            "MASS_PRODUCTION_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PRODUCTION_ORDER_DELETION",
            "MASS_PRODUCTION_ORDER_ITEM_ARTICLE_EXCHANGE",
            "MASS_PRODUCTION_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PRODUCTION_ORDER_MATERIAL_ITEMS_UPDATE",
            "MASS_PRODUCTION_ORDER_PICKING_LIST_CREATION",
            "MASS_PRODUCTION_ORDER_REOPEN",
            "MASS_PRODUCTION_ORDER_UPDATE",
            "MASS_PRODUCTION_ORDER_UPDATE_FORM_TEXTS",
            "MASS_PROJECT_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PROJECT_UPDATE",
            "MASS_PURCHASE_CREDIT_NOTE_COMPLETE_WORKFLOW",
            "MASS_PURCHASE_INVOICE_BACK_TO_ENTRY",
            "MASS_PURCHASE_INVOICE_BOOK_ACCOUNTING",
            "MASS_PURCHASE_INVOICE_CANCEL",
            "MASS_PURCHASE_INVOICE_COMPLETE_WORKFLOW",
            "MASS_PURCHASE_INVOICE_CREATE_CREDIT_NOTE",
            "MASS_PURCHASE_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_INVOICE_DELETE",
            "MASS_PURCHASE_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_INVOICE_ITEM_UPDATE",
            "MASS_PURCHASE_INVOICE_RESET_TAXES",
            "MASS_PURCHASE_INVOICE_SHIPPING_COST_ITEM_UPDATE",
            "MASS_PURCHASE_INVOICE_UPDATE",
            "MASS_PURCHASE_ORDER_CANCEL",
            "MASS_PURCHASE_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_ORDER_DELETION",
            "MASS_PURCHASE_ORDER_INVOICE_COMPLETE_WORKFLOW",
            "MASS_PURCHASE_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_ORDER_ITEM_UPDATE",
            "MASS_PURCHASE_ORDER_REOPEN",
            "MASS_PURCHASE_ORDER_SEND_EMAIL",
            "MASS_PURCHASE_ORDER_UPDATE",
            "MASS_PURCHASE_ORDER_UPDATE_FORM_TEXTS",
            "MASS_PURCHASE_REQUEST_CANCEL",
            "MASS_PURCHASE_REQUEST_CLOSE",
            "MASS_PURCHASE_REQUEST_CREATE_DOCUMENTS",
            "MASS_PURCHASE_REQUEST_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_REQUEST_DELETION",
            "MASS_PURCHASE_REQUEST_REOPEN",
            "MASS_PURCHASE_REQUEST_SEND_EMAIL",
            "MASS_PURCHASE_REQUEST_UPDATE",
            "MASS_PURCHASE_REQUEST_UPDATE_FORM_TEXTS",
            "MASS_RECORD_ADDRESS_FROM_CRM_UPDATE",
            "MASS_RECORD_EMAIL_ADDRESS_FROM_CRM_UPDATE",
            "MASS_RECURRING_CREATE_INVOICE",
            "MASS_RECURRING_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_RECURRING_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_RECURRING_INVOICE_ITEM_UPDATE",
            "MASS_RECURRING_INVOICE_UPDATE",
            "MASS_RECURRING_INVOICE_UPDATE_FORM_TEXTS",
            "MASS_RECURRING_RECALCULATION_COST",
            "MASS_REGION_UPDATE",
            "MASS_REMINDER_DELETION",
            "MASS_REMINDER_UPDATE",
            "MASS_RESET_CLEAR_OPEN_ITEM",
            "MASS_SALES_BILL_OF_MATERIAL_ITEM_UPDATE",
            "MASS_SALES_INVOICE_BACK_TO_ENTRY",
            "MASS_SALES_INVOICE_BOOK_ACCOUNTING",
            "MASS_SALES_INVOICE_CANCEL",
            "MASS_SALES_INVOICE_CREATE_CREDIT_NOTE",
            "MASS_SALES_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_INVOICE_DELETE",
            "MASS_SALES_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_INVOICE_ITEM_UPDATE",
            "MASS_SALES_INVOICE_RECALCULATE_COSTS",
            "MASS_SALES_INVOICE_RESET_TAXES",
            "MASS_SALES_INVOICE_SHIPPING_COST_ITEM_UPDATE",
            "MASS_SALES_INVOICE_UPDATE",
            "MASS_SALES_INVOICE_UPDATE_FORM_TEXTS",
            "MASS_SALES_ORDER_CASH_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_ORDER_COMPLETE_WORKFLOW",
            "MASS_SALES_ORDER_CREATE_PERFORMANCE_RECORD",
            "MASS_SALES_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_ORDER_ITEM_UPDATE",
            "MASS_SALES_ORDER_SEND_EMAIL",
            "MASS_SALES_PRICE_ADD_SPECIAL_PRICE",
            "MASS_SALES_PRICE_DELETION",
            "MASS_SAVE_ORDER_CONFIRMED",
            "MASS_SEPA_MAIN_BANK_UPDATE",
            "MASS_SERIALNUMBER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SET_ORDERS_SHIPPED",
            "MASS_SHIPMENT_ARRIVAL_CANCEL",
            "MASS_SHIPMENT_ARRIVAL_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_ARRIVAL_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_COMPLETE_WORKFLOW",
            "MASS_SHIPMENT_COMPLETE_WORKFLOW_FOR_SALES_ORDER",
            "MASS_SHIPMENT_CREATION",
            "MASS_SHIPMENT_INCOMING_DELETE",
            "MASS_SHIPMENT_INCOMING_REOPEN",
            "MASS_SHIPMENT_INCOMING_UPDATE",
            "MASS_SHIPMENT_INCOMING_UPDATE_FORM_TEXTS",
            "MASS_SHIPMENT_INVOICE_CREATION",
            "MASS_SHIPMENT_OUTGOING_BACK_TO_ENTRY",
            "MASS_SHIPMENT_OUTGOING_CANCEL",
            "MASS_SHIPMENT_OUTGOING_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_OUTGOING_DELETE",
            "MASS_SHIPMENT_OUTGOING_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_OUTGOING_RETURN_LABEL_CREATION",
            "MASS_SHIPMENT_OUTGOING_UPDATE",
            "MASS_SHIPMENT_OUTGOING_UPDATE_FORM_TEXTS",
            "MASS_SHIPPING_CARRIER_UPDATE",
            "MASS_SHIPPING_CONFIRMATION_OF_ARRIVAL_CREATION",
            "MASS_SHIPPING_CONFIRMATION_OF_ARRIVAL_SEND_EMAIL",
            "MASS_SHIPPING_LABEL_CREATION",
            "MASS_SHIPPING_NOTE_CREATION",
            "MASS_SHIPPING_RETURN_LABEL_CREATION",
            "MASS_SHIP_IN",
            "MASS_SHIP_OUT",
            "MASS_STANDARD_INVOICE_CREATION",
            "MASS_STANDARD_INVOICE_WORKFLOW",
            "MASS_START_PRODUCTION_ORDER",
            "MASS_STOCK_BATCH_NUMBER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_STORAGE_PLACE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_STORAGE_PLACE_DELETE",
            "MASS_STORAGE_PLACE_UPDATE",
            "MASS_SUPPLIER_PRICE_DELETION",
            "MASS_SUPPLIER_RETURN_DELETE",
            "MASS_TAG_DELETE",
            "MASS_TASK_BILLING_DATA_UPDATE",
            "MASS_TASK_CREATE_PERFORMANCE_RECORD",
            "MASS_TASK_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
            "MASS_TASK_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TASK_DELETION",
            "MASS_TASK_UPDATE",
            "MASS_TAX_DELETE",
            "MASS_TAX_RESET",
            "MASS_TEAMVIEWER_DOWNLOAD_TIME_ENTRIES",
            "MASS_TICKET_CATEGORY_UPDATE",
            "MASS_TICKET_CREATE_PERFORMANCE_RECORD",
            "MASS_TICKET_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
            "MASS_TICKET_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TICKET_DELETE",
            "MASS_TICKET_FAQ_COPY",
            "MASS_TICKET_FAQ_UPDATE",
            "MASS_TICKET_LINK_TO_SALES_ORDER",
            "MASS_TICKET_MERGE",
            "MASS_TICKET_SLA_RECALCULATE",
            "MASS_TICKET_STATUS_UPDATE",
            "MASS_TICKET_UPDATE",
            "MASS_TIME_RECORD_CREATE_PERFORMANCE_RECORD",
            "MASS_TIME_RECORD_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
            "MASS_TIME_RECORD_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TIME_RECORD_MOVE",
            "MASS_TIME_RECORD_UPDATE",
            "MASS_TRANSACTION_BOOKING",
            "MASS_TRANSACTION_CLEARING",
            "MASS_TRANSACTION_DELETE",
            "MASS_TRANSACTION_PROCESSING",
            "MASS_TRANSACTION_REMOVE_PAYMENTAPPLICATIONS",
            "MASS_TRANSACTION_RESET_IGNORE",
            "MASS_TRANSACTION_SET_IGNORE",
            "MASS_TRANSPORTATION_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TRANSPORTATION_ORDER_PICKING_LIST_CREATION",
            "MASS_UPDATE_CONTRACT_PRICES",
            "MASS_UPDATE_OFFER_PRICES",
            "MASS_UPDATE_RECURRING_INVOICE_PRICES",
            "MASS_UPDATE_SALES_INVOICE_PRICES",
            "MASS_UPDATE_SALES_ORDER_PRICES",
            "MASS_VARIANT_ARTICLE_DELETION",
            "MATERIAL_PLANNING_RUN",
            "OFFER_EXPORT",
            "OTTO_ARTICLE_UPLOAD_CHECK_SYNC",
            "OTTO_WECLAPP_ARTICLE_SYNC",
            "OTTO_WECLAPP_CREDIT_NOTE_SYNC",
            "OTTO_WECLAPP_INVOICE_SYNC",
            "OTTO_WECLAPP_ORDER_SYNC",
            "PRESTA_WECLAPP_ARTICLE_SYNC",
            "PRESTA_WECLAPP_CUSTOMER_SYNC",
            "PRESTA_WECLAPP_ORDER_SYNC",
            "PRICE_CALCULATION_ARTICLE",
            "PURCHASE_INVOICE_EXPORT",
            "PURCHASE_INVOICE_SHIPPING_COST_EXPORT",
            "PURCHASE_ORDER_EXPORT",
            "PURCHASE_ORDER_REQUEST_SEND_EMAIL",
            "RECEIVED_INVOICE_IMPORT",
            "RECURRING_INVOICE_INVOICE_CREATION",
            "RESET_ACCOUNTING",
            "RESET_BUSINESS_TRANSACTIONS",
            "SALES_INVOICE_EXPORT",
            "SALES_INVOICE_SHIPPING_COST_ITEMS_EXPORT",
            "SALES_INVOICE_XRECHNUNG_EXPORT",
            "SALES_ORDER_EXPORT",
            "SHIPMENTIN_EXPORT",
            "SHIPMENTOUT_EXPORT",
            "SHOPIFY_WECLAPP_ARTICLE_SYNC",
            "SHOPIFY_WECLAPP_CUSTOMER_SYNC",
            "SHOPIFY_WECLAPP_ORDER_SYNC",
            "SHOPIFY_WECLAPP_PAYMENT_SYNC",
            "SHOPWARE6_WECLAPP_ARTICLE_SYNC",
            "SHOPWARE6_WECLAPP_CUSTOMER_SYNC",
            "SHOPWARE6_WECLAPP_ORDER_SYNC",
            "SHOPWARE_WECLAPP_ARTICLE_SYNC",
            "SHOPWARE_WECLAPP_CUSTOMER_SYNC",
            "SHOPWARE_WECLAPP_ORDER_SYNC",
            "SYNAXON_WECLAPP_ARTICLE_UPDATE",
            "TRANSUS_SALES_INVOICE_XML_CREATION",
            "TRANSUS_SHIPMENT_XML_CREATION",
            "TRANSUS_WECLAPP_ORDER_SYNC",
            "WECLAPP_AMAZON_OUTBOUND_SHIPMENT_SYNC",
            "WECLAPP_AMAZON_STOCK_SYNC",
            "WECLAPP_EBAY_LISTING_STOCK_SYNC",
            "WECLAPP_EBAY_ORDER_SYNC",
            "WECLAPP_ITSCOPE_ARTICLE_PRICE_UPDATE",
            "WECLAPP_ITSCOPE_ORDER_SYNC",
            "WECLAPP_KAUFLAND_ARTICLE_SYNC",
            "WECLAPP_KAUFLAND_ORDER_SYNC",
            "WECLAPP_KAUFLAND_STOCK_SYNC",
            "WECLAPP_MAGENTO2_ARTICLE_SYNC",
            "WECLAPP_MAGENTO2_ORDER_SYNC",
            "WECLAPP_MAGENTO2_STOCK_SYNC",
            "WECLAPP_MAGENTO_ARTICLE_SYNC",
            "WECLAPP_MAGENTO_ORDER_SYNC",
            "WECLAPP_MAGENTO_STOCK_SYNC",
            "WECLAPP_OTTO_ARTICLE_SYNC",
            "WECLAPP_OTTO_ORDER_SYNC",
            "WECLAPP_OTTO_STOCK_SYNC",
            "WECLAPP_PRESTA_ARTICLE_SYNC",
            "WECLAPP_PRESTA_CUSTOMER_SYNC",
            "WECLAPP_PRESTA_ORDER_SYNC",
            "WECLAPP_PRESTA_STOCK_SYNC",
            "WECLAPP_SALES_ORDER_AMAZON_REPORT_SYNC",
            "WECLAPP_SHOPIFY_ARTICLE_SYNC",
            "WECLAPP_SHOPIFY_ORDER_SYNC",
            "WECLAPP_SHOPIFY_STOCK_SYNC",
            "WECLAPP_SHOPWARE6_ARTICLE_SYNC",
            "WECLAPP_SHOPWARE6_ORDER_SYNC",
            "WECLAPP_SHOPWARE6_STOCK_SYNC",
            "WECLAPP_SHOPWARE_ARTICLE_SYNC",
            "WECLAPP_SHOPWARE_CUSTOMER_SYNC",
            "WECLAPP_SHOPWARE_ORDER_SYNC",
            "WECLAPP_SHOPWARE_STOCK_SYNC",
            "WECLAPP_TO_AMAZON_ARTICLE_REPORT_SYNC",
            "WECLAPP_TO_AMAZON_REPORT_SYNC",
            "WECLAPP_TO_SHOPIFY_CUSTOMER_SYNC",
            "WECLAPP_TO_SHOPWARE6_CUSTOMER_SYNC",
            "WECLAPP_TO_WECLAPP_ARTICLE_PUSH",
            "WECLAPP_TO_WECLAPP_CUSTOM_ATTRIBUTES_PULL",
            "WECLAPP_TO_WECLAPP_DELETION",
            "WECLAPP_TO_WECLAPP_OFFER_PULL",
            "WECLAPP_TO_WECLAPP_OTHER_DATA_PUSH",
            "WECLAPP_TO_WECLAPP_PARTY_PULL",
            "WECLAPP_TO_WECLAPP_PARTY_PUSH",
            "WECLAPP_TO_WECLAPP_PURCHASE_ORDERS_AS_SALES_ORDERS_PULL",
            "WECLAPP_TO_WECLAPP_PURCHASE_ORDER_PUSH",
            "WECLAPP_TO_WECLAPP_SALES_ORDER_PULL",
            "WECLAPP_TO_WECLAPP_STORE_PUSH",
            "WECLAPP_TO_WECLAPP_SUPPLIER_STOCK_SYNC",
            "WECLAPP_TO_WECLAPP_TICKET_PULL",
            "WECLAPP_TO_WECLAPP_USER_PULL",
            "WECLAPP_WOOCOMMERCE_ARTICLE_SYNC",
            "WECLAPP_WOOCOMMERCE_ORDER_SYNC",
            "WECLAPP_WOOCOMMERCE_STOCK_SYNC",
            "WOOCOMMERCE_WECLAPP_ARTICLE_SYNC",
            "WOOCOMMERCE_WECLAPP_CUSTOMER_SYNC",
            "WOOCOMMERCE_WECLAPP_ORDER_SYNC",
            "XT_WECLAPP_ARTICLE_SYNC",
            "XT_WECLAPP_ORDER_SYNC"
          ],
          "type": "string"
        },
        "severity": {
          "enum": [
            "ERROR",
            "FATAL",
            "INFO",
            "WARN"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "jobProgress": {
      "properties": {
        "failedCreateCount": {
          "format": "int32",
          "type": "integer"
        },
        "failedUpdateCount": {
          "format": "int32",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "succeededCreateCount": {
          "format": "int32",
          "type": "integer"
        },
        "succeededUpdateCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "jobResult": {
      "properties": {
        "errors": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "progress": {
          "$ref": "#/definitions/jobProgress"
        },
        "status": {
          "enum": [
            "ABORTING",
            "EXECUTING",
            "NOT_EXECUTING",
            "SCHEDULED"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "ACCOUNTING_DATASTRUCTURE_MIGRATION",
            "ACCOUNTING_EXPORT",
            "ACCOUNT_BALANCES_TRANSFER",
            "ADAPT_SALES_STAGES",
            "AMAZON_ARTICLE_WECLAPP_ARTICLE_FBA_SYNC",
            "AMAZON_ARTICLE_WECLAPP_ARTICLE_SYNC",
            "AMAZON_CREATE_REPORTS",
            "AMAZON_INVOICE_UPLOAD",
            "AMAZON_REPORT_SALES_ORDER_FBA_SYNC",
            "AMAZON_REPORT_SALES_ORDER_SYNC",
            "AMAZON_SETTLEMENT_WECLAPP_SYNC",
            "AMAZON_WECLAPP_ARTICLE_FBA_SYNC",
            "AMAZON_WECLAPP_ARTICLE_SYNC",
            "AMAZON_WECLAPP_REPORT_FBA_SYNC",
            "AMAZON_WECLAPP_REPORT_SYNC",
            "AMAZON_WECLAPP_SETTLEMENT_SYNC",
            "ARTICLE_DELETION",
            "ARTICLE_KEY_FIGURES_EXPORT",
            "ARTICLE_PRICE_TO_AMAZON_REPORT_SYNC",
            "BREVO_CAMPAIGN_PARTICIPANT_EXPORT",
            "BREVO_CONTACT_EXPORT",
            "BREVO_CONTACT_IMPORT",
            "BREVO_CUSTOMER_EXPORT",
            "BREVO_LEAD_EXPORT",
            "CAMPAIGN_EMAIL_SENDING",
            "CLEVER_REACH_CAMPAIGN_PARTICIPANT_EXPORT",
            "CLEVER_REACH_CONTACT_EXPORT",
            "CLEVER_REACH_CONTACT_IMPORT",
            "CLEVER_REACH_CUSTOMER_EXPORT",
            "CLEVER_REACH_LEAD_EXPORT",
            "COMMISSION_RUN",
            "CONTRACT_BILLING",
            "DATEV_BBS_TRANSMISSION",
            "DATEV_BDS_TRANSMISSION",
            "DATEV_RDS_TRANSMISSION",
            "EBAY_WECLAPP_DELETION_REQUEST_SYNC",
            "EBAY_WECLAPP_LISTING_SYNC",
            "EBAY_WECLAPP_ORDER_SYNC",
            "EBAY_WECLAPP_PAYMENT_SYNC",
            "EBAY_WECLAPP_SELLER_PROFILE_SYNC",
            "ERIC_CREATE_ACCOUNT_SHEET",
            "FATTURAPA_IMPORT",
            "FATTURAPA_SALES_INVOICE_XML_CREATION",
            "GROUPWARE_CONTACT_CREATION",
            "IMPORT_VCARD",
            "INVENTORY_BOOKING",
            "INVENTORY_VALUATION",
            "INVENTORY_VALUTATION_EXPORT",
            "ITSCOPE_ARTICLE_PRICE_UPDATE",
            "ITSCOPE_WECLAPP_ARTICLE_SYNC",
            "ITSCOPE_WECLAPP_PURCHASE_ORDER_SYNC",
            "ITSCOPE_WECLAPP_SALES_ORDER_SYNC",
            "IT_SCOPE_QUOTATION_SYNC",
            "KAUFLAND_ARTICLE_UPLOAD_CHECK_SYNC",
            "KAUFLAND_INVOICE_UPLOAD",
            "KAUFLAND_WECLAPP_ARTICLE_SYNC",
            "KAUFLAND_WECLAPP_ORDER_SYNC",
            "LISTING_TO_EBAY_UPDATE_SYNC",
            "MAGENTO2_WECLAPP_ARTICLE_SYNC",
            "MAGENTO2_WECLAPP_CUSTOMER_SYNC",
            "MAGENTO2_WECLAPP_ORDER_SYNC",
            "MAGENTO_WECLAPP_ARTICLE_SYNC",
            "MAGENTO_WECLAPP_CUSTOMER_SYNC",
            "MAGENTO_WECLAPP_ORDER_SYNC",
            "MAIL_CHIMP_CAMPAIGN_PARTICIPANT_EXPORT",
            "MAIL_CHIMP_CONTACT_EXPORT",
            "MAIL_CHIMP_CONTACT_IMPORT",
            "MAIL_CHIMP_CUSTOMER_EXPORT",
            "MAIL_CHIMP_LEAD_EXPORT",
            "MAIL_TO_INVOICE_IMPORT",
            "MASS_ACCOUNTING_TRANSACTION_DELETE",
            "MASS_ACCOUNTING_TRANSACTION_UPDATE",
            "MASS_ADVANCE_PAYMENT_INVOICE_COMPLETE_WORKFLOW",
            "MASS_ADVANCE_PAYMENT_INVOICE_CREATION",
            "MASS_AMAZON_SHIPMENT_CREATION",
            "MASS_ARTICLE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_ARTICLE_PRINT_DATASHEET",
            "MASS_ARTICLE_SUPPLY_SOURCE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_ARTICLE_SUPPLY_SOURCE_DELETION",
            "MASS_ARTICLE_SUPPLY_SOURCE_UPDATE",
            "MASS_ARTICLE_UPDATE",
            "MASS_BILL_OF_MATERIAL_ITEM_UPDATE",
            "MASS_BLANKET_PURCHASE_ORDER_CANCEL",
            "MASS_BLANKET_PURCHASE_ORDER_COMPLETE",
            "MASS_BLANKET_PURCHASE_ORDER_CONFIRM_BY_SUPPLIER",
            "MASS_BLANKET_PURCHASE_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_BLANKET_PURCHASE_ORDER_DELETION",
            "MASS_BLANKET_PURCHASE_ORDER_PRINT",
            "MASS_BLANKET_PURCHASE_ORDER_REOPEN",
            "MASS_BLANKET_PURCHASE_ORDER_SEND_EMAIL",
            "MASS_BLANKET_PURCHASE_ORDER_UPDATE",
            "MASS_BLANKET_PURCHASE_ORDER_UPDATE_FORM_TEXTS",
            "MASS_BUSINESS_TIMES_DAY_OFF_DELETE",
            "MASS_CAMPAIGN_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CAMPAIGN_PARTICIPANTS_UPDATE",
            "MASS_CAMPAIGN_UPDATE",
            "MASS_CANCELLATION_SEND_EMAIL",
            "MASS_CANCEL_TRANSPORTATION_ORDER",
            "MASS_CLEAR_OPEN_ITEM",
            "MASS_CLOSE_SUPPLIER_ORDER",
            "MASS_COMPLETE_WORKFLOW_TRANSPORTATION_ORDER",
            "MASS_CONTRACT_CHARGE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CONTRACT_CHARGE_UPDATE",
            "MASS_CONTRACT_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CONTRACT_DELETION",
            "MASS_CONTRACT_PRINT_DOCUMENT",
            "MASS_CONTRACT_SEND_EMAIL",
            "MASS_CONTRACT_UPDATE",
            "MASS_CONTRACT_UPDATE_FORM_TEXTS",
            "MASS_CREATE_DROPSHIPPING_ORDER",
            "MASS_CREATE_SALES_ORDER_COMMISSION",
            "MASS_CREATE_TRANSPORTATION_ORDER_FROM_PICKING_BOOKS",
            "MASS_CREDIT_NOTE_COMPLETE_WORKFLOW",
            "MASS_CRM_EVENT_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_CRM_EVENT_DELETION",
            "MASS_CRM_EVENT_UPDATE",
            "MASS_CUSTOMER_RETURN_DELETE",
            "MASS_DELETE_PICKING_BOOK_RECORD",
            "MASS_DELETION_TRANSPORTATION_ORDER",
            "MASS_DELIVERY_NOTE_SEND_EMAIL",
            "MASS_DOWNLOAD_BANK_TRANSACTION",
            "MASS_DUNNING_RUN_PROCESS_PROPOSALS",
            "MASS_DUNNING_RUN_SEND_EMAIL_DETAIL",
            "MASS_DUNNING_RUN_SEND_EMAIL_OVERVIEW",
            "MASS_EBAY_LISTINGS_DELETE",
            "MASS_EBAY_LISTING_UPDATE",
            "MASS_INTERNAL_TRANSPORT_REFERENCE_DELETION",
            "MASS_INTERNAL_TRANSPORT_REFERENCE_UPDATE",
            "MASS_INVOICE_BOOK",
            "MASS_INVOICE_CHECK",
            "MASS_INVOICE_COMPLETE_ENTRY",
            "MASS_INVOICE_COMPLETE_WORKFLOW",
            "MASS_INVOICE_CREATE_OPEN_ITEMS",
            "MASS_INVOICE_DOCUMENT_CREATION",
            "MASS_INVOICE_SEND_EMAIL",
            "MASS_INVOICE_VERIFIED",
            "MASS_IT_SCOPE_ARTICLE_CREATION",
            "MASS_IT_SCOPE_ORDER_SYNC",
            "MASS_LEDGER_ACCOUNT_UPDATE",
            "MASS_OFFER_ACCEPT",
            "MASS_OFFER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_OFFER_DELETE",
            "MASS_OFFER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_OFFER_ITEM_UPDATE",
            "MASS_OFFER_PRINT_DOCUMENT",
            "MASS_OFFER_RECALCULATE_COSTS",
            "MASS_OFFER_REJECT",
            "MASS_OFFER_RESET_TAXES",
            "MASS_OFFER_SEND_EMAIL",
            "MASS_OFFER_UPDATE",
            "MASS_OFFER_UPDATE_FORM_TEXTS",
            "MASS_OPPORTUNITY_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_OPPORTUNITY_DELETION",
            "MASS_OPPORTUNITY_UPDATE",
            "MASS_ORDER_CANCEL",
            "MASS_ORDER_CLOSE",
            "MASS_ORDER_CONFIRMATION_CREATION",
            "MASS_ORDER_DELETE",
            "MASS_ORDER_RECALCULATE_COSTS",
            "MASS_ORDER_REOPEN",
            "MASS_ORDER_RESET_TAXES",
            "MASS_ORDER_SHIPPING_LABEL_CREATION",
            "MASS_ORDER_SHIPPING_RETURN_LABEL_CREATION",
            "MASS_ORDER_UPDATE",
            "MASS_ORDER_UPDATE_FORM_TEXTS",
            "MASS_PARTY_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PARTY_DELETION",
            "MASS_PARTY_MERGE",
            "MASS_PARTY_SET_PRIMARY_CONTACT",
            "MASS_PARTY_UPDATE",
            "MASS_PART_PAYMENT_INVOICE_COMPLETE_WORKFLOW",
            "MASS_PART_PAYMENT_INVOICE_CREATION",
            "MASS_PAYMENT_RUN_PROCESS_PROPOSALS",
            "MASS_PERFORMANCE_RECORD_COMPLETE_WORKFLOW_FOR_SALES_ORDER",
            "MASS_PERFORMANCE_RECORD_CREATE_DOCUMENTS",
            "MASS_PERFORMANCE_RECORD_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PERFORMANCE_RECORD_DELETE",
            "MASS_PERFORMANCE_RECORD_INVOICING",
            "MASS_PERFORMANCE_RECORD_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PERFORMANCE_RECORD_RECORDING",
            "MASS_PERFORMANCE_RECORD_SEND_EMAIL",
            "MASS_PERFORMANCE_RECORD_UPDATE",
            "MASS_PERFORMANCE_RECORD_UPDATE_FORM_TEXTS",
            "MASS_PICKING_LIST_CREATION",
            "MASS_PM_REQUIREMENT_ITEM_UPDATE",
            "MASS_PREPAYMENT_INVOICE_CREATION",
            "MASS_PREPAYMENT_INVOICE_WORKFLOW",
            "MASS_PRINT_DROPSHIPPING_ORDER_DELIVERY_NOTE",
            "MASS_PRINT_PRODUCTION_ORDER",
            "MASS_PRINT_PURCHASE_ORDER_DOCUMENTS",
            "MASS_PRINT_RETURNS_PICKUP_NOTE",
            "MASS_PRINT_RETURNS_RETURN_NOTE",
            "MASS_PRINT_RETURN_DELIVERY_NOTE",
            "MASS_PROCESS_DROPSHIPPING_ORDER",
            "MASS_PRODUCTION_ORDER_CANCELLATION",
            "MASS_PRODUCTION_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PRODUCTION_ORDER_DELETION",
            "MASS_PRODUCTION_ORDER_ITEM_ARTICLE_EXCHANGE",
            "MASS_PRODUCTION_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PRODUCTION_ORDER_MATERIAL_ITEMS_UPDATE",
            "MASS_PRODUCTION_ORDER_PICKING_LIST_CREATION",
            "MASS_PRODUCTION_ORDER_REOPEN",
            "MASS_PRODUCTION_ORDER_UPDATE",
            "MASS_PRODUCTION_ORDER_UPDATE_FORM_TEXTS",
            "MASS_PROJECT_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PROJECT_UPDATE",
            "MASS_PURCHASE_CREDIT_NOTE_COMPLETE_WORKFLOW",
            "MASS_PURCHASE_INVOICE_BACK_TO_ENTRY",
            "MASS_PURCHASE_INVOICE_BOOK_ACCOUNTING",
            "MASS_PURCHASE_INVOICE_CANCEL",
            "MASS_PURCHASE_INVOICE_COMPLETE_WORKFLOW",
            "MASS_PURCHASE_INVOICE_CREATE_CREDIT_NOTE",
            "MASS_PURCHASE_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_INVOICE_DELETE",
            "MASS_PURCHASE_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_INVOICE_ITEM_UPDATE",
            "MASS_PURCHASE_INVOICE_RESET_TAXES",
            "MASS_PURCHASE_INVOICE_SHIPPING_COST_ITEM_UPDATE",
            "MASS_PURCHASE_INVOICE_UPDATE",
            "MASS_PURCHASE_ORDER_CANCEL",
            "MASS_PURCHASE_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_ORDER_DELETION",
            "MASS_PURCHASE_ORDER_INVOICE_COMPLETE_WORKFLOW",
            "MASS_PURCHASE_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_ORDER_ITEM_UPDATE",
            "MASS_PURCHASE_ORDER_REOPEN",
            "MASS_PURCHASE_ORDER_SEND_EMAIL",
            "MASS_PURCHASE_ORDER_UPDATE",
            "MASS_PURCHASE_ORDER_UPDATE_FORM_TEXTS",
            "MASS_PURCHASE_REQUEST_CANCEL",
            "MASS_PURCHASE_REQUEST_CLOSE",
            "MASS_PURCHASE_REQUEST_CREATE_DOCUMENTS",
            "MASS_PURCHASE_REQUEST_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_PURCHASE_REQUEST_DELETION",
            "MASS_PURCHASE_REQUEST_REOPEN",
            "MASS_PURCHASE_REQUEST_SEND_EMAIL",
            "MASS_PURCHASE_REQUEST_UPDATE",
            "MASS_PURCHASE_REQUEST_UPDATE_FORM_TEXTS",
            "MASS_RECORD_ADDRESS_FROM_CRM_UPDATE",
            "MASS_RECORD_EMAIL_ADDRESS_FROM_CRM_UPDATE",
            "MASS_RECURRING_CREATE_INVOICE",
            "MASS_RECURRING_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_RECURRING_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_RECURRING_INVOICE_ITEM_UPDATE",
            "MASS_RECURRING_INVOICE_UPDATE",
            "MASS_RECURRING_INVOICE_UPDATE_FORM_TEXTS",
            "MASS_RECURRING_RECALCULATION_COST",
            "MASS_REGION_UPDATE",
            "MASS_REMINDER_DELETION",
            "MASS_REMINDER_UPDATE",
            "MASS_RESET_CLEAR_OPEN_ITEM",
            "MASS_SALES_BILL_OF_MATERIAL_ITEM_UPDATE",
            "MASS_SALES_INVOICE_BACK_TO_ENTRY",
            "MASS_SALES_INVOICE_BOOK_ACCOUNTING",
            "MASS_SALES_INVOICE_CANCEL",
            "MASS_SALES_INVOICE_CREATE_CREDIT_NOTE",
            "MASS_SALES_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_INVOICE_DELETE",
            "MASS_SALES_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_INVOICE_ITEM_UPDATE",
            "MASS_SALES_INVOICE_RECALCULATE_COSTS",
            "MASS_SALES_INVOICE_RESET_TAXES",
            "MASS_SALES_INVOICE_SHIPPING_COST_ITEM_UPDATE",
            "MASS_SALES_INVOICE_UPDATE",
            "MASS_SALES_INVOICE_UPDATE_FORM_TEXTS",
            "MASS_SALES_ORDER_CASH_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_ORDER_COMPLETE_WORKFLOW",
            "MASS_SALES_ORDER_CREATE_PERFORMANCE_RECORD",
            "MASS_SALES_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SALES_ORDER_ITEM_UPDATE",
            "MASS_SALES_ORDER_SEND_EMAIL",
            "MASS_SALES_PRICE_ADD_SPECIAL_PRICE",
            "MASS_SALES_PRICE_DELETION",
            "MASS_SAVE_ORDER_CONFIRMED",
            "MASS_SEPA_MAIN_BANK_UPDATE",
            "MASS_SERIALNUMBER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SET_ORDERS_SHIPPED",
            "MASS_SHIPMENT_ARRIVAL_CANCEL",
            "MASS_SHIPMENT_ARRIVAL_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_ARRIVAL_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_COMPLETE_WORKFLOW",
            "MASS_SHIPMENT_COMPLETE_WORKFLOW_FOR_SALES_ORDER",
            "MASS_SHIPMENT_CREATION",
            "MASS_SHIPMENT_INCOMING_DELETE",
            "MASS_SHIPMENT_INCOMING_REOPEN",
            "MASS_SHIPMENT_INCOMING_UPDATE",
            "MASS_SHIPMENT_INCOMING_UPDATE_FORM_TEXTS",
            "MASS_SHIPMENT_INVOICE_CREATION",
            "MASS_SHIPMENT_OUTGOING_BACK_TO_ENTRY",
            "MASS_SHIPMENT_OUTGOING_CANCEL",
            "MASS_SHIPMENT_OUTGOING_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_OUTGOING_DELETE",
            "MASS_SHIPMENT_OUTGOING_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_SHIPMENT_OUTGOING_RETURN_LABEL_CREATION",
            "MASS_SHIPMENT_OUTGOING_UPDATE",
            "MASS_SHIPMENT_OUTGOING_UPDATE_FORM_TEXTS",
            "MASS_SHIPPING_CARRIER_UPDATE",
            "MASS_SHIPPING_CONFIRMATION_OF_ARRIVAL_CREATION",
            "MASS_SHIPPING_CONFIRMATION_OF_ARRIVAL_SEND_EMAIL",
            "MASS_SHIPPING_LABEL_CREATION",
            "MASS_SHIPPING_NOTE_CREATION",
            "MASS_SHIPPING_RETURN_LABEL_CREATION",
            "MASS_SHIP_IN",
            "MASS_SHIP_OUT",
            "MASS_STANDARD_INVOICE_CREATION",
            "MASS_STANDARD_INVOICE_WORKFLOW",
            "MASS_START_PRODUCTION_ORDER",
            "MASS_STOCK_BATCH_NUMBER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_STORAGE_PLACE_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_STORAGE_PLACE_DELETE",
            "MASS_STORAGE_PLACE_UPDATE",
            "MASS_SUPPLIER_PRICE_DELETION",
            "MASS_SUPPLIER_RETURN_DELETE",
            "MASS_TAG_DELETE",
            "MASS_TASK_BILLING_DATA_UPDATE",
            "MASS_TASK_CREATE_PERFORMANCE_RECORD",
            "MASS_TASK_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
            "MASS_TASK_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TASK_DELETION",
            "MASS_TASK_UPDATE",
            "MASS_TAX_DELETE",
            "MASS_TAX_RESET",
            "MASS_TEAMVIEWER_DOWNLOAD_TIME_ENTRIES",
            "MASS_TICKET_CATEGORY_UPDATE",
            "MASS_TICKET_CREATE_PERFORMANCE_RECORD",
            "MASS_TICKET_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
            "MASS_TICKET_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TICKET_DELETE",
            "MASS_TICKET_FAQ_COPY",
            "MASS_TICKET_FAQ_UPDATE",
            "MASS_TICKET_LINK_TO_SALES_ORDER",
            "MASS_TICKET_MERGE",
            "MASS_TICKET_SLA_RECALCULATE",
            "MASS_TICKET_STATUS_UPDATE",
            "MASS_TICKET_UPDATE",
            "MASS_TIME_RECORD_CREATE_PERFORMANCE_RECORD",
            "MASS_TIME_RECORD_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
            "MASS_TIME_RECORD_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TIME_RECORD_MOVE",
            "MASS_TIME_RECORD_UPDATE",
            "MASS_TRANSACTION_BOOKING",
            "MASS_TRANSACTION_CLEARING",
            "MASS_TRANSACTION_DELETE",
            "MASS_TRANSACTION_PROCESSING",
            "MASS_TRANSACTION_REMOVE_PAYMENTAPPLICATIONS",
            "MASS_TRANSACTION_RESET_IGNORE",
            "MASS_TRANSACTION_SET_IGNORE",
            "MASS_TRANSPORTATION_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
            "MASS_TRANSPORTATION_ORDER_PICKING_LIST_CREATION",
            "MASS_UPDATE_CONTRACT_PRICES",
            "MASS_UPDATE_OFFER_PRICES",
            "MASS_UPDATE_RECURRING_INVOICE_PRICES",
            "MASS_UPDATE_SALES_INVOICE_PRICES",
            "MASS_UPDATE_SALES_ORDER_PRICES",
            "MASS_VARIANT_ARTICLE_DELETION",
            "MATERIAL_PLANNING_RUN",
            "OFFER_EXPORT",
            "OTTO_ARTICLE_UPLOAD_CHECK_SYNC",
            "OTTO_WECLAPP_ARTICLE_SYNC",
            "OTTO_WECLAPP_CREDIT_NOTE_SYNC",
            "OTTO_WECLAPP_INVOICE_SYNC",
            "OTTO_WECLAPP_ORDER_SYNC",
            "PRESTA_WECLAPP_ARTICLE_SYNC",
            "PRESTA_WECLAPP_CUSTOMER_SYNC",
            "PRESTA_WECLAPP_ORDER_SYNC",
            "PRICE_CALCULATION_ARTICLE",
            "PURCHASE_INVOICE_EXPORT",
            "PURCHASE_INVOICE_SHIPPING_COST_EXPORT",
            "PURCHASE_ORDER_EXPORT",
            "PURCHASE_ORDER_REQUEST_SEND_EMAIL",
            "RECEIVED_INVOICE_IMPORT",
            "RECURRING_INVOICE_INVOICE_CREATION",
            "RESET_ACCOUNTING",
            "RESET_BUSINESS_TRANSACTIONS",
            "SALES_INVOICE_EXPORT",
            "SALES_INVOICE_SHIPPING_COST_ITEMS_EXPORT",
            "SALES_INVOICE_XRECHNUNG_EXPORT",
            "SALES_ORDER_EXPORT",
            "SHIPMENTIN_EXPORT",
            "SHIPMENTOUT_EXPORT",
            "SHOPIFY_WECLAPP_ARTICLE_SYNC",
            "SHOPIFY_WECLAPP_CUSTOMER_SYNC",
            "SHOPIFY_WECLAPP_ORDER_SYNC",
            "SHOPIFY_WECLAPP_PAYMENT_SYNC",
            "SHOPWARE6_WECLAPP_ARTICLE_SYNC",
            "SHOPWARE6_WECLAPP_CUSTOMER_SYNC",
            "SHOPWARE6_WECLAPP_ORDER_SYNC",
            "SHOPWARE_WECLAPP_ARTICLE_SYNC",
            "SHOPWARE_WECLAPP_CUSTOMER_SYNC",
            "SHOPWARE_WECLAPP_ORDER_SYNC",
            "SYNAXON_WECLAPP_ARTICLE_UPDATE",
            "TRANSUS_SALES_INVOICE_XML_CREATION",
            "TRANSUS_SHIPMENT_XML_CREATION",
            "TRANSUS_WECLAPP_ORDER_SYNC",
            "WECLAPP_AMAZON_OUTBOUND_SHIPMENT_SYNC",
            "WECLAPP_AMAZON_STOCK_SYNC",
            "WECLAPP_EBAY_LISTING_STOCK_SYNC",
            "WECLAPP_EBAY_ORDER_SYNC",
            "WECLAPP_ITSCOPE_ARTICLE_PRICE_UPDATE",
            "WECLAPP_ITSCOPE_ORDER_SYNC",
            "WECLAPP_KAUFLAND_ARTICLE_SYNC",
            "WECLAPP_KAUFLAND_ORDER_SYNC",
            "WECLAPP_KAUFLAND_STOCK_SYNC",
            "WECLAPP_MAGENTO2_ARTICLE_SYNC",
            "WECLAPP_MAGENTO2_ORDER_SYNC",
            "WECLAPP_MAGENTO2_STOCK_SYNC",
            "WECLAPP_MAGENTO_ARTICLE_SYNC",
            "WECLAPP_MAGENTO_ORDER_SYNC",
            "WECLAPP_MAGENTO_STOCK_SYNC",
            "WECLAPP_OTTO_ARTICLE_SYNC",
            "WECLAPP_OTTO_ORDER_SYNC",
            "WECLAPP_OTTO_STOCK_SYNC",
            "WECLAPP_PRESTA_ARTICLE_SYNC",
            "WECLAPP_PRESTA_CUSTOMER_SYNC",
            "WECLAPP_PRESTA_ORDER_SYNC",
            "WECLAPP_PRESTA_STOCK_SYNC",
            "WECLAPP_SALES_ORDER_AMAZON_REPORT_SYNC",
            "WECLAPP_SHOPIFY_ARTICLE_SYNC",
            "WECLAPP_SHOPIFY_ORDER_SYNC",
            "WECLAPP_SHOPIFY_STOCK_SYNC",
            "WECLAPP_SHOPWARE6_ARTICLE_SYNC",
            "WECLAPP_SHOPWARE6_ORDER_SYNC",
            "WECLAPP_SHOPWARE6_STOCK_SYNC",
            "WECLAPP_SHOPWARE_ARTICLE_SYNC",
            "WECLAPP_SHOPWARE_CUSTOMER_SYNC",
            "WECLAPP_SHOPWARE_ORDER_SYNC",
            "WECLAPP_SHOPWARE_STOCK_SYNC",
            "WECLAPP_TO_AMAZON_ARTICLE_REPORT_SYNC",
            "WECLAPP_TO_AMAZON_REPORT_SYNC",
            "WECLAPP_TO_SHOPIFY_CUSTOMER_SYNC",
            "WECLAPP_TO_SHOPWARE6_CUSTOMER_SYNC",
            "WECLAPP_TO_WECLAPP_ARTICLE_PUSH",
            "WECLAPP_TO_WECLAPP_CUSTOM_ATTRIBUTES_PULL",
            "WECLAPP_TO_WECLAPP_DELETION",
            "WECLAPP_TO_WECLAPP_OFFER_PULL",
            "WECLAPP_TO_WECLAPP_OTHER_DATA_PUSH",
            "WECLAPP_TO_WECLAPP_PARTY_PULL",
            "WECLAPP_TO_WECLAPP_PARTY_PUSH",
            "WECLAPP_TO_WECLAPP_PURCHASE_ORDERS_AS_SALES_ORDERS_PULL",
            "WECLAPP_TO_WECLAPP_PURCHASE_ORDER_PUSH",
            "WECLAPP_TO_WECLAPP_SALES_ORDER_PULL",
            "WECLAPP_TO_WECLAPP_STORE_PUSH",
            "WECLAPP_TO_WECLAPP_SUPPLIER_STOCK_SYNC",
            "WECLAPP_TO_WECLAPP_TICKET_PULL",
            "WECLAPP_TO_WECLAPP_USER_PULL",
            "WECLAPP_WOOCOMMERCE_ARTICLE_SYNC",
            "WECLAPP_WOOCOMMERCE_ORDER_SYNC",
            "WECLAPP_WOOCOMMERCE_STOCK_SYNC",
            "WOOCOMMERCE_WECLAPP_ARTICLE_SYNC",
            "WOOCOMMERCE_WECLAPP_CUSTOMER_SYNC",
            "WOOCOMMERCE_WECLAPP_ORDER_SYNC",
            "XT_WECLAPP_ARTICLE_SYNC",
            "XT_WECLAPP_ORDER_SYNC"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "lead": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addresses": {
          "items": {
            "$ref": "#/definitions/address"
          },
          "type": "array"
        },
        "annualRevenue": {
          "format": "number",
          "type": "string"
        },
        "birthDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "commercialLanguageId": {
          "type": "string",
          "x-relatedEntityName": "commercialLanguage"
        },
        "company": {
          "type": "string"
        },
        "company2": {
          "type": "string"
        },
        "companySizeId": {
          "type": "string",
          "x-relatedEntityName": "companySize"
        },
        "companySizeName": {
          "type": "string"
        },
        "contacts": {
          "items": {
            "$ref": "#/definitions/contact"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerCategoryId": {
          "type": "string",
          "x-relatedEntityName": "customerCategory"
        },
        "customerCategoryName": {
          "type": "string"
        },
        "deliveryAddressId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "invoiceAddressId": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "leadNumber": {
          "type": "string"
        },
        "leadRatingId": {
          "type": "string",
          "x-relatedEntityName": "leadRating"
        },
        "leadRatingName": {
          "type": "string"
        },
        "leadSourceId": {
          "type": "string",
          "x-relatedEntityName": "leadSource"
        },
        "leadSourceName": {
          "type": "string"
        },
        "leadStatus": {
          "enum": [
            "CONVERTED",
            "DISQUALIFIED",
            "NEW",
            "PREQUALIFIED",
            "QUALIFIED"
          ],
          "type": "string"
        },
        "leadTopics": {
          "items": {
            "$ref": "#/definitions/entity"
          },
          "type": "array"
        },
        "lossDescription": {
          "type": "string"
        },
        "lossReasonId": {
          "type": "string",
          "x-relatedEntityName": "customerLeadLossReason"
        },
        "lossReasonName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "mobilePhone1": {
          "type": "string"
        },
        "oldLeadNumber": {
          "type": "string"
        },
        "onlineAccounts": {
          "items": {
            "$ref": "#/definitions/onlineAccount"
          },
          "type": "array"
        },
        "optIn": {
          "type": "boolean"
        },
        "optInLetter": {
          "type": "boolean"
        },
        "optInPhone": {
          "type": "boolean"
        },
        "optInSms": {
          "type": "boolean"
        },
        "parentPartyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "partyType": {
          "enum": [
            "ORGANIZATION",
            "PERSON"
          ],
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "personCompany": {
          "type": "string"
        },
        "personDepartmentId": {
          "type": "string",
          "x-relatedEntityName": "personDepartment"
        },
        "personRoleId": {
          "type": "string",
          "x-relatedEntityName": "personRole"
        },
        "phone": {
          "type": "string"
        },
        "primaryAddressId": {
          "type": "string"
        },
        "primaryContactId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "responsibleUserFixed": {
          "type": "boolean"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        },
        "salesStageId": {
          "type": "string",
          "x-relatedEntityName": "salesStage"
        },
        "salesStageName": {
          "type": "string"
        },
        "salutation": {
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ],
          "type": "string"
        },
        "sectorId": {
          "type": "string",
          "x-relatedEntityName": "sector"
        },
        "sectorName": {
          "type": "string"
        },
        "shipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "shipmentMethodName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "termOfPaymentName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "titleId": {
          "type": "string",
          "x-relatedEntityName": "title"
        },
        "vatRegistrationNumber": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      },
      "required": [
        "partyType"
      ],
      "type": "object"
    },
    "ledgerAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "automatic": {
          "type": "boolean"
        },
        "balanceSheetItem": {
          "enum": [
            "ABSCHREIBUNGEN_GWG_ACCOUNTS",
            "ABSCHREIBUNGEN_UND_ANLAGEVERMOEGEN_ACCOUNTS",
            "BESONDERE_AUFWENDUNGEN_ACCOUNTS",
            "BUCHWERT_ANLAGENABGAENGE_ACCOUNTS",
            "FREMDLEISTUNGEN_ACCOUNTS",
            "GAS_STROM_ACCOUNTS",
            "GELEISTETE_ANZAHLUNGEN_ACCOUNTS",
            "GESETZLICHE_SOZIALE_AUFWENDUNGEN_ACCOUNTS",
            "HEIZUNG_ACCOUNTS",
            "INSTANDHALTUNG_ACCOUNTS",
            "INSTANDHALTUNG_UND_WERKZEUGE_ACCOUNTS",
            "KFZ_SONSTIGE_ACCOUNTS",
            "KFZ_STEUER_ACCOUNTS",
            "KFZ_VERSICHERUNG_ACCOUNTS",
            "KOSTEN_DER_WARENABGABE_ACCOUNTS",
            "LOEHENE_UND_GEHAELTER_ACCOUNTS",
            "MIETE_PACHT_ACCOUNTS",
            "NEUTRALE_AUFWENDUNGEN_ACCOUNTS",
            "NEUTRALE_ERTRAEGE_ACCOUNTS",
            "PRIVAT_ANTEILE_ACCOUNTS",
            "REVENUE_ACCOUNTS",
            "ROH_HILFS_UNDBETRIE_BSSTOFFE_ACCOUNTS",
            "SALDO_DER_STATISTISCHEN_KONTEN_ACCOUNTS",
            "SONSTIGE_ERLOESE_ACCOUNTS",
            "SONSTIGE_KONTEN_ACCOUNTS",
            "SONSTIGE_RAUMKOSTEN_ACCOUNTS",
            "STEUERN_VERSICHERUNGEN_BEITRAEGE_ACCOUNTS",
            "UMSATZSTEUER_ACCOUNTS",
            "UMSATZSTEUER_ZAHLUNGEN_ACCOUNTS",
            "VERSCHIEDENE_KOSTEN_ACCOUNTS",
            "VORSTEUER_ACCOUNTS",
            "WERBE_UND_REISEKOSTEN_ACCOUNTS"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "parentAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "parentAccountNumber": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CARRY_FORWARD_ACCOUNT",
            "IMPERSONAL_ACCOUNT",
            "PERSONAL_ACCOUNT"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "license": {
      "properties": {
        "name": {
          "type": "string"
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "licenseSuggestion": {
      "properties": {
        "suggestedLicenses": {
          "items": {
            "$ref": "#/definitions/suggestedLicense"
          },
          "type": "array"
        },
        "userRoleIdsWithLicenseAvailability": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "licenseWithCount": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "license": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "listUpdate": {
      "properties": {
        "updateData": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "updateStrategy": {
          "enum": [
            "MERGE",
            "REPLACE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "loadingEquipmentArticleSettings": {
      "properties": {
        "availableInSale": {
          "type": "boolean"
        },
        "baseUnitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "showOnDeliveryNote": {
          "type": "boolean"
        },
        "storable": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "loadingEquipmentIdentifier": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "loadingEquipmentArticles": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "logMessage": {
      "properties": {
        "data": {
          "type": "object"
        },
        "severity": {
          "enum": [
            "ERROR",
            "INFO",
            "WARNING"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "mailAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "accountType": {
          "enum": [
            "EXCHANGE",
            "GOOGLE",
            "GOOGLE2",
            "GOOGLE_API",
            "IMAP",
            "MICROSOFT365",
            "MICROSOFT365_GRAPH"
          ],
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string"
        },
        "fromAddress": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "module": {
          "type": "string"
        },
        "syncMailFrom": {
          "format": "int32",
          "type": "integer"
        },
        "synchronizeCalendar": {
          "type": "boolean"
        },
        "synchronizeContacts": {
          "type": "boolean"
        },
        "synchronizeMails": {
          "type": "boolean"
        },
        "synchronizeTasks": {
          "type": "boolean"
        },
        "userCalendars": {
          "items": {
            "$ref": "#/definitions/calendar"
          },
          "type": "array"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "userName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "mailTemplate": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "bccEmailAddresses": {
          "type": "string"
        },
        "ccEmailAddresses": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "toEmailAddresses": {
          "type": "string"
        },
        "type": {
          "enum": [
            "EMAIL",
            "LETTER"
          ],
          "type": "string"
        },
        "useAsDefault": {
          "type": "boolean"
        }
      },
      "required": [
        "creatorId",
        "type"
      ],
      "type": "object"
    },
    "manufacturer": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "address": {
          "$ref": "#/definitions/recordAddress"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "materialPlanningSettings": {
      "properties": {
        "allowApprovalOfPurchaseRequisitionWithoutSupplySource": {
          "type": "boolean"
        },
        "considerActiveArticlesOnly": {
          "type": "boolean"
        },
        "considerConfirmedSalesOrdersOnly": {
          "type": "boolean"
        },
        "considerDropshippingOrders": {
          "type": "boolean"
        },
        "considerPurchaseOrdersFromStatus": {
          "enum": [
            "CONFIRMED",
            "ORDER_DOCUMENTS_PRINTED",
            "ORDER_ENTRY_COMPLETED",
            "ORDER_ENTRY_IN_PROGRESS"
          ],
          "type": "string"
        },
        "considerQuantitiesOnly": {
          "type": "boolean"
        },
        "ignoreFixedPurchaseQuantityInInternalShipments": {
          "type": "boolean"
        },
        "rangeInDays": {
          "format": "int32",
          "type": "integer"
        },
        "requirePurchaseRequisitionApproval": {
          "type": "boolean"
        },
        "workflowActions": {
          "$ref": "#/definitions/materialPlanningWorkflowSettings"
        }
      },
      "type": "object"
    },
    "materialPlanningWorkflowSettings": {
      "properties": {
        "createPurchaseOrderAtDefaultSupplier": {
          "type": "boolean"
        },
        "createPurchaseOrderAtSelectedSupplier": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "minimalStoragePlace": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "moneyTransaction": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountForCostsOfMonetaryTrafficId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "accountForCostsOfMonetaryTrafficNumber": {
          "type": "string"
        },
        "accountForDunningFeeId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "accountForDunningFeeNumber": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "accountNumber": {
          "type": "string"
        },
        "amount": {
          "format": "number",
          "type": "string"
        },
        "amountDiscount": {
          "format": "number",
          "type": "string"
        },
        "cashAccountSheetId": {
          "type": "string",
          "x-relatedEntityName": "cashAccountSheet"
        },
        "createdById": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "effectiveDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "externalRecordNumber": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "origin": {
          "enum": [
            "AMAZON",
            "CAMT053",
            "EBAY",
            "FINAPI",
            "KLARNA",
            "LONDON_ZURICH",
            "MANUALLY",
            "MOLLIE",
            "MT940_KAPOTT",
            "MT940_PROVIDE",
            "PAYMENT_RUN",
            "PAYPAL",
            "POS",
            "QWIST",
            "SHOPIFY",
            "STRIPE",
            "TINK"
          ],
          "type": "string"
        },
        "partyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "paymentToleranceAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "paymentToleranceAccountNumber": {
          "type": "string"
        },
        "paymentType": {
          "enum": [
            "DISBURSEMENT",
            "RECEIPT"
          ],
          "type": "string"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        }
      },
      "required": [
        "amount",
        "paymentType"
      ],
      "type": "object"
    },
    "nestedStoragePlace": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "barcode": {
          "type": "string"
        },
        "blockedForResupply": {
          "type": "boolean"
        },
        "blockedForResupplyReasonId": {
          "type": "string",
          "x-relatedEntityName": "storagePlaceBlockingReason"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "fieldNumber": {
          "format": "int32",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "levelNumber": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "storagePlaceSizeId": {
          "type": "string",
          "x-relatedEntityName": "storagePlaceSize"
        },
        "storagePlaceType": {
          "enum": [
            "ASSEMBLY",
            "BLOCKED",
            "BUFFER",
            "CONSOLIDATION",
            "INBOUND",
            "PICKING",
            "STOCK",
            "UNIVERSAL",
            "UNIVERSAL_WITHOUT_PICKING"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "storagePlaceType"
      ],
      "type": "object"
    },
    "notification": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "priority": {
          "enum": [
            "CRITICAL",
            "NORMAL"
          ],
          "type": "string"
        },
        "read": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "priority",
        "title"
      ],
      "type": "object"
    },
    "onlineAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "accountType": {
          "enum": [
            "AMAZON",
            "BLOG",
            "EBAY",
            "FACEBOOK",
            "GOOGLE_DRIVE",
            "INSTAGRAM",
            "LINKEDIN",
            "OTHER",
            "PINTEREST",
            "SKYPE",
            "SLIDESHARE",
            "TWITTER",
            "WIKIPEDIA",
            "XING",
            "YELP",
            "YOUTUBE"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "onlyId": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "opportunity": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "contactId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "customerNumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "expectedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "expectedSignatureDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "hotLead": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "nextCallDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "opportunityNumber": {
          "type": "string"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        },
        "revenue": {
          "format": "number",
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        },
        "salesProbability": {
          "format": "int32",
          "type": "integer"
        },
        "salesStageHistory": {
          "items": {
            "$ref": "#/definitions/salesStageHistory"
          },
          "type": "array"
        },
        "salesStageId": {
          "type": "string",
          "x-relatedEntityName": "salesStage"
        },
        "salesStageName": {
          "type": "string"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "topics": {
          "items": {
            "$ref": "#/definitions/entity"
          },
          "type": "array"
        },
        "winLossDescription": {
          "type": "string"
        },
        "winLossReasonId": {
          "type": "string",
          "x-relatedEntityName": "opportunityWinLossReason"
        },
        "winLossReasonName": {
          "type": "string"
        }
      },
      "required": [
        "customerId",
        "name",
        "salesProbability",
        "salesStageId"
      ],
      "type": "object"
    },
    "opportunityUpdateData": {
      "properties": {
        "description": {
          "type": "string"
        },
        "expectedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "expectedSignatureDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "hotLead": {
          "type": "boolean"
        },
        "nextCallDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "revenue": {
          "format": "number",
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        },
        "salesProbability": {
          "format": "int32",
          "type": "integer"
        },
        "salesStageId": {
          "type": "string",
          "x-relatedEntityName": "salesStage"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "tags": {
          "$ref": "#/definitions/listUpdate"
        },
        "winLossDescription": {
          "type": "string"
        },
        "winLossReasonId": {
          "type": "string",
          "x-relatedEntityName": "opportunityWinLossReason"
        }
      },
      "type": "object"
    },
    "orderSalesSettingsDto": {
      "properties": {
        "allowFinalInvoiceCreationWithoutFullyShippedState": {
          "type": "boolean"
        },
        "allowShipmentCreationOnlyForPaidAdvancePayments": {
          "type": "boolean"
        },
        "allowShipmentCreationOnlyForPaidPrepayments": {
          "type": "boolean"
        },
        "allowToEditManuallyClosedSalesOrder": {
          "type": "boolean"
        },
        "applyPurchaseOrderCostChangesToSaleOrder": {
          "type": "boolean"
        },
        "cancelOpenPerformanceRecordsWhenClosingOrderManually": {
          "type": "boolean"
        },
        "cancelOpenSalesInvoicesWhenClosingOrderManually": {
          "type": "boolean"
        },
        "cancelOpenShipmentsWhenClosingOrderManually": {
          "type": "boolean"
        },
        "closeAdvancePaymentOpenItemsAutomatically": {
          "type": "boolean"
        },
        "closePrepaymentOpenItemsAutomatically": {
          "type": "boolean"
        },
        "createFinalInvoiceForPrepaymentsWhenOrderFullyProcessed": {
          "type": "boolean"
        },
        "createPrepaymentDocumentsAutomatically": {
          "type": "boolean"
        },
        "defaultPaymentType": {
          "enum": [
            "ADVANCE_PAYMENT",
            "COUNTER_SALES",
            "PART_PAYMENT",
            "PREPAYMENT",
            "STANDARD"
          ],
          "type": "string"
        },
        "defaultPaymentTypeForConsignmentStock": {
          "enum": [
            "ADVANCE_PAYMENT",
            "COUNTER_SALES",
            "PART_PAYMENT",
            "PREPAYMENT",
            "STANDARD"
          ],
          "type": "string"
        },
        "fulfillmentProviderId": {
          "type": "string",
          "x-relatedEntityName": "fulfillmentProvider"
        },
        "ignoreManuallyClosedInVolumeReports": {
          "type": "boolean"
        },
        "itemsEditableAfterOrderConfirmation": {
          "type": "boolean"
        },
        "processPrePaymentsAutomatically": {
          "type": "boolean"
        },
        "responsiblePersonId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsiblePersonType": {
          "enum": [
            "CURRENT_USER_AS_RESPONSIBLE",
            "FIXED",
            "RESPONSIBLE_FROM_PREVIOUS",
            "RESPONSIBLE_FROM_SUPPLIER"
          ],
          "type": "string"
        },
        "workflowActions": {
          "$ref": "#/definitions/salesOrderWorkflowSettings"
        }
      },
      "required": [
        "defaultPaymentType"
      ],
      "type": "object"
    },
    "organizerRemindersSettings": {
      "properties": {
        "createReminderForOverdueTask": {
          "type": "boolean"
        },
        "hidePastRemindersAtOverview": {
          "type": "boolean"
        },
        "sendRemindersForClosedEntities": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "organizerSettings": {
      "properties": {
        "remindersSettings": {
          "$ref": "#/definitions/organizerRemindersSettings"
        },
        "tasksSettings": {
          "$ref": "#/definitions/organizerTasksSettings"
        },
        "userSettings": {
          "$ref": "#/definitions/organizerUserSettings"
        }
      },
      "type": "object"
    },
    "organizerTasksSettings": {
      "properties": {
        "allowSyncForPublicTasks": {
          "type": "boolean"
        },
        "exchangeTaskAutoSync": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "organizerUserSettings": {
      "properties": {
        "automaticDateForTask": {
          "type": "boolean"
        },
        "defaultTaskDuration": {
          "format": "int32",
          "type": "integer"
        },
        "deleteFollowupForCompletedTask": {
          "type": "boolean"
        },
        "syncTasksMailAccountId": {
          "type": "string",
          "x-relatedEntityName": "mailAccount"
        },
        "taskPrivatePerDefault": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "otherTenant": {
      "properties": {
        "baseUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "packagingUnit": {
      "properties": {
        "articleId": {
          "type": "string"
        },
        "baseArticleQuantity": {
          "format": "int64",
          "type": "integer"
        },
        "packagingUnitQuantity": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "articleId",
        "packagingUnitQuantity"
      ],
      "type": "object"
    },
    "packagingUnitArticleSettings": {
      "properties": {
        "baseUnitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        }
      },
      "type": "object"
    },
    "party": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addresses": {
          "items": {
            "$ref": "#/definitions/address"
          },
          "type": "array"
        },
        "allowPurchaseOrderCreation": {
          "type": "boolean"
        },
        "bankAccounts": {
          "items": {
            "$ref": "#/definitions/partyBankAccount"
          },
          "type": "array"
        },
        "birthDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "commercialLanguageId": {
          "type": "string",
          "x-relatedEntityName": "commercialLanguage"
        },
        "commissionBlock": {
          "type": "boolean"
        },
        "commissionSalesPartners": {
          "items": {
            "$ref": "#/definitions/commissionSalesPartner"
          },
          "type": "array"
        },
        "company": {
          "type": "string"
        },
        "company2": {
          "type": "string"
        },
        "companySizeId": {
          "type": "string",
          "x-relatedEntityName": "companySize"
        },
        "companySizeName": {
          "type": "string"
        },
        "competitor": {
          "type": "boolean"
        },
        "contacts": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customer": {
          "type": "boolean"
        },
        "customerAllowDropshippingOrderCreation": {
          "type": "boolean"
        },
        "customerAmountInsured": {
          "format": "number",
          "type": "string"
        },
        "customerAnnualRevenue": {
          "format": "number",
          "type": "string"
        },
        "customerBlockNotice": {
          "type": "string"
        },
        "customerBlocked": {
          "type": "boolean"
        },
        "customerBusinessType": {
          "enum": [
            "B2B",
            "B2C",
            "B2G"
          ],
          "type": "string"
        },
        "customerCategoryId": {
          "type": "string",
          "x-relatedEntityName": "customerCategory"
        },
        "customerCategoryName": {
          "type": "string"
        },
        "customerCreditLimit": {
          "format": "number",
          "type": "string"
        },
        "customerCurrentSalesStageId": {
          "type": "string",
          "x-relatedEntityName": "salesStage"
        },
        "customerCurrentSalesStageName": {
          "type": "string"
        },
        "customerDebtorAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "customerDebtorAccountNumber": {
          "type": "string"
        },
        "customerDebtorAccountingCodeId": {
          "type": "string",
          "x-relatedEntityName": "personalAccountingCode"
        },
        "customerDefaultHeaderDiscount": {
          "format": "number",
          "type": "string"
        },
        "customerDefaultHeaderSurcharge": {
          "format": "number",
          "type": "string"
        },
        "customerDefaultShippingCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "customerDeliveryBlock": {
          "type": "boolean"
        },
        "customerInsolvent": {
          "type": "boolean"
        },
        "customerInsured": {
          "type": "boolean"
        },
        "customerInternalNote": {
          "type": "string"
        },
        "customerLossDescription": {
          "type": "string"
        },
        "customerLossReasonId": {
          "type": "string",
          "x-relatedEntityName": "customerLeadLossReason"
        },
        "customerLossReasonName": {
          "type": "string"
        },
        "customerNonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "customerNumber": {
          "type": "string"
        },
        "customerNumberOld": {
          "type": "string"
        },
        "customerPaymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "customerPaymentMethodName": {
          "type": "string"
        },
        "customerSalesChannel": {
          "type": "string"
        },
        "customerSalesOrderPaymentType": {
          "enum": [
            "ADVANCE_PAYMENT",
            "COUNTER_SALES",
            "PART_PAYMENT",
            "PREPAYMENT",
            "STANDARD"
          ],
          "type": "string"
        },
        "customerSalesProbability": {
          "format": "int32",
          "type": "integer"
        },
        "customerSalesStageHistory": {
          "items": {
            "$ref": "#/definitions/salesStageHistory"
          },
          "type": "array"
        },
        "customerSatisfaction": {
          "enum": [
            "NEUTRAL",
            "SATISFIED",
            "UNSATISFIED"
          ],
          "type": "string"
        },
        "customerShipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "customerShipmentMethodName": {
          "type": "string"
        },
        "customerSupplierNumber": {
          "type": "string"
        },
        "customerTermOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "customerTermOfPaymentName": {
          "type": "string"
        },
        "customerUseCustomsTariffNumber": {
          "type": "boolean"
        },
        "deliveryAddressId": {
          "type": "string"
        },
        "deliveryEmailAddressesId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dunningAddressId": {
          "type": "string"
        },
        "dunningEmailAddressesId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "enableDropshippingInNewSupplySources": {
          "type": "boolean"
        },
        "eoriNumber": {
          "type": "string"
        },
        "factoring": {
          "type": "boolean"
        },
        "fax": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "fixPhone2": {
          "type": "string"
        },
        "fixedResponsibleUser": {
          "type": "boolean"
        },
        "formerSalesPartner": {
          "type": "boolean"
        },
        "habitualExporter": {
          "type": "boolean"
        },
        "imageId": {
          "type": "string"
        },
        "invoiceAddressId": {
          "type": "string"
        },
        "invoiceBlock": {
          "type": "boolean"
        },
        "invoiceRecipientId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "leadRatingId": {
          "type": "string",
          "x-relatedEntityName": "leadRating"
        },
        "leadRatingName": {
          "type": "string"
        },
        "leadSourceId": {
          "type": "string",
          "x-relatedEntityName": "leadSource"
        },
        "leadSourceName": {
          "type": "string"
        },
        "leadStatus": {
          "enum": [
            "CONVERTED",
            "DISQUALIFIED",
            "NEW",
            "PREQUALIFIED",
            "QUALIFIED"
          ],
          "type": "string"
        },
        "legalFormId": {
          "type": "string",
          "x-relatedEntityName": "legalForm"
        },
        "legalFormName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "mobilePhone1": {
          "type": "string"
        },
        "mobilePhone2": {
          "type": "string"
        },
        "onlineAccounts": {
          "items": {
            "$ref": "#/definitions/onlineAccount"
          },
          "type": "array"
        },
        "optInEmail": {
          "type": "boolean"
        },
        "optInLetter": {
          "type": "boolean"
        },
        "optInPhone": {
          "type": "boolean"
        },
        "optInSms": {
          "type": "boolean"
        },
        "parentPartyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "partyEmailAddresses": {
          "items": {
            "$ref": "#/definitions/partyEmailAddresses"
          },
          "type": "array"
        },
        "partyHabitualExporterLettersOfIntent": {
          "items": {
            "$ref": "#/definitions/partyHabitualExporterLetterOfIntent"
          },
          "type": "array"
        },
        "partyType": {
          "enum": [
            "ORGANIZATION",
            "PERSON"
          ],
          "type": "string"
        },
        "personCompany": {
          "type": "string"
        },
        "personDepartmentId": {
          "type": "string",
          "x-relatedEntityName": "personDepartment"
        },
        "personRoleId": {
          "type": "string",
          "x-relatedEntityName": "personRole"
        },
        "phone": {
          "type": "string"
        },
        "phoneHome": {
          "type": "string"
        },
        "primaryAddressId": {
          "type": "string"
        },
        "primaryContactId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "publicPageExpirationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "publicPageUuid": {
          "type": "string"
        },
        "purchaseEmailAddressesId": {
          "type": "string"
        },
        "purchaseViaPlafond": {
          "type": "boolean"
        },
        "quotationEmailAddressesId": {
          "type": "string"
        },
        "ratingId": {
          "type": "string",
          "x-relatedEntityName": "partyRating"
        },
        "ratingName": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string"
        },
        "regionId": {
          "type": "string",
          "x-relatedEntityName": "region"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        },
        "salesInvoiceEmailAddressesId": {
          "type": "string"
        },
        "salesOrderEmailAddressesId": {
          "type": "string"
        },
        "salesPartner": {
          "type": "boolean"
        },
        "salesPartnerDefaultCommissionFix": {
          "format": "number",
          "type": "string"
        },
        "salesPartnerDefaultCommissionPercentage": {
          "format": "number",
          "type": "string"
        },
        "salesPartnerDefaultCommissionType": {
          "enum": [
            "FIX",
            "FIX_AND_MARGIN",
            "FIX_AND_REVENUE",
            "MARGIN",
            "NO_COMMISSION",
            "REVENUE"
          ],
          "type": "string"
        },
        "salutation": {
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ],
          "type": "string"
        },
        "sectorId": {
          "type": "string",
          "x-relatedEntityName": "sector"
        },
        "sectorName": {
          "type": "string"
        },
        "supplier": {
          "type": "boolean"
        },
        "supplierCreditorAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "supplierCreditorAccountNumber": {
          "type": "string"
        },
        "supplierCreditorAccountingCodeId": {
          "type": "string",
          "x-relatedEntityName": "personalAccountingCode"
        },
        "supplierCustomerNumberAtSupplier": {
          "type": "string"
        },
        "supplierDefaultShippingCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "supplierInternalNote": {
          "type": "string"
        },
        "supplierMinimumPurchaseOrderAmount": {
          "format": "number",
          "type": "string"
        },
        "supplierNonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "supplierNumber": {
          "type": "string"
        },
        "supplierNumberOld": {
          "type": "string"
        },
        "supplierOrderBlock": {
          "type": "boolean"
        },
        "supplierPaymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "supplierPaymentMethodName": {
          "type": "string"
        },
        "supplierShipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "supplierShipmentMethodName": {
          "type": "string"
        },
        "supplierTermOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "supplierTermOfPaymentName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "title": {
          "type": "string"
        },
        "titleId": {
          "type": "string",
          "x-relatedEntityName": "title"
        },
        "topics": {
          "items": {
            "$ref": "#/definitions/entity"
          },
          "type": "array"
        },
        "vatIdentificationNumber": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "xRechnungLeitwegId": {
          "type": "string"
        }
      },
      "required": [
        "partyType"
      ],
      "type": "object"
    },
    "partyBankAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountHolder": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creditInstitute": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "partyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "primary": {
          "type": "boolean"
        }
      },
      "required": [
        "accountNumber",
        "bankCode",
        "partyId"
      ],
      "type": "object"
    },
    "partyEmailAddresses": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "bccAddresses": {
          "type": "string"
        },
        "ccAddresses": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "toAddresses": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "partyHabitualExporterLetterOfIntent": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "automaticallySuggestInInvoice": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "date": {
          "format": "timestamp",
          "type": "integer"
        },
        "fromSupplier": {
          "type": "boolean"
        },
        "invoices": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "numberDeclarer": {
          "type": "string"
        },
        "numberSupplier": {
          "type": "string"
        },
        "totalAmount": {
          "format": "number",
          "type": "string"
        },
        "type": {
          "enum": [
            "MULTIPLE_ACCOUNTING_EVENTS",
            "SINGLE_ACCOUNTING_EVENT"
          ],
          "type": "string"
        }
      },
      "required": [
        "date",
        "numberDeclarer",
        "type"
      ],
      "type": "object"
    },
    "paymentApplication": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "amountApplied": {
          "format": "number",
          "type": "string"
        },
        "amountAppliedOriginCurrency": {
          "format": "number",
          "type": "string"
        },
        "amountCostsOfMonetaryTraffic": {
          "format": "number",
          "type": "string"
        },
        "amountDiscountApplied": {
          "format": "number",
          "type": "string"
        },
        "createdById": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "moneyTransactionId": {
          "type": "string",
          "x-relatedEntityName": "moneyTransaction"
        }
      },
      "required": [
        "amountApplied",
        "amountAppliedOriginCurrency",
        "amountCostsOfMonetaryTraffic",
        "amountDiscountApplied"
      ],
      "type": "object"
    },
    "paymentMethod": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "autoClearingAccountTransaction": {
          "type": "boolean"
        },
        "clearingAccountId": {
          "type": "string",
          "x-relatedEntityName": "bankAccount"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "discountValue": {
          "format": "number",
          "type": "string"
        },
        "documentText": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "type": {
          "enum": [
            "BANK",
            "CASH"
          ],
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "paymentRun": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "paymentRunDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "paymentRunItems": {
          "items": {
            "$ref": "#/definitions/paymentRunItem"
          },
          "type": "array"
        },
        "paymentRunNumber": {
          "type": "string"
        },
        "runByUserId": {
          "type": "string"
        },
        "totalAmount": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "paymentRunItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "amountDiscount": {
          "format": "number",
          "type": "string"
        },
        "amountPayment": {
          "format": "number",
          "type": "string"
        },
        "bankAccountId": {
          "type": "string",
          "x-relatedEntityName": "bankAccount"
        },
        "cleared": {
          "type": "boolean"
        },
        "conversionRate": {
          "format": "number",
          "type": "string"
        },
        "conversionRateDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "moneyTransaction": {
          "$ref": "#/definitions/moneyTransaction"
        },
        "partyBankAccountId": {
          "type": "string"
        },
        "paymentRunId": {
          "type": "string"
        },
        "paymentRunPaymentType": {
          "enum": [
            "NONE",
            "ONLINE",
            "SEPA",
            "SWIFT"
          ],
          "type": "string"
        },
        "purchaseOpenItemId": {
          "type": "string",
          "x-relatedEntityName": "purchaseOpenItem"
        },
        "purpose": {
          "type": "string"
        },
        "recordCurrency": {
          "$ref": "#/definitions/currency"
        }
      },
      "type": "object"
    },
    "paymentRunSettings": {
      "properties": {
        "combinedBankTransfer": {
          "type": "boolean"
        },
        "defaultBankAccountId": {
          "type": "string"
        },
        "defaultCreditNoteDebtorText": {
          "type": "string"
        },
        "defaultCreditorText": {
          "type": "string"
        },
        "mode": {
          "enum": [
            "CHECK_DISCOUNT",
            "SHOW_ON_LAST_DISCOUNT_DAY"
          ],
          "type": "string"
        },
        "painVersion": {
          "enum": [
            "SEPA00100102",
            "SEPA00100103",
            "SEPA00100109",
            "SEPA00100109CH03"
          ],
          "type": "string"
        },
        "paymentMethodTypes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "toleranceDays": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "paymentToleranceInPercentSettings": {
      "properties": {
        "creditor": {
          "format": "number",
          "type": "string"
        },
        "debtor": {
          "format": "number",
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "paymentToleranceSettings": {
      "properties": {
        "inPercent": {
          "$ref": "#/definitions/paymentToleranceInPercentSettings"
        }
      },
      "type": "object"
    },
    "performanceRecord": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "customerSignatureDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "invoiceRecipientId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "orderNumberAtCustomer": {
          "type": "string"
        },
        "performanceRecordDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "performanceRecordItems": {
          "items": {
            "$ref": "#/definitions/performanceRecordItem"
          },
          "type": "array"
        },
        "performanceRecordNumber": {
          "type": "string"
        },
        "recordAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "recordComment": {
          "type": "string"
        },
        "recordCommentInheritance": {
          "type": "boolean"
        },
        "recordEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordFreeTextInheritance": {
          "type": "boolean"
        },
        "recordOpening": {
          "type": "string"
        },
        "recordOpeningInheritance": {
          "type": "boolean"
        },
        "salesChannel": {
          "type": "string"
        },
        "salesInvoiceEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "salesOrderId": {
          "type": "string",
          "x-relatedEntityName": "salesOrder"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "serviceProviderId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "serviceProviderSignatureDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "DOCUMENT_CREATED",
            "OPEN",
            "RECORDED"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/performanceRecordStatusHistory"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "customerId",
        "status"
      ],
      "type": "object"
    },
    "performanceRecordItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addPageBreakBefore": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "groupName": {
          "type": "string"
        },
        "invoicingType": {
          "enum": [
            "EFFORT",
            "FIXED_PRICE"
          ],
          "type": "string"
        },
        "itemType": {
          "enum": [
            "DEFAULT",
            "FREE_TEXT",
            "SERVICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "note": {
          "type": "string"
        },
        "orderItemId": {
          "type": "string"
        },
        "parentItemId": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "tasks": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "timeRecords": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "performanceRecordSalesSettingsDto": {
      "properties": {
        "defaultEffortBasedArticlesGroupingType": {
          "enum": [
            "PER_ARTICLE",
            "PER_TASK",
            "PER_TICKET"
          ],
          "type": "string"
        },
        "responsiblePersonId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsiblePersonType": {
          "enum": [
            "CURRENT_USER_AS_RESPONSIBLE",
            "FIXED",
            "RESPONSIBLE_FROM_PREVIOUS",
            "RESPONSIBLE_FROM_SUPPLIER"
          ],
          "type": "string"
        },
        "sendDocumentWithInvoice": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "performanceRecordStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "CANCELLED",
            "DOCUMENT_CREATED",
            "OPEN",
            "RECORDED"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "period": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "financialYearId": {
          "type": "string",
          "x-relatedEntityName": "financialYear"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "open": {
          "type": "boolean"
        },
        "periodNumber": {
          "format": "int32",
          "type": "integer"
        },
        "validFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "validTo": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "financialYearId",
        "name",
        "periodNumber"
      ],
      "type": "object"
    },
    "permission": {
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "systemAdministrator": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "pick": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "batchNumber": {
          "type": "string"
        },
        "bookedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "confirmedByUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "confirmedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "internalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "orderItemId": {
          "type": "string"
        },
        "packagingUnitBaseArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "productionOrderItemId": {
          "type": "string"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "salesOrderItemId": {
          "type": "string"
        },
        "serialNumbers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "shipmentItemId": {
          "type": "string"
        },
        "sourceInternalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "sourceStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "storagePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "transportationOrderId": {
          "type": "string"
        }
      },
      "required": [
        "quantity",
        "serialNumbers",
        "storagePlaceId"
      ],
      "type": "object"
    },
    "pickData": {
      "properties": {
        "batchNumber": {
          "type": "string"
        },
        "bookedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "confirmedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "confirmedDateDeprecated": {
          "format": "timestamp",
          "type": "integer"
        },
        "confirmedQuantityDeprecated": {
          "format": "number",
          "type": "string"
        },
        "internalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "pickId": {
          "type": "string",
          "x-relatedEntityName": "pick"
        },
        "pickQuantity": {
          "format": "number",
          "type": "string"
        },
        "pickingUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "pickingUserIdDeprecated": {
          "type": "string"
        },
        "productionOrderItemId": {
          "type": "string"
        },
        "serialNumbers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "shipmentItemId": {
          "type": "string"
        },
        "sourceInternalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "sourceStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "storagePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        }
      },
      "type": "object"
    },
    "platformSettings": {
      "properties": {
        "commercialLanguage": {
          "type": "string"
        },
        "defaultCurrencyId": {
          "type": "string"
        },
        "preset": {
          "enum": [
            "IT",
            "STANDARD"
          ],
          "type": "string"
        },
        "taxHomeCountryCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pmProjectExtraInformation": {
      "properties": {
        "actualEffort": {
          "type": "string"
        },
        "actualEffortByUser": {
          "type": "string"
        },
        "differenceInEffort": {
          "type": "string"
        },
        "differenceInEffortByUser": {
          "type": "string"
        },
        "effortPlanned": {
          "type": "string"
        },
        "effortPlannedForUser": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pmProjectGeneralSettings": {
      "properties": {
        "defaultStatus": {
          "enum": [
            "ABORTED",
            "DONE",
            "DRAFT",
            "HALTED",
            "OPEN",
            "STARTED",
            "WAITING"
          ],
          "type": "string"
        },
        "useArticleDescriptionForInvoice": {
          "type": "boolean"
        },
        "useArticleTitleForInvoice": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "pmProjectNotificationSettings": {
      "properties": {
        "notifyForDocuments": {
          "type": "boolean"
        },
        "notifyForTaskChanges": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "pmProjectPmRequirementItemSettings": {
      "properties": {
        "allowBookingWithoutTaskSelection": {
          "type": "boolean"
        },
        "allowOverBooking": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "pmProjectSettings": {
      "properties": {
        "general": {
          "$ref": "#/definitions/pmProjectGeneralSettings"
        },
        "notifications": {
          "$ref": "#/definitions/pmProjectNotificationSettings"
        },
        "pmRequirementItems": {
          "$ref": "#/definitions/pmProjectPmRequirementItemSettings"
        }
      },
      "type": "object"
    },
    "priceCalculationParameter": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleCategoryId": {
          "type": "string",
          "x-relatedEntityName": "articleCategory"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "fixSurcharge": {
          "format": "number",
          "type": "string"
        },
        "fromScale": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lowerPurchasePriceBound": {
          "format": "number",
          "type": "string"
        },
        "margin": {
          "format": "number",
          "type": "string"
        },
        "percentSurcharge": {
          "format": "number",
          "type": "string"
        },
        "profit": {
          "format": "number",
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        }
      },
      "required": [
        "fromScale",
        "lowerPurchasePriceBound",
        "salesChannel"
      ],
      "type": "object"
    },
    "priceCalculationParameterV1": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "fixSurcharge": {
          "format": "number",
          "type": "string"
        },
        "fromScale": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lowerPurchasePriceBound": {
          "format": "number",
          "type": "string"
        },
        "margin": {
          "format": "number",
          "type": "string"
        },
        "percentSurcharge": {
          "format": "number",
          "type": "string"
        },
        "profit": {
          "format": "number",
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        }
      },
      "required": [
        "fromScale",
        "lowerPurchasePriceBound",
        "salesChannel"
      ],
      "type": "object"
    },
    "priceData": {
      "properties": {
        "articleUnitPrice": {
          "format": "number",
          "type": "string"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditionItems": {
          "items": {
            "$ref": "#/definitions/priceDataReductionAdditionItem"
          },
          "type": "array"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "priceDataReductionAdditionItem": {
      "properties": {
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "source": {
          "enum": [
            "ARTICLE",
            "ARTICLE_AND_CUSTOMER",
            "ARTICLE_CATEGORY",
            "ARTICLE_CATEGORY_AND_CUSTOMER",
            "MANUAL"
          ],
          "type": "string"
        },
        "specialPriceReduction": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ADDITION_ABSOLUTE",
            "ADDITION_PERCENT",
            "REDUCTION_ABSOLUTE",
            "REDUCTION_PERCENT"
          ],
          "type": "string"
        },
        "value": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "problem": {
      "$ref": "#/definitions/apiProblem"
    },
    "processPurchaseOrderItem": {
      "properties": {
        "purchaseOrderItemId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "productionOrder": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "actualEndDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "actualQuantity": {
          "format": "number",
          "type": "string"
        },
        "actualStartDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "assemblyStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "availability": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "availabilityForAllWarehouses": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "pickingInstructions": {
          "type": "string"
        },
        "picksComplete": {
          "type": "boolean"
        },
        "productionOrderItems": {
          "items": {
            "$ref": "#/definitions/productionOrderItem"
          },
          "type": "array"
        },
        "productionOrderNumber": {
          "type": "string"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "DOCUMENTS_PRINTED",
            "ENTRY_IN_PROGRESS",
            "INTERRUPTED",
            "NEW",
            "STARTED"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/productionOrderStatusHistory"
          },
          "type": "array"
        },
        "targetEndDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "targetQuantity": {
          "format": "number",
          "type": "string"
        },
        "targetStartDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        },
        "warehouseName": {
          "type": "string"
        },
        "workItems": {
          "items": {
            "$ref": "#/definitions/productionOrderWorkItem"
          },
          "type": "array"
        }
      },
      "required": [
        "articleId",
        "status",
        "targetEndDate",
        "targetQuantity",
        "targetStartDate"
      ],
      "type": "object"
    },
    "productionOrderItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "actualPickDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "actualQuantity": {
          "format": "number",
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "availability": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "availabilityForAllWarehouses": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "note": {
          "type": "string"
        },
        "picks": {
          "items": {
            "$ref": "#/definitions/itemPick"
          },
          "type": "array"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "targetPickDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "targetQuantity": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "productionOrderStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "DOCUMENTS_PRINTED",
            "ENTRY_IN_PROGRESS",
            "INTERRUPTED",
            "NEW",
            "STARTED"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "productionOrderWorkItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "book": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualItem": {
          "type": "boolean"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "shortDescription": {
          "type": "string"
        },
        "status": {
          "enum": [
            "BOOKED",
            "CLOSED",
            "OPEN"
          ],
          "type": "string"
        },
        "targetEndDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "targetOrderTime": {
          "format": "int64",
          "type": "integer"
        },
        "targetStartDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "timeType": {
          "enum": [
            "SINGLE_TIME",
            "TIME_PER_UNIT"
          ],
          "type": "string"
        },
        "unitTime": {
          "format": "number",
          "type": "string"
        }
      },
      "required": [
        "status",
        "timeType"
      ],
      "type": "object"
    },
    "productionWorkSchedule": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "status": {
          "enum": [
            "APPROVED",
            "ENTRY_IN_PROGRESS",
            "INVALID"
          ],
          "type": "string"
        },
        "workScheduleItems": {
          "items": {
            "$ref": "#/definitions/productionWorkScheduleItem"
          },
          "type": "array"
        },
        "workScheduleNumber": {
          "type": "string"
        }
      },
      "required": [
        "status",
        "workScheduleNumber"
      ],
      "type": "object"
    },
    "productionWorkScheduleAssignment": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "alternative": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "productionWorkScheduleId": {
          "type": "string",
          "x-relatedEntityName": "productionWorkSchedule"
        },
        "validFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "validTo": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "articleId",
        "productionWorkScheduleId"
      ],
      "type": "object"
    },
    "productionWorkScheduleItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "costCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "multipleHumanOperation": {
          "format": "int32",
          "type": "integer"
        },
        "multipleMachineOperation": {
          "format": "int32",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "productionWorkScheduleId": {
          "type": "string",
          "x-relatedEntityName": "productionWorkSchedule"
        },
        "quantityBase": {
          "format": "int32",
          "type": "integer"
        },
        "setupTime": {
          "format": "number",
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "timeType": {
          "enum": [
            "SINGLE_TIME",
            "TIME_PER_UNIT"
          ],
          "type": "string"
        },
        "timeUnit": {
          "enum": [
            "DAY",
            "HOUR",
            "MINUTE",
            "MONTH",
            "SECOND",
            "WEEK",
            "YEAR"
          ],
          "type": "string"
        },
        "unitTime": {
          "format": "number",
          "type": "string"
        },
        "validFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "validTo": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "multipleHumanOperation",
        "multipleMachineOperation",
        "setupTime",
        "timeType",
        "timeUnit",
        "unitTime"
      ],
      "type": "object"
    },
    "project": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "billable": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "customerNumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "projectEndDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "projectNumber": {
          "type": "string"
        },
        "projectStartDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "status": {
          "enum": [
            "ABORTED",
            "DONE",
            "DRAFT",
            "HALTED",
            "OPEN",
            "STARTED",
            "WAITING"
          ],
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "teamMembers": {
          "items": {
            "$ref": "#/definitions/projectTeamMember"
          },
          "type": "array"
        },
        "template": {
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "projectMembers": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "hourlyCost": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "teamRole": {
          "enum": [
            "MANAGER",
            "USER"
          ],
          "type": "string"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "projectSalesSettingsDto": {
      "properties": {
        "allowBookingAndEditTaskStatusWithoutOrderConfirmation": {
          "type": "boolean"
        },
        "allowOverbookingOfTasks": {
          "type": "boolean"
        },
        "allowPerformanceRecordCreationOnlyForPaidAdvancePayments": {
          "type": "boolean"
        },
        "allowPerformanceRecordCreationOnlyForPaidPrepayments": {
          "type": "boolean"
        },
        "automaticallyEnableProjectView": {
          "type": "boolean"
        },
        "averageEmployeeCostPerHour": {
          "format": "number",
          "type": "string"
        },
        "defaultProjectOrderTeam": {
          "items": {
            "$ref": "#/definitions/defaultProjectOrderTeamUserDataSettings"
          },
          "type": "array"
        },
        "defaultSubjectForInitialTasks": {
          "type": "string"
        },
        "percentageForEnddateWarning": {
          "format": "int32",
          "type": "integer"
        },
        "percentageForOverbookWarning": {
          "format": "int32",
          "type": "integer"
        },
        "projectOrderServicesOnlyEnabledByDefault": {
          "type": "boolean"
        },
        "syncTasksWithOrderItem": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "projectTask": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "allowTimeTracking": {
          "type": "boolean"
        },
        "assignedTeamMemberId": {
          "type": "string"
        },
        "assignedTeamMembers": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "effortPlanned": {
          "format": "int64",
          "type": "integer"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "hourlyRate": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "parentProjectTaskId": {
          "type": "string",
          "x-relatedEntityName": "projectTask"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "priority": {
          "enum": [
            "HIGH",
            "LOW",
            "MEDIUM"
          ],
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "x-relatedEntityName": "project"
        },
        "projectNumber": {
          "type": "string"
        },
        "responsibleTeamMemberId": {
          "type": "string"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "status": {
          "enum": [
            "CLOSED",
            "IN_PROGRESS",
            "OPEN"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "MILESTONE",
            "TASK"
          ],
          "type": "string"
        }
      },
      "required": [
        "projectId"
      ],
      "type": "object"
    },
    "projectTeamMember": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "role": {
          "enum": [
            "MISC",
            "PL",
            "SUBPL",
            "TM"
          ],
          "type": "string"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "userUsername": {
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "propertyTranslation": {
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "values": {
          "items": {
            "$ref": "#/definitions/propertyTranslationValue"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "propertyTranslationValue": {
      "properties": {
        "locale": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseGeneralSettings": {
      "properties": {
        "allowArticlesWithoutSupplySourcesInRecordItems": {
          "type": "boolean"
        },
        "automaticallyRenumberRecordItems": {
          "type": "boolean"
        },
        "itemTaxCorrectionMode": {
          "enum": [
            "AUTO_CORRECT",
            "AllOW_IGNORE",
            "AllOW_WARN",
            "MANUAL_CORRECT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoice": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "bookingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "bookingText": {
          "type": "string"
        },
        "cancellationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "costCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        },
        "costCenterNumber": {
          "type": "string"
        },
        "costTypeId": {
          "type": "string",
          "x-relatedEntityName": "costType"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdViaOcr": {
          "type": "boolean"
        },
        "creatorId": {
          "type": "string"
        },
        "creditResetsOrderState": {
          "type": "boolean"
        },
        "currencyConversionDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyConversionRate": {
          "format": "number",
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "deliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "dueDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "grossAmountOfHeaderTaxes": {
          "format": "number",
          "type": "string"
        },
        "grossAmountOfHeaderTaxesInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "grossPrices": {
          "type": "boolean"
        },
        "headerDiscount": {
          "format": "number",
          "type": "string"
        },
        "headerSurcharge": {
          "format": "number",
          "type": "string"
        },
        "importSalesTaxAmount": {
          "format": "number",
          "type": "string"
        },
        "importSalesTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "internalInvoiceNumber": {
          "type": "string"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "invoiceDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "nonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "nonStandardTaxName": {
          "type": "string"
        },
        "paymentBlock": {
          "type": "boolean"
        },
        "paymentBlockNote": {
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "paymentStatus": {
          "enum": [
            "CLEARED_WITH_CREDIT_NOTE",
            "CREDIT_NOTE_CLEARED",
            "NO_OPEN_ITEM",
            "OPEN",
            "PAID",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "precedingPurchaseInvoiceId": {
          "type": "string",
          "x-relatedEntityName": "purchaseInvoice"
        },
        "pricingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "purchaseInvoiceItems": {
          "items": {
            "$ref": "#/definitions/purchaseInvoiceItem"
          },
          "type": "array"
        },
        "purchaseInvoiceType": {
          "enum": [
            "ADVANCE_PAYMENT_INVOICE",
            "CREDIT_ADVICE",
            "CREDIT_NOTE",
            "FINAL_INVOICE",
            "PART_PAYMENT_INVOICE",
            "PREPAYMENT_INVOICE",
            "STANDARD_INVOICE"
          ],
          "type": "string"
        },
        "purchaseOrders": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "recordAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "recordComment": {
          "type": "string"
        },
        "recordCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "recordCurrencyName": {
          "type": "string"
        },
        "recordEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordOpening": {
          "type": "string"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        },
        "senderCountryCode": {
          "type": "string"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "shippingCostItems": {
          "items": {
            "$ref": "#/definitions/purchaseInvoiceShippingCostItem"
          },
          "type": "array"
        },
        "shippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "DOCUMENT_CREATED",
            "ENTRY_COMPLETED",
            "INVOICE_CHECKED",
            "INVOICE_RECEIVED",
            "INVOICE_VERIFICATION",
            "NEW",
            "OCR_VERIFICATION",
            "OPEN_ITEM_CREATED"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/purchaseInvoiceStatusHistory"
          },
          "type": "array"
        },
        "supplierHabitualExporterLetterOfIntentId": {
          "type": "string"
        },
        "supplierId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "supplierNumber": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "termOfPaymentName": {
          "type": "string"
        },
        "vatRegistrationNumber": {
          "type": "string"
        }
      },
      "required": [
        "paymentStatus",
        "recordCurrencyId",
        "status"
      ],
      "type": "object"
    },
    "purchaseInvoiceItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "accountNumber": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "contractItemId": {
          "type": "string"
        },
        "cost2CostCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        },
        "costCenterItems": {
          "items": {
            "$ref": "#/definitions/costCenterWithDistributionPercentage"
          },
          "type": "array"
        },
        "costTypeId": {
          "type": "string",
          "x-relatedEntityName": "costType"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creditedInvoiceItemId": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "deliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "itemType": {
          "enum": [
            "DEFAULT",
            "FREE_TEXT",
            "SERVICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatistics": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatisticsInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "parentItemId": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "purchaseInvoiceItemRelationship": {
          "items": {
            "$ref": "#/definitions/purchaseInvoiceItemRelationship"
          },
          "type": "array"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditionItems": {
          "items": {
            "$ref": "#/definitions/reductionAdditionItem"
          },
          "type": "array"
        },
        "servicePeriodFromDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodToDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "shippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "supplierArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoiceItemRelationship": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "shipmentItemId": {
          "type": "string"
        },
        "supplierOrderItemId": {
          "type": "string"
        }
      },
      "required": [
        "quantity"
      ],
      "type": "object"
    },
    "purchaseInvoiceSettings": {
      "properties": {
        "allowEditInvoiceNumber": {
          "type": "boolean"
        },
        "allowModificationOfCreditAdviceItems": {
          "type": "boolean"
        },
        "responsiblePersonId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsiblePersonType": {
          "enum": [
            "CURRENT_USER_AS_RESPONSIBLE",
            "FIXED",
            "RESPONSIBLE_FROM_PREVIOUS",
            "RESPONSIBLE_FROM_SUPPLIER"
          ],
          "type": "string"
        },
        "setPrintingDateAsCreditAdviceDate": {
          "type": "boolean"
        },
        "workflowActions": {
          "$ref": "#/definitions/purchaseInvoiceWorkflowSettings"
        }
      },
      "type": "object"
    },
    "purchaseInvoiceShippingCostItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoiceStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "CANCELLED",
            "DOCUMENT_CREATED",
            "ENTRY_COMPLETED",
            "INVOICE_CHECKED",
            "INVOICE_RECEIVED",
            "INVOICE_VERIFICATION",
            "NEW",
            "OCR_VERIFICATION",
            "OPEN_ITEM_CREATED"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "purchaseInvoiceWorkflowSettings": {
      "properties": {
        "completeEntry": {
          "type": "boolean"
        },
        "createContract": {
          "type": "boolean"
        },
        "createPayment": {
          "type": "boolean"
        },
        "creditNoteCompleteWorkflow": {
          "type": "boolean"
        },
        "crossCheckInvoiceWithPurchaseOrder": {
          "$ref": "#/definitions/crossCheckInvoiceWithPurchaseOrderSettings"
        },
        "printLabels": {
          "type": "boolean"
        },
        "resetTaxes": {
          "type": "boolean"
        },
        "standardInvoiceCompleteWorkflow": {
          "$ref": "#/definitions/standardInvoiceCompleteWorkflowSettings"
        },
        "startInvoiceVerification": {
          "type": "boolean"
        },
        "updatePurchasePrices": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "purchaseOpenItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "amount": {
          "format": "number",
          "type": "string"
        },
        "amountDiscount": {
          "format": "number",
          "type": "string"
        },
        "amountOpen": {
          "format": "number",
          "type": "string"
        },
        "amountPaid": {
          "format": "number",
          "type": "string"
        },
        "clearanceDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "cleared": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "openItemNumber": {
          "type": "string"
        },
        "openItemType": {
          "enum": [
            "CREDITOR",
            "CREDITOR_INVERTED",
            "CREDIT_ADVICE",
            "CREDIT_ADVICE_INVERTED",
            "CREDIT_NOTE_CREDITOR",
            "CREDIT_NOTE_CREDITOR_INVERTED",
            "CREDIT_NOTE_DEBITOR",
            "CREDIT_NOTE_DEBITOR_INVERTED",
            "DEBTOR",
            "DEBTOR_INCOMING_PAYMENT",
            "DEBTOR_INCOMING_PAYMENT_INVERTED",
            "DEBTOR_INVERTED",
            "DEBTOR_OUTGOING_PAYMENT",
            "DEBTOR_OUTGOING_PAYMENT_INVERTED",
            "DEBTOR_PARTY",
            "DEBTOR_PARTY_INVERTED",
            "DEBTOR_RETURN_DEBIT",
            "DEBTOR_RETURN_DEBIT_FEE"
          ],
          "type": "string"
        },
        "paymentApplications": {
          "items": {
            "$ref": "#/definitions/paymentApplication"
          },
          "type": "array"
        },
        "purchaseInvoiceId": {
          "type": "string",
          "x-relatedEntityName": "purchaseInvoice"
        }
      },
      "required": [
        "amount",
        "amountDiscount",
        "amountOpen",
        "amountPaid",
        "openItemNumber",
        "openItemType"
      ],
      "type": "object"
    },
    "purchaseOrder": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "advancePaymentStatus": {
          "enum": [
            "OPEN",
            "PAID"
          ],
          "type": "string"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "commercialLanguageCustomer": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        },
        "confirmationNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "currencyConversionDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyConversionRate": {
          "format": "number",
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "description": {
          "type": "string"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "externalPurchaseOrderNumber": {
          "type": "string"
        },
        "formSettingsFromSalesChannel": {
          "type": "string"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "headerDiscount": {
          "format": "number",
          "type": "string"
        },
        "headerSurcharge": {
          "format": "number",
          "type": "string"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "invoiced": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "nonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "nonStandardTaxName": {
          "type": "string"
        },
        "orderDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "packageTrackingNumber": {
          "type": "string"
        },
        "packageTrackingUrl": {
          "type": "string"
        },
        "paid": {
          "type": "boolean"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "plannedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedShippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "purchaseOrderItems": {
          "items": {
            "$ref": "#/definitions/purchaseOrderItem"
          },
          "type": "array"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "purchaseOrderRequestId": {
          "type": "string",
          "x-relatedEntityName": "purchaseOrderRequest"
        },
        "purchaseOrderType": {
          "enum": [
            "DROPSHIPPING",
            "NORMAL",
            "SALES_ORDER",
            "SALES_ORDER_COMMISSION",
            "TRIANGULAR"
          ],
          "type": "string"
        },
        "received": {
          "type": "boolean"
        },
        "recordAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "recordComment": {
          "type": "string"
        },
        "recordCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "recordCurrencyName": {
          "type": "string"
        },
        "recordEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordOpening": {
          "type": "string"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        },
        "salesOrderId": {
          "type": "string",
          "x-relatedEntityName": "salesOrder"
        },
        "salesOrderNumber": {
          "type": "string"
        },
        "senderCountryCode": {
          "type": "string"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "shipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "shipmentMethodName": {
          "type": "string"
        },
        "shippingCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "shippingCostItems": {
          "items": {
            "$ref": "#/definitions/purchaseOrderShippingCostItem"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "CONFIRMED",
            "ORDER_DOCUMENTS_PRINTED",
            "ORDER_ENTRY_COMPLETED",
            "ORDER_ENTRY_IN_PROGRESS"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/purchaseOrderStatusHistory"
          },
          "type": "array"
        },
        "supplierHabitualExporterLetterOfIntentId": {
          "type": "string"
        },
        "supplierId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "supplierNumber": {
          "type": "string"
        },
        "supplierQuotationNumber": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "termOfPaymentName": {
          "type": "string"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        },
        "warehouseName": {
          "type": "string"
        }
      },
      "required": [
        "recordCurrencyId",
        "status",
        "supplierId"
      ],
      "type": "object"
    },
    "purchaseOrderItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addPageBreakBefore": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "batchSerialNumbers": {
          "items": {
            "$ref": "#/definitions/batchSerialNumber"
          },
          "type": "array"
        },
        "blanketPurchaseOrderId": {
          "type": "string"
        },
        "blanketPurchaseOrderReleaseId": {
          "type": "string",
          "x-relatedEntityName": "blanketPurchaseOrder"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "invoicedQuantity": {
          "format": "number",
          "type": "string"
        },
        "itemType": {
          "enum": [
            "DEFAULT",
            "FREE_TEXT",
            "SERVICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatistics": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatisticsInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "parentItemId": {
          "type": "string"
        },
        "plannedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedShippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "receivedQuantity": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditionItems": {
          "items": {
            "$ref": "#/definitions/reductionAdditionItem"
          },
          "type": "array"
        },
        "salesOrderItemId": {
          "format": "int32",
          "type": "integer"
        },
        "supplierArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrderRequest": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "confirmationDeadline": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "description": {
          "type": "string"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "purchaseOrderRequestItems": {
          "items": {
            "$ref": "#/definitions/purchaseOrderRequestItem"
          },
          "type": "array"
        },
        "purchaseOrderRequestNumber": {
          "type": "string"
        },
        "purchaseOrderRequestOffers": {
          "items": {
            "$ref": "#/definitions/purchaseOrderRequestOffer"
          },
          "type": "array"
        },
        "purchaseOrderRequestType": {
          "enum": [
            "BLANKET_ORDER_REQUEST",
            "BLANKET_PURCHASE_ORDER_REQUEST",
            "DROP_SHIPPING_REQUEST",
            "PURCHASE_ORDER_REQUEST",
            "SALES_ORDER_COMMISSION_REQUEST"
          ],
          "type": "string"
        },
        "quotationId": {
          "type": "string",
          "x-relatedEntityName": "quotation"
        },
        "quotationNumber": {
          "type": "string"
        },
        "recordAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "recordComment": {
          "type": "string"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordOpening": {
          "type": "string"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        },
        "salesOrderId": {
          "type": "string",
          "x-relatedEntityName": "salesOrder"
        },
        "salesOrderNumber": {
          "type": "string"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "DOCUMENT_PRINTED",
            "NEW",
            "OFFER_RECEIVED"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/purchaseOrderRequestStatusHistory"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        },
        "warehouseName": {
          "type": "string"
        }
      },
      "required": [
        "purchaseOrderRequestNumber",
        "purchaseOrderRequestType",
        "status"
      ],
      "type": "object"
    },
    "purchaseOrderRequestItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "itemType": {
          "enum": [
            "DEFAULT",
            "FREE_TEXT",
            "SERVICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "note": {
          "type": "string"
        },
        "parentItemId": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "priceScaleType": {
          "enum": [
            "SCALE_FROM",
            "SCALE_TO"
          ],
          "type": "string"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "scaleValues": {
          "items": {
            "$ref": "#/definitions/purchaseOrderRequestItemScaleValue"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrderRequestItemScaleValue": {
      "properties": {
        "scale": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrderRequestOffer": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "currencyConversionDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyConversionRate": {
          "format": "number",
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "headerDiscount": {
          "format": "number",
          "type": "string"
        },
        "headerSurcharge": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "nonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "nonStandardTaxName": {
          "type": "string"
        },
        "offerDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "plannedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "purchaseOrderRequestOfferItems": {
          "items": {
            "$ref": "#/definitions/purchaseOrderRequestOfferItem"
          },
          "type": "array"
        },
        "recordComment": {
          "type": "string"
        },
        "recordCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "recordCurrencyName": {
          "type": "string"
        },
        "recordEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordOpening": {
          "type": "string"
        },
        "replyDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "requestDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "status": {
          "enum": [
            "ACCEPTED",
            "DECLINED",
            "OFFER_RECEIVED",
            "OPEN",
            "REQUESTED",
            "REVISED",
            "REVISED_REQUEST"
          ],
          "type": "string"
        },
        "supplierId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "supplierNumber": {
          "type": "string"
        },
        "supplierReference": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "termOfPaymentName": {
          "type": "string"
        },
        "validFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "validTo": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "recordCurrencyId",
        "status",
        "supplierId"
      ],
      "type": "object"
    },
    "purchaseOrderRequestOfferItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accepted": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "containerQuantity": {
          "format": "number",
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "minQuantity": {
          "format": "number",
          "type": "string"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatistics": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatisticsInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "parentItemId": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "procurementLeadDays": {
          "format": "int32",
          "type": "integer"
        },
        "purchaseOrderRequestItemId": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditionItems": {
          "items": {
            "$ref": "#/definitions/reductionAdditionItem"
          },
          "type": "array"
        },
        "scaleType": {
          "enum": [
            "SCALE_FROM",
            "SCALE_TO"
          ],
          "type": "string"
        },
        "scaleValues": {
          "items": {
            "$ref": "#/definitions/purchaseOrderRequestOfferItemScaleValue"
          },
          "type": "array"
        },
        "supplierArticleNumber": {
          "type": "string"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "useSupplierArticleNumber": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "purchaseOrderRequestOfferItemInformation_V1": {
      "properties": {
        "createOrUpdateArticleSupplySource": {
          "type": "boolean"
        },
        "offerItemId": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "salesOrderItemId": {
          "format": "int32",
          "type": "integer"
        },
        "updateInformation": {
          "type": "boolean"
        },
        "updatePurchasePrice": {
          "enum": [
            "NO_UPDATE",
            "UPDATE_GENERAL_PURCHASE_PRICE",
            "UPDATE_PURCHASE_PRICE_ONLY_FOR_CUSTOMER"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrderRequestOfferItemScaleValue": {
      "properties": {
        "price": {
          "format": "number",
          "type": "string"
        },
        "scale": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrderRequestSettings": {
      "properties": {
        "automaticallyCreateOfferPublicPage": {
          "type": "boolean"
        },
        "defaultRequestType": {
          "enum": [
            "BLANKET_ORDER_REQUEST",
            "BLANKET_PURCHASE_ORDER_REQUEST",
            "DROP_SHIPPING_REQUEST",
            "PURCHASE_ORDER_REQUEST",
            "SALES_ORDER_COMMISSION_REQUEST"
          ],
          "type": "string"
        },
        "disableOfferPublicPage": {
          "type": "boolean"
        },
        "responseDeadlineInDays": {
          "format": "int32",
          "type": "integer"
        },
        "responsiblePersonId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsiblePersonType": {
          "enum": [
            "CURRENT_USER_AS_RESPONSIBLE",
            "FIXED",
            "RESPONSIBLE_FROM_PREVIOUS",
            "RESPONSIBLE_FROM_SUPPLIER"
          ],
          "type": "string"
        }
      },
      "required": [
        "responseDeadlineInDays"
      ],
      "type": "object"
    },
    "purchaseOrderRequestStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "DOCUMENT_PRINTED",
            "NEW",
            "OFFER_RECEIVED"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "purchaseOrderSettings": {
      "properties": {
        "appendSalesOrderNumberToPurchaseOrderNumber": {
          "type": "boolean"
        },
        "documentCreationOptional": {
          "type": "boolean"
        },
        "responsiblePersonId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsiblePersonType": {
          "enum": [
            "CURRENT_USER_AS_RESPONSIBLE",
            "FIXED",
            "RESPONSIBLE_FROM_PREVIOUS",
            "RESPONSIBLE_FROM_SUPPLIER"
          ],
          "type": "string"
        },
        "salesOrderCostInheritanceMode": {
          "enum": [
            "CUSTOMER_ORDER_COSTS_ALWAYS",
            "CUSTOMER_ORDER_COSTS_FALLBACK",
            "CUSTOMER_ORDER_PRICE_ALWAYS",
            "CUSTOMER_ORDER_PRICE_FALLBACK",
            "SUPPLIER_COSTS"
          ],
          "type": "string"
        },
        "salesOrderItemDescriptionInheritanceMode": {
          "enum": [
            "COPY_DESCRIPTION",
            "COPY_DESCRIPTION_AND_TITLE",
            "COPY_NEITHER_DESCRIPTION_NOR_TITLE"
          ],
          "type": "string"
        },
        "salesOrderRelatedPurchaseOrderResponsiblePersonId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "salesOrderRelatedPurchaseOrderResponsiblePersonType": {
          "enum": [
            "CURRENT_USER_AS_RESPONSIBLE",
            "FIXED",
            "RESPONSIBLE_FROM_PREVIOUS",
            "RESPONSIBLE_FROM_SUPPLIER"
          ],
          "type": "string"
        },
        "salesOrderRelatedPurchaseOrderShipmentTypeId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "salesOrderRelatedPurchaseOrderShipmentTypeInitialisationMode": {
          "enum": [
            "FIXED",
            "FROM_SALES_ORDER",
            "FROM_SUPPLIER_DATA"
          ],
          "type": "string"
        },
        "useSalesOrderShippingCost": {
          "type": "boolean"
        },
        "workflowActions": {
          "$ref": "#/definitions/purchaseOrderWorkflowSettings"
        }
      },
      "required": [
        "salesOrderCostInheritanceMode"
      ],
      "type": "object"
    },
    "purchaseOrderShippingCostItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrderStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "CONFIRMED",
            "ORDER_DOCUMENTS_PRINTED",
            "ORDER_ENTRY_COMPLETED",
            "ORDER_ENTRY_IN_PROGRESS"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "purchaseOrderWorkflowSettings": {
      "properties": {
        "completeEntry": {
          "type": "boolean"
        },
        "createContract": {
          "type": "boolean"
        },
        "importZugferdInvoice": {
          "type": "boolean"
        },
        "printDropshippingDeliveryNote": {
          "type": "boolean"
        },
        "printLabels": {
          "type": "boolean"
        },
        "standardInvoiceCompleteWorkflow": {
          "type": "boolean"
        },
        "switchCurrencyWithConversion": {
          "type": "boolean"
        },
        "updatePurchasePrices": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "purchaseRequisition": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "earliestRequiredDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "internalShipmentId": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "latestRequiredDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "packagingUnitToOrderId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "productionOrderId": {
          "type": "string"
        },
        "productionOrderItemId": {
          "type": "string"
        },
        "proposedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "proposedQuantity": {
          "format": "number",
          "type": "string"
        },
        "purchaseOrderId": {
          "type": "string"
        },
        "requirementQuantity": {
          "format": "number",
          "type": "string"
        },
        "requisitionNumber": {
          "type": "string"
        },
        "salesOrderItemId": {
          "type": "string"
        },
        "status": {
          "enum": [
            "APPROVED",
            "CANCELLED",
            "CLOSED",
            "NEW"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/purchaseRequisitionStatusHistory"
          },
          "type": "array"
        },
        "supplierId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "warehouseId": {
          "type": "string"
        }
      },
      "required": [
        "packagingUnitToOrderId",
        "status"
      ],
      "type": "object"
    },
    "purchaseRequisitionStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "APPROVED",
            "CANCELLED",
            "CLOSED",
            "NEW"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "purchaseSettings": {
      "properties": {
        "dropshipping": {
          "$ref": "#/definitions/dropshippingSettings"
        },
        "general": {
          "$ref": "#/definitions/purchaseGeneralSettings"
        },
        "incomingGoods": {
          "$ref": "#/definitions/incomingGoodsSettings"
        },
        "invoice": {
          "$ref": "#/definitions/purchaseInvoiceSettings"
        },
        "materialPlanning": {
          "$ref": "#/definitions/materialPlanningSettings"
        },
        "purchaseOrder": {
          "$ref": "#/definitions/purchaseOrderSettings"
        },
        "purchaseOrderRequest": {
          "$ref": "#/definitions/purchaseOrderRequestSettings"
        },
        "supplierReturn": {
          "$ref": "#/definitions/supplierReturnSettingsDto"
        }
      },
      "type": "object"
    },
    "quantityConversion": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "conversionQuantity": {
          "format": "number",
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "lastEditedUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "oppositeDirection": {
          "type": "boolean"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        }
      },
      "required": [
        "conversionQuantity",
        "unitId"
      ],
      "type": "object"
    },
    "quotation": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "activeVersion": {
          "type": "boolean"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        },
        "commissionSalesPartners": {
          "items": {
            "$ref": "#/definitions/commissionSalesPartner"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "currencyConversionDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyConversionRate": {
          "format": "number",
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "customerNumber": {
          "type": "string"
        },
        "defaultShippingCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "defaultShippingCarrierName": {
          "type": "string"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "deliveryEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "description": {
          "type": "string"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "dispatchCountryCode": {
          "type": "string"
        },
        "expectedSignatureDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "factoring": {
          "type": "boolean"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "headerDiscount": {
          "format": "number",
          "type": "string"
        },
        "headerSurcharge": {
          "format": "number",
          "type": "string"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "invoiceRecipientId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "mergedToQuotationId": {
          "type": "string"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "nonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "nonStandardTaxName": {
          "type": "string"
        },
        "opportunityId": {
          "type": "string",
          "x-relatedEntityName": "opportunity"
        },
        "opportunityNumber": {
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "plannedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedShippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "pricingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "publicLink": {
          "type": "string"
        },
        "quotationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "quotationItems": {
          "items": {
            "$ref": "#/definitions/quotationItem"
          },
          "type": "array"
        },
        "quotationNumber": {
          "type": "string"
        },
        "quotationType": {
          "enum": [
            "CONTRACT",
            "NONE",
            "PROJECT",
            "SALES_INVOICE",
            "SALES_ORDER"
          ],
          "type": "string"
        },
        "quotationVersion": {
          "format": "int32",
          "type": "integer"
        },
        "recordAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "recordComment": {
          "type": "string"
        },
        "recordCommentInheritance": {
          "type": "boolean"
        },
        "recordCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "recordCurrencyName": {
          "type": "string"
        },
        "recordEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordFreeTextInheritance": {
          "type": "boolean"
        },
        "recordOpening": {
          "type": "string"
        },
        "recordOpeningInheritance": {
          "type": "boolean"
        },
        "rejectionReason": {
          "type": "string"
        },
        "requestDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        },
        "salesInvoiceEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "salesOrderEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "salesProbability": {
          "format": "int32",
          "type": "integer"
        },
        "salesStageHistory": {
          "items": {
            "$ref": "#/definitions/salesStageHistory"
          },
          "type": "array"
        },
        "salesStageId": {
          "type": "string",
          "x-relatedEntityName": "salesStage"
        },
        "salesStageName": {
          "type": "string"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "shipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "shipmentMethodName": {
          "type": "string"
        },
        "shippingCostItems": {
          "items": {
            "$ref": "#/definitions/quotationShippingCostItem"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            "ACCEPTED",
            "CANCELLED",
            "INQUIRED",
            "OPEN",
            "REJECTED"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/quotationStatusHistory"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "template": {
          "type": "boolean"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "termOfPaymentName": {
          "type": "string"
        },
        "validFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "validTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        },
        "warehouseName": {
          "type": "string"
        }
      },
      "required": [
        "customerId",
        "recordCurrencyId",
        "status"
      ],
      "type": "object"
    },
    "quotationItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addPageBreakBefore": {
          "type": "boolean"
        },
        "alternative": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "commissionSalesPartners": {
          "items": {
            "$ref": "#/definitions/commissionSalesPartner"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "invoicingType": {
          "enum": [
            "EFFORT",
            "FIXED_PRICE"
          ],
          "type": "string"
        },
        "itScopeId": {
          "type": "string"
        },
        "itemType": {
          "enum": [
            "DEFAULT",
            "FREE_TEXT",
            "SERVICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualPlannedWorkingTimePerUnit": {
          "type": "boolean"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "manualUnitCost": {
          "type": "boolean"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatistics": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatisticsInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "parentItemId": {
          "type": "string"
        },
        "plannedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedShippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedWorkingTimePerUnit": {
          "format": "int64",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "recommendedRetailPrice": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditionItems": {
          "items": {
            "$ref": "#/definitions/reductionAdditionItem"
          },
          "type": "array"
        },
        "scaleValues": {
          "items": {
            "$ref": "#/definitions/quotationItemScaleValue"
          },
          "type": "array"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unitCost": {
          "format": "number",
          "type": "string"
        },
        "unitCostInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "quotationItemScaleValue": {
      "properties": {
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "fromSalesPrice": {
          "type": "boolean"
        },
        "price": {
          "format": "number",
          "type": "string"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditionItems": {
          "items": {
            "$ref": "#/definitions/priceDataReductionAdditionItem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "quotationSalesSettingsDto": {
      "properties": {
        "allowDocumentUploadOnPublicPage": {
          "type": "boolean"
        },
        "allowPriceScales": {
          "type": "boolean"
        },
        "automaticallyCreatePublicLink": {
          "type": "boolean"
        },
        "automaticallyRejectOtherVersionsOnAccept": {
          "type": "boolean"
        },
        "defaultRecordCreationType": {
          "enum": [
            "CONTRACT",
            "NONE",
            "PROJECT",
            "SALES_INVOICE",
            "SALES_ORDER"
          ],
          "type": "string"
        },
        "defaultValidityInDays": {
          "format": "int32",
          "type": "integer"
        },
        "disablePublicPage": {
          "type": "boolean"
        },
        "responsiblePersonId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsiblePersonType": {
          "enum": [
            "CURRENT_USER_AS_RESPONSIBLE",
            "FIXED",
            "RESPONSIBLE_FROM_PREVIOUS",
            "RESPONSIBLE_FROM_SUPPLIER"
          ],
          "type": "string"
        },
        "takeContactPrimaryAddressFromOpportunity": {
          "type": "boolean"
        },
        "updateValidityOnQuotationDateUpdate": {
          "type": "boolean"
        },
        "workflowActions": {
          "$ref": "#/definitions/quotationWorkflowSettings"
        }
      },
      "type": "object"
    },
    "quotationShippingCostItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualUnitCost": {
          "type": "boolean"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "unitCost": {
          "format": "number",
          "type": "string"
        },
        "unitCostInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "quotationStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "ACCEPTED",
            "CANCELLED",
            "INQUIRED",
            "OPEN",
            "REJECTED"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "quotationWorkflowSettings": {
      "properties": {
        "calculateSalesPricesBasedOnCosts": {
          "type": "boolean"
        },
        "createPurchaseOrderRequest": {
          "type": "boolean"
        },
        "printLabels": {
          "type": "boolean"
        },
        "printQuotationData": {
          "type": "boolean"
        },
        "recalculateCosts": {
          "type": "boolean"
        },
        "resetTaxes": {
          "type": "boolean"
        },
        "setCostsForItemsWithoutCost": {
          "type": "boolean"
        },
        "switchCurrencyWithConversion": {
          "type": "boolean"
        },
        "updateSalesPrices": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "reasonOfAbsence": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "abbreviation": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "color": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "ignoreInResourceUtilization": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "abbreviation",
        "color",
        "name"
      ],
      "type": "object"
    },
    "recordAddress": {
      "properties": {
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "company2": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "globalLocationNumber": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "postOfficeBoxCity": {
          "type": "string"
        },
        "postOfficeBoxNumber": {
          "type": "string"
        },
        "postOfficeBoxZipCode": {
          "type": "string"
        },
        "salutation": {
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ],
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street1": {
          "type": "string"
        },
        "street2": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "titleId": {
          "type": "string",
          "x-relatedEntityName": "title"
        },
        "zipcode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "recordEmailingRule": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "attachPurchaseOrderRequestCsvFile": {
          "type": "boolean"
        },
        "attachRecordDocument": {
          "type": "boolean"
        },
        "attachReturnLabel": {
          "type": "boolean"
        },
        "attachShippingLabel": {
          "type": "boolean"
        },
        "bccRecipients": {
          "type": "string"
        },
        "ccRecipients": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "event": {
          "enum": [
            "CREDIT_ADVICE_CANCELLATION_DOCUMENT_CREATED",
            "CREDIT_ADVICE_CANCELLED",
            "CREDIT_ADVICE_CREATED",
            "CREDIT_ADVICE_DOCUMENT_CREATED",
            "CREDIT_ADVICE_ENTRY_COMPLETED",
            "CREDIT_ADVICE_OPEN_ITEM_CREATED",
            "CREDIT_ADVICE_OPEN_ITEM_PAID",
            "PERFORMANCE_RECORD_CANCELLED",
            "PERFORMANCE_RECORD_DOCUMENT_CREATED",
            "PERFORMANCE_RECORD_RECORDED",
            "PURCHASE_ORDER_CANCELLED",
            "PURCHASE_ORDER_CLOSED",
            "PURCHASE_ORDER_CONFIRMED",
            "PURCHASE_ORDER_DOCUMENTS_PRINTED",
            "PURCHASE_ORDER_DROPSHIPPING_DELIVERY_NOTE_PRINTED",
            "PURCHASE_ORDER_REQUEST_DECLINED",
            "PURCHASE_ORDER_REQUEST_REQUESTED",
            "QUOTATION_ACCEPTED",
            "QUOTATION_DOCUMENT_CREATED",
            "QUOTATION_INQUIRED",
            "QUOTATION_REJECTED",
            "RETURN_CREDIT_NOTE_CREATED",
            "RETURN_LABEL_PRINTED",
            "RETURN_MOVED_INTO_STORE",
            "SALES_INVOICE_CANCELLATION_DOCUMENT_CREATED",
            "SALES_INVOICE_CANCELLED",
            "SALES_INVOICE_CREATED",
            "SALES_INVOICE_DOCUMENT_CREATED",
            "SALES_INVOICE_ENTRY_COMPLETED",
            "SALES_INVOICE_OPEN_ITEM_CREATED",
            "SALES_INVOICE_OPEN_ITEM_PAID",
            "SALES_ORDER_CANCELLED",
            "SALES_ORDER_CLOSED",
            "SALES_ORDER_CONFIRMATION_PRINTED",
            "SALES_ORDER_INVOICED",
            "SALES_ORDER_MANUALLY_CLOSED",
            "SALES_ORDER_PARTIALLY_SHIPPED",
            "SALES_ORDER_SHIPMENT_RECORD_CREATED",
            "SALES_ORDER_SHIPMENT_RECORD_PARTIALLY_CREATED",
            "SALES_ORDER_SHIPPED",
            "SHIPMENT_CANCELLED",
            "SHIPMENT_CONFIRMATION_OF_ARRIVAL_CREATED",
            "SHIPMENT_DELIVERY_NOTE_PRINTED",
            "SHIPMENT_DROPSHIPPING_DELIVERY_NOTE_PRINTED",
            "SHIPMENT_DROPSHIPPING_SHIPPED",
            "SHIPMENT_RETURN_LABEL_PRINTED",
            "SHIPMENT_SHIPPED",
            "SUPPLIER_RETURN_DELIVERY_NOTE_PRINTED",
            "SUPPLIER_RETURN_RETURN_LABEL_PRINTED",
            "SUPPLIER_RETURN_SHIPPED"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "mailAccountId": {
          "type": "string",
          "x-relatedEntityName": "mailAccount"
        },
        "name": {
          "type": "string"
        },
        "otherRecipients": {
          "type": "string"
        },
        "paymentMethodTypes": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "recipientType": {
          "enum": [
            "OTHER_RECIPIENT",
            "RECORD_RECIPIENT"
          ],
          "type": "string"
        },
        "salesChannels": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "salesInvoiceOrigin": {
          "enum": [
            "ADVANCE_PAYMENT_INVOICE",
            "CONTRACT",
            "FINAL_INVOICE",
            "PART_PAYMENT_INVOICE",
            "PREPAYMENT_INVOICE",
            "RECURRING_INVOICE",
            "RETAIL_INVOICE",
            "SALES_ORDER",
            "STANDARD_INVOICE"
          ],
          "type": "string"
        },
        "salesInvoiceTypes": {
          "items": {
            "enum": [
              "ADVANCE_PAYMENT_INVOICE",
              "CREDIT_NOTE",
              "FINAL_INVOICE",
              "PART_PAYMENT_INVOICE",
              "PREPAYMENT_INVOICE",
              "RETAIL_INVOICE",
              "STANDARD_INVOICE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "shipmentOutTypes": {
          "items": {
            "enum": [
              "CONSIGNMENT",
              "CONSIGNMENT_RETURN",
              "CUSTOMER_COMPENSATION",
              "INTERNAL",
              "STANDARD",
              "SUPPLIER_RETURN"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "templateId": {
          "type": "string",
          "x-relatedEntityName": "mailTemplate"
        }
      },
      "required": [
        "event",
        "recipientType",
        "templateId"
      ],
      "type": "object"
    },
    "recurringEvent": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "endsOn": {
          "format": "timestamp",
          "type": "integer"
        },
        "eventInterval": {
          "format": "int32",
          "type": "integer"
        },
        "eventOccurrenceCount": {
          "format": "int32",
          "type": "integer"
        },
        "eventType": {
          "enum": [
            "DAILY",
            "MONTHLY",
            "WEEKLY",
            "YEARLY"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "repeatOn": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "recurringInvoiceSalesSettingsDto": {
      "properties": {
        "intervalType": {
          "enum": [
            "DAILY",
            "HALF_YEARLY",
            "MONTHLY",
            "QUARTERLY",
            "WEEKLY",
            "YEARLY"
          ],
          "type": "string"
        },
        "reapplyCoreDataWhenCreatingRecordFromRecurring": {
          "type": "boolean"
        },
        "recalculateTax": {
          "type": "boolean"
        },
        "servicePeriodFromKey": {
          "enum": [
            "CURRENT_DATE",
            "CURRENT_DATE_LESS1",
            "CURRENT_DATE_NEXT_END_OF_MONTH",
            "CURRENT_DATE_NEXT_START_OF_MONTH",
            "CURRENT_DATE_PLUS1",
            "LAST_RI_DATE",
            "LAST_RI_DATE_LESS1",
            "LAST_RI_DATE_NEXT_END_OF_MONTH",
            "LAST_RI_DATE_NEXT_START_OF_MONTH",
            "LAST_RI_DATE_PLUS1",
            "NEXT_RI_DATE",
            "NEXT_RI_DATE_LESS1",
            "NEXT_RI_DATE_NEXT_END_OF_MONTH",
            "NEXT_RI_DATE_NEXT_START_OF_MONTH",
            "NEXT_RI_DATE_PLUS1"
          ],
          "type": "string"
        },
        "servicePeriodToKey": {
          "enum": [
            "CURRENT_DATE",
            "CURRENT_DATE_LESS1",
            "CURRENT_DATE_NEXT_END_OF_MONTH",
            "CURRENT_DATE_NEXT_START_OF_MONTH",
            "CURRENT_DATE_PLUS1",
            "LAST_RI_DATE",
            "LAST_RI_DATE_LESS1",
            "LAST_RI_DATE_NEXT_END_OF_MONTH",
            "LAST_RI_DATE_NEXT_START_OF_MONTH",
            "LAST_RI_DATE_PLUS1",
            "NEXT_RI_DATE",
            "NEXT_RI_DATE_LESS1",
            "NEXT_RI_DATE_NEXT_END_OF_MONTH",
            "NEXT_RI_DATE_NEXT_START_OF_MONTH",
            "NEXT_RI_DATE_PLUS1"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "reductionAddition": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ADDITIONAL_ABS",
            "ADDITION_PERCENT",
            "REDUCTION_ABS",
            "REDUCTION_PERCENT"
          ],
          "type": "string"
        },
        "value": {
          "format": "number",
          "type": "string"
        }
      },
      "required": [
        "type",
        "value"
      ],
      "type": "object"
    },
    "reductionAdditionItem": {
      "properties": {
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "source": {
          "enum": [
            "ARTICLE",
            "ARTICLE_AND_CUSTOMER",
            "ARTICLE_CATEGORY",
            "ARTICLE_CATEGORY_AND_CUSTOMER",
            "MANUAL"
          ],
          "type": "string"
        },
        "specialPriceReduction": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ADDITION_ABSOLUTE",
            "ADDITION_PERCENT",
            "REDUCTION_ABSOLUTE",
            "REDUCTION_PERCENT"
          ],
          "type": "string"
        },
        "value": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "region": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "matchCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "releases": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "orderDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "purchaseOrderId": {
          "type": "string",
          "x-relatedEntityName": "purchaseOrder"
        },
        "releasedQuantity": {
          "format": "number",
          "type": "string"
        }
      },
      "required": [
        "releasedQuantity"
      ],
      "type": "object"
    },
    "reminder": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "additionalRecipients": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "ccMail": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "entityId": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastReminderSentDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "recurringEvent": {
          "$ref": "#/definitions/reminderRecurringEvent"
        },
        "reminderDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "sendType": {
          "enum": [
            "MAIL",
            "NOTIFICATION"
          ],
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "sendType",
        "subject"
      ],
      "type": "object"
    },
    "reminderRecurringEvent": {
      "properties": {
        "endsOnDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "eventInterval": {
          "format": "int32",
          "type": "integer"
        },
        "eventOccurrenceCount": {
          "format": "int32",
          "type": "integer"
        },
        "eventType": {
          "enum": [
            "DAILY",
            "MONTHLY",
            "WEEKLY",
            "YEARLY"
          ],
          "type": "string"
        },
        "repeatOn": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "remotePrintJob": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "documentId": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "printStatus": {
          "enum": [
            "DOCUMENT_NOT_FOUND",
            "ERROR",
            "NEW",
            "PRINTED",
            "SUBMITTED",
            "UNKNOWN_PRINTER"
          ],
          "type": "string"
        },
        "printerName": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "weclappOsHardwareId": {
          "type": "string"
        },
        "weclappOsId": {
          "type": "string",
          "x-relatedEntityName": "weclappOs"
        }
      },
      "required": [
        "documentId",
        "printStatus",
        "printerName",
        "quantity",
        "weclappOsId"
      ],
      "type": "object"
    },
    "resourceUtilizationSettings": {
      "properties": {
        "defaultWorkingHoursPerDay": {
          "format": "number",
          "type": "string"
        },
        "fillUpResourceUtilizationDay": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "retailSalesSettingsDto": {
      "properties": {
        "createPickingListWhileProcessing": {
          "type": "boolean"
        },
        "defaultCashAccountId": {
          "type": "string",
          "x-relatedEntityName": "cashAccount"
        },
        "defaultSalesChannel": {
          "type": "string"
        },
        "fulfillmentProviderId": {
          "type": "string",
          "x-relatedEntityName": "fulfillmentProvider"
        }
      },
      "type": "object"
    },
    "ribaSettings": {
      "properties": {
        "paymentMethodTypeId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesBillOfMaterialArticleItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        }
      },
      "required": [
        "articleId",
        "quantity"
      ],
      "type": "object"
    },
    "salesBillOfMaterialArticleSettings": {
      "properties": {
        "availableInSale": {
          "type": "boolean"
        },
        "baseUnitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "originalPrice": {
          "type": "boolean"
        },
        "originalPriceForPurchase": {
          "type": "boolean"
        },
        "partDeliveryPossible": {
          "type": "boolean"
        },
        "showOnDeliveryNote": {
          "type": "boolean"
        },
        "subitemsWithCostsInSales": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "salesChannel": {
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesChannelSettings": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesChannelsSettings": {
      "properties": {
        "defaultSalesChannel": {
          "type": "string"
        },
        "displayDisabledSalesChannelsForOverviewPagesAndReports": {
          "type": "boolean"
        },
        "salesChannels": {
          "items": {
            "$ref": "#/definitions/salesChannelSettings"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesInvoice": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "bookingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "bookingText": {
          "type": "string"
        },
        "cancellationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "cancellationNumber": {
          "type": "string"
        },
        "cancellationSlipCommissionBlock": {
          "type": "boolean"
        },
        "cancellationSlipCommissionSettlementDone": {
          "type": "boolean"
        },
        "collectiveInvoicePositionPrintType": {
          "enum": [
            "ORDER_POSITION_GROUP",
            "PERFORMANCE_RECORD_POSITION_GROUP",
            "SHIPMENT_POSITION_GROUP"
          ],
          "type": "string"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        },
        "commissionBlock": {
          "type": "boolean"
        },
        "commissionSalesPartners": {
          "items": {
            "$ref": "#/definitions/commissionSalesPartner"
          },
          "type": "array"
        },
        "commissionSettlementDone": {
          "type": "boolean"
        },
        "costCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        },
        "costTypeId": {
          "type": "string",
          "x-relatedEntityName": "costType"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "creditResetsOrderState": {
          "type": "boolean"
        },
        "currencyConversionDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyConversionRate": {
          "format": "number",
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerHabitualExporterLetterOfIntentId": {
          "type": "string"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "customerNumber": {
          "type": "string"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "deliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "directDebitFileCreated": {
          "type": "boolean"
        },
        "directDebitFileLatestDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "dispatchCountryCode": {
          "type": "string"
        },
        "dueDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "dunningBlockDateUntilDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "dunningBlockNote": {
          "type": "string"
        },
        "dunningBlockState": {
          "enum": [
            "BLOCKED",
            "TEMPORAL_BLOCKED",
            "UNBLOCKED"
          ],
          "type": "string"
        },
        "factoring": {
          "type": "boolean"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "headerDiscount": {
          "format": "number",
          "type": "string"
        },
        "headerSurcharge": {
          "format": "number",
          "type": "string"
        },
        "invoiceDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "nonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "nonStandardTaxName": {
          "type": "string"
        },
        "orderNumberAtCustomer": {
          "type": "string"
        },
        "paid": {
          "type": "boolean"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "paymentStatus": {
          "enum": [
            "CLEARED_WITH_CREDIT_NOTE",
            "CREDIT_NOTE_CLEARED",
            "NO_OPEN_ITEM",
            "OPEN",
            "PAID",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "precedingSalesInvoiceId": {
          "type": "string",
          "x-relatedEntityName": "salesInvoice"
        },
        "pricingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "recordAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "recordComment": {
          "type": "string"
        },
        "recordCommentInheritance": {
          "type": "boolean"
        },
        "recordCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "recordCurrencyName": {
          "type": "string"
        },
        "recordEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordFreeTextInheritance": {
          "type": "boolean"
        },
        "recordOpening": {
          "type": "string"
        },
        "recordOpeningInheritance": {
          "type": "boolean"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        },
        "salesInvoiceItems": {
          "items": {
            "$ref": "#/definitions/salesInvoiceItem"
          },
          "type": "array"
        },
        "salesInvoiceType": {
          "enum": [
            "ADVANCE_PAYMENT_INVOICE",
            "CREDIT_NOTE",
            "FINAL_INVOICE",
            "PART_PAYMENT_INVOICE",
            "PREPAYMENT_INVOICE",
            "RETAIL_INVOICE",
            "STANDARD_INVOICE"
          ],
          "type": "string"
        },
        "salesOrderId": {
          "type": "string",
          "x-relatedEntityName": "salesOrder"
        },
        "salesOrderNumber": {
          "type": "string"
        },
        "salesOrders": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "sepaDirectDebitMandateId": {
          "type": "string",
          "x-relatedEntityName": "sepaDirectDebitMandate"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "shipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "shipmentMethodName": {
          "type": "string"
        },
        "shippingCostItems": {
          "items": {
            "$ref": "#/definitions/salesInvoiceShippingCostItem"
          },
          "type": "array"
        },
        "shippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "DOCUMENT_CREATED",
            "ENTRY_COMPLETED",
            "NEW",
            "OPEN_ITEM_CREATED"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/salesInvoiceStatusHistory"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "termOfPaymentName": {
          "type": "string"
        },
        "vatRegistrationNumber": {
          "type": "string"
        }
      },
      "required": [
        "customerId",
        "paymentStatus",
        "recordCurrencyId",
        "status"
      ],
      "type": "object"
    },
    "salesInvoiceItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "accountNumber": {
          "type": "string"
        },
        "addPageBreakBefore": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "commissionSalesPartners": {
          "items": {
            "$ref": "#/definitions/commissionSalesPartner"
          },
          "type": "array"
        },
        "contractItemId": {
          "type": "string"
        },
        "cost2CostCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        },
        "costCenterItems": {
          "items": {
            "$ref": "#/definitions/costCenterWithDistributionPercentage"
          },
          "type": "array"
        },
        "costTypeId": {
          "type": "string",
          "x-relatedEntityName": "costType"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creditedInvoiceItemId": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "deliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "itemType": {
          "enum": [
            "DEFAULT",
            "FREE_TEXT",
            "SERVICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "manualUnitCost": {
          "type": "boolean"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatistics": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatisticsInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "parentItemId": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "recommendedRetailPrice": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditionItems": {
          "items": {
            "$ref": "#/definitions/reductionAdditionItem"
          },
          "type": "array"
        },
        "salesInvoiceItemRelationship": {
          "items": {
            "$ref": "#/definitions/salesInvoiceItemRelationship"
          },
          "type": "array"
        },
        "serialNumbers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "shippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unitCost": {
          "format": "number",
          "type": "string"
        },
        "unitCostInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesInvoiceItemRelationship": {
      "properties": {
        "performanceRecordItemId": {
          "type": "string"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "salesInvoiceItemId": {
          "type": "string"
        },
        "salesOrderItemId": {
          "type": "string"
        },
        "shipmentItemId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesInvoiceShippingCostItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualUnitCost": {
          "type": "boolean"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "unitCost": {
          "format": "number",
          "type": "string"
        },
        "unitCostInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesInvoiceStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "CANCELLED",
            "DOCUMENT_CREATED",
            "ENTRY_COMPLETED",
            "NEW",
            "OPEN_ITEM_CREATED"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "salesInvoiceWorkflowSettings": {
      "properties": {
        "calculateSalesPricesBasedOnCosts": {
          "type": "boolean"
        },
        "completeEntry": {
          "type": "boolean"
        },
        "createContract": {
          "type": "boolean"
        },
        "createFatturaElettronicaXml": {
          "type": "boolean"
        },
        "createPayment": {
          "type": "boolean"
        },
        "createTransusSalesInvoiceXml": {
          "type": "boolean"
        },
        "createXRechnungXml": {
          "type": "boolean"
        },
        "createZugferdUBLXml": {
          "type": "boolean"
        },
        "creditNoteCompleteWorkflow": {
          "type": "boolean"
        },
        "invoiceCompleteWorkflow": {
          "$ref": "#/definitions/invoiceCompleteWorkflowSettings"
        },
        "printLabels": {
          "type": "boolean"
        },
        "recalculateCosts": {
          "type": "boolean"
        },
        "resetTaxes": {
          "type": "boolean"
        },
        "saveAsRecurringInvoice": {
          "type": "boolean"
        },
        "setCostsForItemsWithoutCost": {
          "type": "boolean"
        },
        "switchCurrencyWithConversion": {
          "type": "boolean"
        },
        "updateSalesPrices": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "salesOpenItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "amount": {
          "format": "number",
          "type": "string"
        },
        "amountDiscount": {
          "format": "number",
          "type": "string"
        },
        "amountOpen": {
          "format": "number",
          "type": "string"
        },
        "amountPaid": {
          "format": "number",
          "type": "string"
        },
        "clearanceDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "cleared": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "openItemNumber": {
          "type": "string"
        },
        "openItemType": {
          "enum": [
            "CREDITOR",
            "CREDITOR_INVERTED",
            "CREDIT_ADVICE",
            "CREDIT_ADVICE_INVERTED",
            "CREDIT_NOTE_CREDITOR",
            "CREDIT_NOTE_CREDITOR_INVERTED",
            "CREDIT_NOTE_DEBITOR",
            "CREDIT_NOTE_DEBITOR_INVERTED",
            "DEBTOR",
            "DEBTOR_INCOMING_PAYMENT",
            "DEBTOR_INCOMING_PAYMENT_INVERTED",
            "DEBTOR_INVERTED",
            "DEBTOR_OUTGOING_PAYMENT",
            "DEBTOR_OUTGOING_PAYMENT_INVERTED",
            "DEBTOR_PARTY",
            "DEBTOR_PARTY_INVERTED",
            "DEBTOR_RETURN_DEBIT",
            "DEBTOR_RETURN_DEBIT_FEE"
          ],
          "type": "string"
        },
        "paymentApplications": {
          "items": {
            "$ref": "#/definitions/paymentApplication"
          },
          "type": "array"
        },
        "salesInvoiceId": {
          "type": "string",
          "x-relatedEntityName": "salesInvoice"
        }
      },
      "required": [
        "amount",
        "amountDiscount",
        "amountOpen",
        "amountPaid",
        "openItemNumber",
        "openItemType"
      ],
      "type": "object"
    },
    "salesOrder": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "advancePaymentAmount": {
          "format": "number",
          "type": "string"
        },
        "advancePaymentStatus": {
          "enum": [
            "OPEN",
            "PAID"
          ],
          "type": "string"
        },
        "applyShippingCostsOnlyOnce": {
          "type": "boolean"
        },
        "availability": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "availabilityForAllWarehouses": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "cashAccountId": {
          "type": "string",
          "x-relatedEntityName": "cashAccount"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        },
        "commissionSalesPartners": {
          "items": {
            "$ref": "#/definitions/commissionSalesPartner"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "currencyConversionDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyConversionRate": {
          "format": "number",
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerHabitualExporterLetterOfIntentId": {
          "type": "string"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "customerNumber": {
          "type": "string"
        },
        "defaultShippingCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "defaultShippingCarrierName": {
          "type": "string"
        },
        "defaultShippingReturnCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "defaultShippingReturnCarrierName": {
          "type": "string"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "deliveryEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "description": {
          "type": "string"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "dispatchCountryCode": {
          "type": "string"
        },
        "ecommerceOrder": {
          "$ref": "#/definitions/ecommerceOrder"
        },
        "factoring": {
          "type": "boolean"
        },
        "fulfillmentProviderId": {
          "type": "string",
          "x-relatedEntityName": "fulfillmentProvider"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "headerDiscount": {
          "format": "number",
          "type": "string"
        },
        "headerSurcharge": {
          "format": "number",
          "type": "string"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "invoiceRecipientId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "invoiced": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "nonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "nonStandardTaxName": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "onlyServices": {
          "type": "boolean"
        },
        "orderDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "orderItems": {
          "items": {
            "$ref": "#/definitions/salesOrderItem"
          },
          "type": "array"
        },
        "orderNumber": {
          "type": "string"
        },
        "orderNumberAtCustomer": {
          "type": "string"
        },
        "paid": {
          "type": "boolean"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "payments": {
          "items": {
            "$ref": "#/definitions/salesOrderPayment"
          },
          "type": "array"
        },
        "plannedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedProjectEndDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedProjectStartDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedShippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "pricingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "projectGoals": {
          "type": "string"
        },
        "projectMembers": {
          "items": {
            "$ref": "#/definitions/projectMembers"
          },
          "type": "array"
        },
        "projectModeActive": {
          "type": "boolean"
        },
        "quotationId": {
          "type": "string",
          "x-relatedEntityName": "quotation"
        },
        "quotationNumber": {
          "type": "string"
        },
        "recordAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "recordAsn": {
          "type": "string"
        },
        "recordComment": {
          "type": "string"
        },
        "recordCommentInheritance": {
          "type": "boolean"
        },
        "recordCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "recordCurrencyName": {
          "type": "string"
        },
        "recordEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordFreeTextInheritance": {
          "type": "boolean"
        },
        "recordOpening": {
          "type": "string"
        },
        "recordOpeningInheritance": {
          "type": "boolean"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "responsibleUserUsername": {
          "type": "string"
        },
        "salesChannel": {
          "type": "string"
        },
        "salesInvoiceEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "salesOrderPaymentType": {
          "enum": [
            "ADVANCE_PAYMENT",
            "COUNTER_SALES",
            "PART_PAYMENT",
            "PREPAYMENT",
            "STANDARD"
          ],
          "type": "string"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "sepaDirectDebitMandateId": {
          "type": "string",
          "x-relatedEntityName": "sepaDirectDebitMandate"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicesFinished": {
          "type": "boolean"
        },
        "shipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "shipmentMethodName": {
          "type": "string"
        },
        "shipped": {
          "type": "boolean"
        },
        "shippingCostItems": {
          "items": {
            "$ref": "#/definitions/salesOrderShippingCostItem"
          },
          "type": "array"
        },
        "shippingLabelsCount": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "MANUALLY_CLOSED",
            "ORDER_CONFIRMATION_PRINTED",
            "ORDER_ENTRY_IN_PROGRESS"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/salesOrderStatusHistory"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "template": {
          "type": "boolean"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "termOfPaymentName": {
          "type": "string"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        },
        "warehouseName": {
          "type": "string"
        }
      },
      "required": [
        "customerId",
        "recordCurrencyId",
        "status"
      ],
      "type": "object"
    },
    "salesOrderCompleteWorkflowSettings": {
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "printOrderConfirmation": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "salesOrderItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addPageBreakBefore": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "availability": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "availabilityForAllWarehouses": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "commissionSalesPartners": {
          "items": {
            "$ref": "#/definitions/commissionSalesPartner"
          },
          "type": "array"
        },
        "contractChargeId": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "ecommerceOrderItemIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "invoicedQuantity": {
          "format": "number",
          "type": "string"
        },
        "invoicingType": {
          "enum": [
            "EFFORT",
            "FIXED_PRICE"
          ],
          "type": "string"
        },
        "itemType": {
          "enum": [
            "DEFAULT",
            "FREE_TEXT",
            "SERVICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualPlannedWorkingTimePerUnit": {
          "type": "boolean"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "manualUnitCost": {
          "type": "boolean"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatistics": {
          "format": "number",
          "type": "string"
        },
        "netAmountForStatisticsInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "parentItemId": {
          "type": "string"
        },
        "picks": {
          "items": {
            "$ref": "#/definitions/itemPick"
          },
          "type": "array"
        },
        "plannedDeliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedShippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedWorkingTimePerUnit": {
          "format": "int64",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "recommendedRetailPrice": {
          "format": "number",
          "type": "string"
        },
        "reductionAdditionItems": {
          "items": {
            "$ref": "#/definitions/reductionAdditionItem"
          },
          "type": "array"
        },
        "returnedQuantity": {
          "format": "number",
          "type": "string"
        },
        "servicePeriodFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "servicePeriodTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "shipped": {
          "type": "boolean"
        },
        "shippedQuantity": {
          "format": "number",
          "type": "string"
        },
        "tasks": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unitCost": {
          "format": "number",
          "type": "string"
        },
        "unitCostInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrderPayment": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "amount": {
          "format": "number",
          "type": "string"
        },
        "condition": {
          "type": "string"
        },
        "conditionMet": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "dueDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "salesInvoiceId": {
          "type": "string"
        },
        "salesInvoices": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrderShippingCostItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "ecommerceOrderItemIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "grossAmount": {
          "format": "number",
          "type": "string"
        },
        "grossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualUnitCost": {
          "type": "boolean"
        },
        "manualUnitPrice": {
          "type": "boolean"
        },
        "netAmount": {
          "format": "number",
          "type": "string"
        },
        "netAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxName": {
          "type": "string"
        },
        "unitCost": {
          "format": "number",
          "type": "string"
        },
        "unitCostInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "unitPrice": {
          "format": "number",
          "type": "string"
        },
        "unitPriceInCompanyCurrency": {
          "format": "number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrderStatusHistory": {
      "properties": {
        "creditLimitExceeded": {
          "type": "boolean"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "MANUALLY_CLOSED",
            "ORDER_CONFIRMATION_PRINTED",
            "ORDER_ENTRY_IN_PROGRESS"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "salesOrderWorkflowSettings": {
      "properties": {
        "advancePaymentInvoiceCompleteWorkflow": {
          "type": "boolean"
        },
        "calculateSalesPricesBasedOnCosts": {
          "type": "boolean"
        },
        "createContract": {
          "type": "boolean"
        },
        "createDropshippingOrder": {
          "type": "boolean"
        },
        "createPreOrAdvancePaymentInvoice": {
          "type": "boolean"
        },
        "createProductionOrders": {
          "type": "boolean"
        },
        "createPurchaseOrderRequest": {
          "type": "boolean"
        },
        "createSalesOrderCommission": {
          "type": "boolean"
        },
        "partPaymentInvoiceCompleteWorkflow": {
          "type": "boolean"
        },
        "performanceRecordCompleteWorkflow": {
          "type": "boolean"
        },
        "prepaymentInvoiceCompleteWorkflow": {
          "type": "boolean"
        },
        "previewSalesOrderConfirmation": {
          "type": "boolean"
        },
        "printLabels": {
          "type": "boolean"
        },
        "printOrderData": {
          "type": "boolean"
        },
        "printReturnLabels": {
          "type": "boolean"
        },
        "printShippingLabelsBeforeShipment": {
          "type": "boolean"
        },
        "recalculateCosts": {
          "type": "boolean"
        },
        "resetTaxes": {
          "type": "boolean"
        },
        "salesOrderCompleteWorkflow": {
          "$ref": "#/definitions/salesOrderCompleteWorkflowSettings"
        },
        "setCostsForItemsWithoutCost": {
          "type": "boolean"
        },
        "shipmentCompleteWorkflow": {
          "type": "boolean"
        },
        "standardInvoiceCompleteWorkflow": {
          "type": "boolean"
        },
        "switchCurrencyWithConversion": {
          "type": "boolean"
        },
        "updateSalesPrices": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "salesPipeline": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "salesChannels": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "salesStages": {
          "items": {
            "$ref": "#/definitions/entity"
          },
          "type": "array"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "salesSettings": {
      "properties": {
        "commissionRun": {
          "$ref": "#/definitions/commissionRunSalesSettingsDto"
        },
        "customerReturn": {
          "$ref": "#/definitions/customerReturnSalesSettingsDto"
        },
        "general": {
          "$ref": "#/definitions/generalSalesSettingsDto"
        },
        "invoice": {
          "$ref": "#/definitions/invoiceSalesSettingsDto"
        },
        "order": {
          "$ref": "#/definitions/orderSalesSettingsDto"
        },
        "performanceRecord": {
          "$ref": "#/definitions/performanceRecordSalesSettingsDto"
        },
        "project": {
          "$ref": "#/definitions/projectSalesSettingsDto"
        },
        "quotation": {
          "$ref": "#/definitions/quotationSalesSettingsDto"
        },
        "recurringInvoice": {
          "$ref": "#/definitions/recurringInvoiceSalesSettingsDto"
        },
        "retail": {
          "$ref": "#/definitions/retailSalesSettingsDto"
        },
        "shipment": {
          "$ref": "#/definitions/shipmentSalesSettingsDto"
        }
      },
      "type": "object"
    },
    "salesStage": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "probability": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "probability"
      ],
      "type": "object"
    },
    "salesStageHistory": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "salesStageId": {
          "type": "string",
          "x-relatedEntityName": "salesStage"
        },
        "salesStageName": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "searchResult": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/abstractEntity"
        },
        "entityId": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "matches": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "searchResults": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/searchResult"
          },
          "type": "array"
        },
        "originalResultCount": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "sepaDirectDebitMandate": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "bankAccountId": {
          "type": "string",
          "x-relatedEntityName": "bankAccount"
        },
        "cancellationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "firstDebit": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "mandateReference": {
          "type": "string"
        },
        "partyBankAccountId": {
          "type": "string"
        },
        "runtime": {
          "enum": [
            "ONE_OFF_MANDATE",
            "RECURRING_MANDATE"
          ],
          "type": "string"
        },
        "signatureDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "type": {
          "enum": [
            "B2B",
            "CORE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "sepaDirectDebitMandateSettings": {
      "properties": {
        "combinedBankTransferDirectDebit": {
          "type": "boolean"
        },
        "defaultMandateReference": {
          "type": "string"
        },
        "directDebitIncludeDiscount": {
          "type": "boolean"
        },
        "directDebitMinimumWorkingDays": {
          "format": "int32",
          "type": "integer"
        },
        "directDebitPainVersion": {
          "enum": [
            "SEPA00800101",
            "SEPA00800102"
          ],
          "type": "string"
        },
        "directDebitStandardText": {
          "type": "string"
        },
        "paymentMethodTypeIdForDirectDebit": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "serialNumber": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "serialNumber": {
          "type": "string"
        }
      },
      "required": [
        "articleId",
        "serialNumber"
      ],
      "type": "object"
    },
    "serviceArticleSettings": {
      "properties": {
        "availableInSale": {
          "type": "boolean"
        },
        "baseUnitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "defineIndividualTaskTemplates": {
          "type": "boolean"
        },
        "invoicingType": {
          "enum": [
            "EFFORT",
            "FIXED_PRICE"
          ],
          "type": "string"
        },
        "plannedWorkingTimePerUnit": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "shelf": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "shortIdentifier": {
          "type": "string"
        },
        "storageLocationId": {
          "type": "string",
          "x-relatedEntityName": "storageLocation"
        },
        "storagePlaces": {
          "items": {
            "$ref": "#/definitions/nestedStoragePlace"
          },
          "type": "array"
        }
      },
      "required": [
        "shortIdentifier",
        "storageLocationId",
        "storagePlaces"
      ],
      "type": "object"
    },
    "shipment": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "additionalDeliveryInformation": {
          "type": "string"
        },
        "availability": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "availabilityForAllWarehouses": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "consolidationStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerPurchaseOrderNumber": {
          "type": "string"
        },
        "declaredValueAmount": {
          "format": "number",
          "type": "string"
        },
        "declaredValueAmountCurrencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "declaredValueAmountCurrencyName": {
          "type": "string"
        },
        "deliveryDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "destinationStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "destinationWarehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        },
        "destinationWarehouseName": {
          "type": "string"
        },
        "dhlReceiverId": {
          "type": "string"
        },
        "disableEmailTemplate": {
          "type": "boolean"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "invoiceRecipientId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "packageHeight": {
          "format": "int32",
          "type": "integer"
        },
        "packageLength": {
          "format": "int32",
          "type": "integer"
        },
        "packageReferenceNumber": {
          "type": "string"
        },
        "packageReturnTrackingNumber": {
          "type": "string"
        },
        "packageReturnTrackingUrl": {
          "type": "string"
        },
        "packageTrackingNumber": {
          "type": "string"
        },
        "packageTrackingUrl": {
          "type": "string"
        },
        "packageWeight": {
          "format": "number",
          "type": "string"
        },
        "packageWidth": {
          "format": "int32",
          "type": "integer"
        },
        "pickingInstructions": {
          "type": "string"
        },
        "picksComplete": {
          "type": "boolean"
        },
        "purchaseOrders": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "recipientAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "recipientCustomerNumber": {
          "type": "string"
        },
        "recipientPartyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "recipientSupplierNumber": {
          "type": "string"
        },
        "recordComment": {
          "type": "string"
        },
        "recordEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "recordFreeText": {
          "type": "string"
        },
        "recordOpening": {
          "type": "string"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "salesInvoiceEmailAddresses": {
          "$ref": "#/definitions/emailAddresses"
        },
        "salesOrderId": {
          "type": "string",
          "x-relatedEntityName": "salesOrder"
        },
        "salesOrderNumber": {
          "type": "string"
        },
        "salesOrders": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "sentToRecipient": {
          "type": "boolean"
        },
        "shipmentItems": {
          "items": {
            "$ref": "#/definitions/shipmentItem"
          },
          "type": "array"
        },
        "shipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "shipmentMethodName": {
          "type": "string"
        },
        "shipmentNumber": {
          "type": "string"
        },
        "shipmentType": {
          "enum": [
            "CONSIGNMENT",
            "CONSIGNMENT_RETURN",
            "CUSTOMER_COMPENSATION",
            "INTERNAL",
            "STANDARD",
            "SUPPLIER_RETURN"
          ],
          "type": "string"
        },
        "shippedFromAddress": {
          "$ref": "#/definitions/recordAddress"
        },
        "shippingCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "shippingCarrierName": {
          "type": "string"
        },
        "shippingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "shippingLabelsCount": {
          "format": "int32",
          "type": "integer"
        },
        "shippingReturnCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "shippingReturnCarrierName": {
          "type": "string"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "DELIVERED",
            "DELIVERY_NOTE_PRINTED",
            "INCOMING_CANCELLED",
            "INCOMING_MOVED_INTO_STORE",
            "INCOMING_SHIPPED",
            "IN_ROUTE",
            "NEW",
            "SHIPPED"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/shipmentStatus"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        },
        "warehouseName": {
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "shipmentCompleteWorkflowSettings": {
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "printPickingLists": {
          "type": "boolean"
        },
        "printReturnLabels": {
          "type": "boolean"
        },
        "printReturnNote": {
          "type": "boolean"
        },
        "printShippingLabels": {
          "type": "boolean"
        },
        "shipShipment": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "shipmentItem": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addPageBreakBefore": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "availability": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "availabilityForAllWarehouses": {
          "enum": [
            "COMPLETELY_AVAILABLE",
            "NOTHING_AVAILABLE",
            "NOT_CHECKED",
            "PARTIALLY_AVAILABLE",
            "TRANSFER_REQUIRED"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionFixed": {
          "type": "boolean"
        },
        "groupName": {
          "type": "string"
        },
        "itemType": {
          "enum": [
            "DEFAULT",
            "FREE_TEXT",
            "SERVICE"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "manualQuantity": {
          "type": "boolean"
        },
        "note": {
          "type": "string"
        },
        "parentItemId": {
          "type": "string"
        },
        "picks": {
          "items": {
            "$ref": "#/definitions/itemPick"
          },
          "type": "array"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "purchaseOrderItemId": {
          "type": "string"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "returnAssessmentId": {
          "type": "string",
          "x-relatedEntityName": "shipmentReturnAssessment"
        },
        "returnAssessmentName": {
          "type": "string"
        },
        "returnDescription": {
          "type": "string"
        },
        "returnErrorId": {
          "type": "string",
          "x-relatedEntityName": "shipmentReturnError"
        },
        "returnErrorName": {
          "type": "string"
        },
        "returnReasonId": {
          "type": "string",
          "x-relatedEntityName": "shipmentReturnReason"
        },
        "returnReasonName": {
          "type": "string"
        },
        "returnRectificationId": {
          "type": "string",
          "x-relatedEntityName": "shipmentReturnRectification"
        },
        "returnRectificationName": {
          "type": "string"
        },
        "salesOrderItemId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "unitName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "shipmentMethod": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "shipmentReturnDescription": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customerReturn": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "supplierReturn": {
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "shipmentSalesSettingsDto": {
      "properties": {
        "allowChangingItemDescription": {
          "type": "boolean"
        },
        "allowPickingListWithIncompleteWithdrawals": {
          "type": "boolean"
        },
        "createShipmentSerialNumbersCsv": {
          "type": "boolean"
        },
        "defaultPickingInstructions": {
          "type": "string"
        },
        "defaultShippingCarrierId": {
          "type": "string",
          "x-relatedEntityName": "shippingCarrier"
        },
        "deliveryDateInitialisationMode": {
          "enum": [
            "CURRENT_DATE",
            "INHERIT_FROM_SALES_ORDER",
            "NO_INITIALIZATION"
          ],
          "type": "string"
        },
        "initialiseShippingLabelFromPrimaryContactOfCustomer": {
          "type": "boolean"
        },
        "initializeDeclaredValueByGrossAmount": {
          "type": "boolean"
        },
        "printCountryOnShippingLabel": {
          "type": "boolean"
        },
        "removeEmptyLevelsFromPickingListSuggestion": {
          "type": "boolean"
        },
        "removeOrReduceUnavailableItemsForNewOutgoingShipments": {
          "type": "boolean"
        },
        "shippingDateInitialisationMode": {
          "enum": [
            "CURRENT_DATE",
            "INHERIT_FROM_SALES_ORDER",
            "NO_INITIALIZATION"
          ],
          "type": "string"
        },
        "shippingNoteCreationCondition": {
          "enum": [
            "CONSOLIDATED_WITHDRAWALS",
            "WITH_INCOMPLETE_WITHDRAWALS",
            "WITH_UNCONSOLIDATED_WITHDRAWALS"
          ],
          "type": "string"
        },
        "weightCalculationType": {
          "enum": [
            "GROSS_WEIGHT",
            "NET_WEIGHT",
            "NEVER"
          ],
          "type": "string"
        },
        "workflowActions": {
          "$ref": "#/definitions/shipmentWorkflowSettings"
        }
      },
      "required": [
        "weightCalculationType"
      ],
      "type": "object"
    },
    "shipmentStatus": {
      "properties": {
        "status": {
          "enum": [
            "CANCELLED",
            "DELIVERED",
            "DELIVERY_NOTE_PRINTED",
            "INCOMING_CANCELLED",
            "INCOMING_MOVED_INTO_STORE",
            "INCOMING_SHIPPED",
            "IN_ROUTE",
            "NEW",
            "SHIPPED"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "shipmentWorkflowSettings": {
      "properties": {
        "bookLoadingEquipmentToConsolidationStoragePlace": {
          "type": "boolean"
        },
        "createConfirmationOfArrival": {
          "type": "boolean"
        },
        "createProformaInvoice": {
          "type": "boolean"
        },
        "createTransusShipmentXml": {
          "type": "boolean"
        },
        "printLabels": {
          "type": "boolean"
        },
        "printPickingLists": {
          "type": "boolean"
        },
        "printReturnLabels": {
          "type": "boolean"
        },
        "printReturnNote": {
          "type": "boolean"
        },
        "printShippingLabels": {
          "type": "boolean"
        },
        "shipmentCompleteWorkflow": {
          "$ref": "#/definitions/shipmentCompleteWorkflowSettings"
        }
      },
      "type": "object"
    },
    "shippingCarrier": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "ecommerceShippingCarrier": {
          "enum": [
            "AUSTRIAN_POST",
            "CARGO_INTERNATIONAL",
            "DACHSER",
            "DB_SCHENKER",
            "DEUTSCHE_POST",
            "DHL",
            "DHL_EXPRESS",
            "DPD",
            "FEDEX",
            "GLS",
            "GO",
            "HERMES",
            "ILOXX",
            "KUEHNE_NAGEL",
            "OTHER",
            "PARCEL_ONE",
            "TNT",
            "UPS"
          ],
          "type": "string"
        },
        "internalShippingCarrier": {
          "enum": [
            "ANGEL_DE",
            "AUSTRIAN_POST_EMS",
            "AUSTRIAN_POST_PLUS_INTERNATIONAL",
            "AUSTRIAN_POST_PREMIUM",
            "AUSTRIAN_POST_PREMIUM_SELECT",
            "AUSTRIAN_POST_RETURNS",
            "AUSTRIAN_POST_STANDARD",
            "CARGO_INTERNATIONAL_EXPRESS",
            "CARGO_INTERNATIONAL_STANDARD",
            "DEUTSCHE_POST_STANDARD",
            "DHL_EUROPAKET",
            "DHL_EUROPAKET_EV",
            "DHL_EXPRESS_ECONOMY_SELECT",
            "DHL_EXPRESS_ONE_DAY",
            "DHL_EXPRESS_ONE_DAY_EARLY",
            "DHL_KLEINPAKET_EV",
            "DHL_PAKET_EV",
            "DHL_PAKET_INTERNATIONAL_EV",
            "DHL_RETURNS",
            "DHL_RETURNS_EV",
            "DHL_STANDARD",
            "DHL_WARENPOST",
            "DHL_WARENPOST_INTERNATIONAL_EV",
            "DPD_EXPRESS_ONE_DAY",
            "DPD_EXPRESS_ONE_DAY_EARLY",
            "DPD_RETURNS",
            "DPD_STANDARD",
            "FEDEX_EXPRESS_ONE_DAY_EARLY",
            "FEDEX_INTERNATIONAL_ECONOMY",
            "FEDEX_INTERNATIONAL_PRIORITY",
            "FEDEX_STANDARD",
            "GLS_EXPRESS_ONE_DAY",
            "GLS_PICK_AND_SHIP",
            "GLS_RETURNS",
            "GLS_STANDARD",
            "GO_ONE_DAY",
            "HERMES_RETURNS",
            "HERMES_STANDARD",
            "ILOXX_STANDARD",
            "PARCEL_ONE",
            "TNT_ONE_DAY",
            "TNT_ONE_DAY_EARLY",
            "UPS_EXPEDITED",
            "UPS_EXPRESS_1200",
            "UPS_EXPRESS_ONE_DAY",
            "UPS_EXPRESS_ONE_DAY_EARLY",
            "UPS_RETURNS",
            "UPS_STANDARD"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "shippingServiceProviderType": {
          "enum": [
            "DHL",
            "SENDCLOUD",
            "SHIPCLOUD",
            "STANDARD"
          ],
          "type": "string"
        },
        "trackingUrl": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "shippingServiceProviderType"
      ],
      "type": "object"
    },
    "shippingCostArticleSettings": {
      "properties": {
        "availableInSale": {
          "type": "boolean"
        },
        "baseUnitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "showOnDeliveryNote": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "stagedMoneyTransaction": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "amount": {
          "format": "number",
          "type": "string"
        },
        "amountCostsOfMonetaryTraffic": {
          "format": "number",
          "type": "string"
        },
        "bankAccountId": {
          "type": "string"
        },
        "bankBooked": {
          "type": "boolean"
        },
        "bankCurrencyCode": {
          "type": "string"
        },
        "bankGvc": {
          "type": "string"
        },
        "bankPrimaNota": {
          "type": "string"
        },
        "bankTransactionType": {
          "enum": [
            "ATM",
            "CHARGES",
            "DIRECT_DEBIT",
            "ELECTRONIC_CASH",
            "GELDKARTE",
            "INTEREST",
            "RENT",
            "SALARY",
            "STANDING_ORDER",
            "TRANSFER",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "effectiveDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "moneyTransactionSource": {
          "enum": [
            "AMAZON",
            "CAMT053",
            "EBAY",
            "FINAPI",
            "KLARNA",
            "LONDON_ZURICH",
            "MANUALLY",
            "MOLLIE",
            "MT940_KAPOTT",
            "MT940_PROVIDE",
            "PAYMENT_RUN",
            "PAYPAL",
            "POS",
            "QWIST",
            "SHOPIFY",
            "STRIPE",
            "TINK"
          ],
          "type": "string"
        },
        "partyAccountNumber": {
          "type": "string"
        },
        "partyBankCode": {
          "type": "string"
        },
        "partyBankName": {
          "type": "string"
        },
        "partyName": {
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "purpose": {
          "type": "string"
        },
        "realDuplicate": {
          "type": "boolean"
        },
        "transactionCategory": {
          "enum": [
            "AMAZON_PAYMENT",
            "BANK",
            "CASH",
            "CREDIT_CARD",
            "EBAY",
            "PAYPAL",
            "SHOPIFY_PAYMENT"
          ],
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "standardInvoiceCompleteWorkflowSettings": {
      "properties": {
        "completeEntry": {
          "type": "boolean"
        },
        "crossCheckInvoiceWithPurchaseOrder": {
          "type": "boolean"
        },
        "enable": {
          "type": "boolean"
        },
        "startInvoiceVerification": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "storableArticleSettings": {
      "properties": {
        "availableInSale": {
          "type": "boolean"
        },
        "baseUnitId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        },
        "batchNumberRequired": {
          "type": "boolean"
        },
        "productionArticle": {
          "type": "boolean"
        },
        "serialNumberRequired": {
          "type": "boolean"
        },
        "showOnDeliveryNote": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "storageLocation": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "blockStoragePlaces": {
          "items": {
            "$ref": "#/definitions/nestedStoragePlace"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "shelves": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "shortIdentifier": {
          "type": "string"
        },
        "storagePlaceTypeSettingsBlocked": {
          "$ref": "#/definitions/storagePlaceTypeSettings"
        },
        "storagePlaceTypeSettingsPicking": {
          "$ref": "#/definitions/storagePlaceTypeSettings"
        },
        "storagePlaceTypeSettingsStock": {
          "$ref": "#/definitions/storagePlaceTypeSettings"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        }
      },
      "required": [
        "name",
        "shortIdentifier",
        "storagePlaceTypeSettingsBlocked",
        "storagePlaceTypeSettingsPicking",
        "storagePlaceTypeSettingsStock"
      ],
      "type": "object"
    },
    "storagePlace": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "barcode": {
          "type": "string"
        },
        "blockedForResupply": {
          "type": "boolean"
        },
        "blockedForResupplyReasonId": {
          "type": "string",
          "x-relatedEntityName": "storagePlaceBlockingReason"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currentInventoryId": {
          "type": "string",
          "x-relatedEntityName": "inventory"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "fieldNumber": {
          "format": "int32",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "levelNumber": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "shelfId": {
          "type": "string",
          "x-relatedEntityName": "shelf"
        },
        "shelfStorageLocationId": {
          "type": "string",
          "x-relatedEntityName": "storageLocation"
        },
        "storageLocationId": {
          "type": "string",
          "x-relatedEntityName": "storageLocation"
        },
        "storagePlaceSizeId": {
          "type": "string",
          "x-relatedEntityName": "storagePlaceSize"
        },
        "storagePlaceType": {
          "enum": [
            "ASSEMBLY",
            "BLOCKED",
            "BUFFER",
            "CONSOLIDATION",
            "INBOUND",
            "PICKING",
            "STOCK",
            "UNIVERSAL",
            "UNIVERSAL_WITHOUT_PICKING"
          ],
          "type": "string"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        }
      },
      "required": [
        "name",
        "storagePlaceType"
      ],
      "type": "object"
    },
    "storagePlaceSize": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "loadingEquipmentIdentifierId": {
          "type": "string",
          "x-relatedEntityName": "loadingEquipmentIdentifier"
        },
        "name": {
          "type": "string"
        },
        "segmentQuantity": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "loadingEquipmentIdentifierId",
        "name",
        "segmentQuantity"
      ],
      "type": "object"
    },
    "storagePlaceTypeSettings": {
      "properties": {
        "allowMixedStoring": {
          "type": "boolean"
        },
        "automaticPlaceAssignment": {
          "type": "boolean"
        },
        "multiplePlacesPerBaseArticle": {
          "type": "boolean"
        },
        "transportationOrderRequiresFreeSegment": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "successResponse": {
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "suggestReferencesResult": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/abstractEntity"
        },
        "entityId": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "labelColumns": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "suggestReferencesResults": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/suggestReferencesResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "suggestedLicense": {
      "properties": {
        "available": {
          "type": "boolean"
        },
        "dependingUserRoleIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "supplier": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "addresses": {
          "items": {
            "$ref": "#/definitions/address"
          },
          "type": "array"
        },
        "bankAccounts": {
          "items": {
            "$ref": "#/definitions/partyBankAccount"
          },
          "type": "array"
        },
        "birthDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "commercialLanguageId": {
          "type": "string",
          "x-relatedEntityName": "commercialLanguage"
        },
        "company": {
          "type": "string"
        },
        "company2": {
          "type": "string"
        },
        "contacts": {
          "items": {
            "$ref": "#/definitions/contact"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "currencyId": {
          "type": "string",
          "x-relatedEntityName": "currency"
        },
        "currencyName": {
          "type": "string"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerNumberAtSupplier": {
          "type": "string"
        },
        "deliveryAddressId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "invoiceAddressId": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "mobilePhone1": {
          "type": "string"
        },
        "nonStandardTaxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "onlineAccounts": {
          "items": {
            "$ref": "#/definitions/onlineAccount"
          },
          "type": "array"
        },
        "orderBlock": {
          "type": "boolean"
        },
        "partyType": {
          "enum": [
            "ORGANIZATION",
            "PERSON"
          ],
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string",
          "x-relatedEntityName": "paymentMethod"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "personCompany": {
          "type": "string"
        },
        "personDepartmentId": {
          "type": "string",
          "x-relatedEntityName": "personDepartment"
        },
        "personRoleId": {
          "type": "string",
          "x-relatedEntityName": "personRole"
        },
        "phone": {
          "type": "string"
        },
        "primaryAddressId": {
          "type": "string"
        },
        "primaryContactId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "referenceNumber": {
          "type": "string"
        },
        "salutation": {
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ],
          "type": "string"
        },
        "sectorId": {
          "type": "string",
          "x-relatedEntityName": "sector"
        },
        "sectorName": {
          "type": "string"
        },
        "shipmentMethodId": {
          "type": "string",
          "x-relatedEntityName": "shipmentMethod"
        },
        "shipmentMethodName": {
          "type": "string"
        },
        "supplierNumber": {
          "type": "string"
        },
        "supplierRatingId": {
          "type": "string",
          "x-relatedEntityName": "partyRating"
        },
        "supplierRatingName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "termOfPaymentId": {
          "type": "string",
          "x-relatedEntityName": "termOfPayment"
        },
        "termOfPaymentName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "titleId": {
          "type": "string",
          "x-relatedEntityName": "title"
        },
        "vatRegistrationNumber": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      },
      "required": [
        "partyType"
      ],
      "type": "object"
    },
    "supplierReturnSettingsDto": {
      "properties": {
        "resetShippedQuantityInPurchaseOrder": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "supplySource": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleSupplySourceId": {
          "type": "string",
          "x-relatedEntityName": "articleSupplySource"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "articleSupplySourceId"
      ],
      "type": "object"
    },
    "systemInfo": {
      "properties": {
        "companyIcon": {
          "type": "string"
        },
        "createSupportTicket": {
          "type": "boolean"
        },
        "customerNumber": {
          "type": "string"
        },
        "dynamicLogo": {
          "type": "string"
        },
        "erpStarter": {
          "type": "boolean"
        },
        "expiringLicenses": {
          "items": {
            "$ref": "#/definitions/licenseWithCount"
          },
          "type": "array"
        },
        "globalMessage": {
          "type": "string"
        },
        "globalSearch": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "intercom": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "licensingMode": {
          "enum": [
            "CONTRACTS_IN_OTHER_BAOSS",
            "ON_PREMISE",
            "STANDALONE",
            "STANDALONE_WITH_LICENSES"
          ],
          "type": "string"
        },
        "linkToCertifiedPartners": {
          "type": "boolean"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "ACTIVE_LOCKED",
            "INACTIVE"
          ],
          "type": "string"
        },
        "supportChat": {
          "type": "boolean"
        },
        "testSystem": {
          "type": "boolean"
        },
        "trialDays": {
          "format": "int32",
          "type": "integer"
        },
        "universalButtonIcon": {
          "type": "string"
        },
        "weclappVersion": {
          "type": "string"
        },
        "workflowSalesInvoiceFatturapaXmlExport": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "tag": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "task": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "allowOverBooking": {
          "type": "boolean"
        },
        "allowTimeBooking": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "assignees": {
          "items": {
            "$ref": "#/definitions/taskAssignee"
          },
          "type": "array"
        },
        "billableStatus": {
          "type": "boolean"
        },
        "calendarEventId": {
          "type": "string",
          "x-relatedEntityName": "calendarEvent"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "dateFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "dateTo": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "entityReferences": {
          "items": {
            "$ref": "#/definitions/entityReference"
          },
          "type": "array"
        },
        "identifier": {
          "type": "string"
        },
        "invoicingStatus": {
          "enum": [
            "INVOICED",
            "NOT_INVOICED",
            "PARTLY_INVOICED"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastReminderDateForOverdue": {
          "format": "timestamp",
          "type": "integer"
        },
        "orderItemId": {
          "type": "string"
        },
        "parentTaskId": {
          "type": "string",
          "x-relatedEntityName": "task"
        },
        "performanceRecordedStatus": {
          "enum": [
            "NOT_PERFORMANCE_RECORDED",
            "PERFORMANCE_RECORDED",
            "UNDEFINED"
          ],
          "type": "string"
        },
        "plannedEffort": {
          "format": "int64",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "previousTaskId": {
          "type": "string",
          "x-relatedEntityName": "task"
        },
        "subject": {
          "type": "string"
        },
        "taskLists": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "taskMailAccount": {
          "$ref": "#/definitions/taskMailAccount"
        },
        "taskPriority": {
          "enum": [
            "HIGH",
            "LOW",
            "MEDIUM"
          ],
          "type": "string"
        },
        "taskStatus": {
          "enum": [
            "COMPLETED",
            "DEFERRED",
            "IN_PROGRESS",
            "NOT_STARTED",
            "WAITING_ON_OTHERS"
          ],
          "type": "string"
        },
        "taskTopics": {
          "items": {
            "$ref": "#/definitions/entity"
          },
          "type": "array"
        },
        "taskTypes": {
          "items": {
            "$ref": "#/definitions/entity"
          },
          "type": "array"
        },
        "taskVisibilityType": {
          "enum": [
            "ORGANIZATION",
            "PRIVATE"
          ],
          "type": "string"
        },
        "ticketId": {
          "type": "string",
          "x-relatedEntityName": "ticket"
        },
        "userOfLastStatusChangeId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "watchers": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        }
      },
      "required": [
        "taskPriority",
        "taskStatus",
        "taskVisibilityType"
      ],
      "type": "object"
    },
    "taskAssignee": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedEffort": {
          "format": "int64",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "taskList": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "visibilityType": {
          "enum": [
            "ORGANIZATION",
            "PRIVATE"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "visibilityType"
      ],
      "type": "object"
    },
    "taskMailAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "mailAccountId": {
          "type": "string"
        },
        "serverIdentifier": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "taskTemplate": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "assignees": {
          "items": {
            "$ref": "#/definitions/taskTemplateAssignee"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "creatorUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "entityReferences": {
          "items": {
            "$ref": "#/definitions/entityReference"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "parentTaskTemplateId": {
          "type": "string",
          "x-relatedEntityName": "taskTemplate"
        },
        "plannedEffort": {
          "format": "int64",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "subject": {
          "type": "string"
        },
        "taskPriority": {
          "enum": [
            "HIGH",
            "LOW",
            "MEDIUM"
          ],
          "type": "string"
        },
        "taskTopics": {
          "items": {
            "$ref": "#/definitions/entity"
          },
          "type": "array"
        },
        "taskTypes": {
          "items": {
            "$ref": "#/definitions/entity"
          },
          "type": "array"
        },
        "taskVisibilityType": {
          "enum": [
            "ORGANIZATION",
            "PRIVATE"
          ],
          "type": "string"
        },
        "watchers": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        }
      },
      "required": [
        "taskPriority",
        "taskVisibilityType"
      ],
      "type": "object"
    },
    "taskTemplateAssignee": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "plannedEffort": {
          "format": "int64",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "tax": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "accountNumber": {
          "type": "string"
        },
        "contraAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "contraAccountNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "defaultDiscountAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "defaultDiscountAccountNumber": {
          "type": "string"
        },
        "defaultNominalAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "defaultNominalAccountNumber": {
          "type": "string"
        },
        "depositAccountId": {
          "type": "string",
          "x-relatedEntityName": "ledgerAccount"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "taxKey": {
          "enum": [
            "AD_ADD_STANDARD",
            "AD_ADD_TAX_FREE_THIRD",
            "AD_ADD_ZERO",
            "AD_IN_STANDARD",
            "AD_IN_TAX_FREE_THIRD",
            "AD_IN_ZERO",
            "AL_ADD_REDUCED",
            "AL_ADD_STANDARD",
            "AL_ADD_TAX_FREE_THIRD",
            "AL_ADD_ZERO",
            "AL_IN_REDUCED",
            "AL_IN_STANDARD",
            "AL_IN_TAX_FREE_THIRD",
            "AL_IN_ZERO",
            "AR_ADD_REDUCED",
            "AR_ADD_STANDARD",
            "AR_ADD_TAX_FREE_THIRD",
            "AR_ADD_ZERO",
            "AR_IN_REDUCED",
            "AR_IN_STANDARD",
            "AR_IN_TAX_FREE_THIRD",
            "AR_IN_ZERO",
            "AT_ADD_REDUCED",
            "AT_ADD_REDUCED_SLIGHT",
            "AT_ADD_STANDARD",
            "AT_ADD_TAX_FREE_EU",
            "AT_ADD_TAX_FREE_EU_SERVICES",
            "AT_ADD_TAX_FREE_THIRD",
            "AT_ADD_ZERO",
            "AT_IN_REDUCED",
            "AT_IN_REDUCED_SLIGHT",
            "AT_IN_REV_REDUCED_EU",
            "AT_IN_REV_REDUCED_EU_SERVICE",
            "AT_IN_REV_REDUCED_SLIGHT_EU",
            "AT_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "AT_IN_REV_STANDARD_EU",
            "AT_IN_REV_STANDARD_EU_SERVICE",
            "AT_IN_STANDARD",
            "AT_IN_TAX_FREE_THIRD",
            "AT_IN_ZERO",
            "AU_ADD_STANDARD",
            "AU_ADD_TAX_FREE_THIRD",
            "AU_ADD_ZERO",
            "AU_IN_STANDARD",
            "AU_IN_TAX_FREE_THIRD",
            "AU_IN_ZERO",
            "BA_ADD_STANDARD",
            "BA_ADD_TAX_FREE_THIRD",
            "BA_ADD_ZERO",
            "BA_IN_STANDARD",
            "BA_IN_TAX_FREE_THIRD",
            "BA_IN_ZERO",
            "BE_ADD_REDUCED",
            "BE_ADD_REDUCED_SLIGHT",
            "BE_ADD_STANDARD",
            "BE_ADD_TAX_FREE_EU",
            "BE_ADD_TAX_FREE_EU_SERVICES",
            "BE_ADD_TAX_FREE_THIRD",
            "BE_ADD_ZERO",
            "BE_IN_REDUCED",
            "BE_IN_REDUCED_SLIGHT",
            "BE_IN_REV_REDUCED_EU",
            "BE_IN_REV_REDUCED_EU_SERVICE",
            "BE_IN_REV_REDUCED_SLIGHT_EU",
            "BE_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "BE_IN_REV_STANDARD_EU",
            "BE_IN_REV_STANDARD_EU_SERVICE",
            "BE_IN_STANDARD",
            "BE_IN_TAX_FREE_THIRD",
            "BE_IN_ZERO",
            "BG_ADD_REDUCED",
            "BG_ADD_STANDARD",
            "BG_ADD_TAX_FREE_EU",
            "BG_ADD_TAX_FREE_EU_SERVICES",
            "BG_ADD_TAX_FREE_THIRD",
            "BG_ADD_ZERO",
            "BG_IN_REDUCED",
            "BG_IN_REV_REDUCED_EU",
            "BG_IN_REV_REDUCED_EU_SERVICE",
            "BG_IN_REV_STANDARD_EU",
            "BG_IN_REV_STANDARD_EU_SERVICE",
            "BG_IN_STANDARD",
            "BG_IN_TAX_FREE_THIRD",
            "BG_IN_ZERO",
            "BO_ADD_REDUCED",
            "BO_ADD_STANDARD",
            "BO_ADD_TAX_FREE_THIRD",
            "BO_ADD_ZERO",
            "BO_IN_REDUCED",
            "BO_IN_STANDARD",
            "BO_IN_TAX_FREE_THIRD",
            "BO_IN_ZERO",
            "BR_ADD_STANDARD",
            "BR_ADD_TAX_FREE_THIRD",
            "BR_ADD_ZERO",
            "BR_IN_STANDARD",
            "BR_IN_TAX_FREE_THIRD",
            "BR_IN_ZERO",
            "CA_ADD_STANDARD",
            "CA_ADD_TAX_FREE_THIRD",
            "CA_ADD_ZERO",
            "CA_IN_STANDARD",
            "CA_IN_TAX_FREE_THIRD",
            "CA_IN_ZERO",
            "CH_ADD_REDUCED",
            "CH_ADD_REDUCED_2024",
            "CH_ADD_REDUCED_SLIGHT",
            "CH_ADD_REDUCED_SLIGHT_2024",
            "CH_ADD_STANDARD",
            "CH_ADD_STANDARD_2024",
            "CH_ADD_TAX_FREE_THIRD",
            "CH_ADD_ZERO",
            "CH_IN_REDUCED",
            "CH_IN_REDUCED_2024",
            "CH_IN_REDUCED_SLIGHT",
            "CH_IN_REDUCED_SLIGHT_2024",
            "CH_IN_STANDARD",
            "CH_IN_STANDARD_2024",
            "CH_IN_TAX_FREE_THIRD",
            "CH_IN_ZERO",
            "CL_ADD_STANDARD",
            "CL_ADD_TAX_FREE_THIRD",
            "CL_ADD_ZERO",
            "CL_IN_STANDARD",
            "CL_IN_TAX_FREE_THIRD",
            "CL_IN_ZERO",
            "CN_ADD_REDUCED",
            "CN_ADD_REDUCED_SLIGHT",
            "CN_ADD_REDUCED_SUPER",
            "CN_ADD_STANDARD",
            "CN_ADD_TAX_FREE_THIRD",
            "CN_ADD_ZERO",
            "CN_IN_REDUCED",
            "CN_IN_REDUCED_SLIGHT",
            "CN_IN_REDUCED_SUPER",
            "CN_IN_STANDARD",
            "CN_IN_TAX_FREE_THIRD",
            "CN_IN_ZERO",
            "CY_ADD_REDUCED",
            "CY_ADD_REDUCED_SLIGHT",
            "CY_ADD_STANDARD",
            "CY_ADD_TAX_FREE_EU",
            "CY_ADD_TAX_FREE_EU_SERVICES",
            "CY_ADD_TAX_FREE_THIRD",
            "CY_ADD_ZERO",
            "CY_IN_REDUCED",
            "CY_IN_REDUCED_SLIGHT",
            "CY_IN_REV_REDUCED_EU",
            "CY_IN_REV_REDUCED_EU_SERVICE",
            "CY_IN_REV_REDUCED_SLIGHT_EU",
            "CY_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "CY_IN_REV_STANDARD_EU",
            "CY_IN_REV_STANDARD_EU_SERVICE",
            "CY_IN_STANDARD",
            "CY_IN_TAX_FREE_THIRD",
            "CY_IN_ZERO",
            "CZ_ADD_REDUCED",
            "CZ_ADD_REDUCED_2024",
            "CZ_ADD_REDUCED_SLIGHT",
            "CZ_ADD_STANDARD",
            "CZ_ADD_TAX_FREE_EU",
            "CZ_ADD_TAX_FREE_EU_SERVICES",
            "CZ_ADD_TAX_FREE_THIRD",
            "CZ_ADD_ZERO",
            "CZ_IN_REDUCED",
            "CZ_IN_REDUCED_2024",
            "CZ_IN_REDUCED_SLIGHT",
            "CZ_IN_REV_REDUCED_EU",
            "CZ_IN_REV_REDUCED_EU_2024",
            "CZ_IN_REV_REDUCED_EU_SERVICE",
            "CZ_IN_REV_REDUCED_EU_SERVICE_2024",
            "CZ_IN_REV_REDUCED_SLIGHT_EU",
            "CZ_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "CZ_IN_REV_STANDARD_EU",
            "CZ_IN_REV_STANDARD_EU_SERVICE",
            "CZ_IN_STANDARD",
            "CZ_IN_TAX_FREE_THIRD",
            "CZ_IN_ZERO",
            "DE_ADD_REDUCED",
            "DE_ADD_REDUCED_2020",
            "DE_ADD_STANDARD",
            "DE_ADD_STANDARD_2020",
            "DE_ADD_TAX_FREE_EU",
            "DE_ADD_TAX_FREE_EU_SERVICES",
            "DE_ADD_TAX_FREE_THIRD",
            "DE_ADD_ZERO",
            "DE_IN_IMPORT",
            "DE_IN_REDUCED",
            "DE_IN_REDUCED_2020",
            "DE_IN_REV_REDUCED_EU",
            "DE_IN_REV_REDUCED_EU_2020",
            "DE_IN_REV_REDUCED_EU_SERVICE",
            "DE_IN_REV_REDUCED_EU_SERVICE_2020",
            "DE_IN_REV_STANDARD_EU",
            "DE_IN_REV_STANDARD_EU_2020",
            "DE_IN_REV_STANDARD_EU_SERVICE",
            "DE_IN_REV_STANDARD_EU_SERVICE_2020",
            "DE_IN_STANDARD",
            "DE_IN_STANDARD_2020",
            "DE_IN_TAX_FREE_THIRD",
            "DE_IN_ZERO",
            "DK_ADD_STANDARD",
            "DK_ADD_TAX_FREE_EU",
            "DK_ADD_TAX_FREE_EU_SERVICES",
            "DK_ADD_TAX_FREE_THIRD",
            "DK_ADD_ZERO",
            "DK_IN_REV_STANDARD_EU",
            "DK_IN_REV_STANDARD_EU_SERVICE",
            "DK_IN_STANDARD",
            "DK_IN_TAX_FREE_THIRD",
            "DK_IN_ZERO",
            "EE_ADD_REDUCED",
            "EE_ADD_REDUCED_SLIGHT_2025",
            "EE_ADD_STANDARD",
            "EE_ADD_STANDARD_2024",
            "EE_ADD_TAX_FREE_EU",
            "EE_ADD_TAX_FREE_EU_SERVICES",
            "EE_ADD_TAX_FREE_THIRD",
            "EE_ADD_ZERO",
            "EE_IN_REDUCED",
            "EE_IN_REDUCED_SLIGHT_2025",
            "EE_IN_REV_REDUCED_EU",
            "EE_IN_REV_REDUCED_EU_SERVICE",
            "EE_IN_REV_REDUCED_SLIGHT_EU_2025",
            "EE_IN_REV_REDUCED_SLIGHT_EU_SERVICE_2025",
            "EE_IN_REV_STANDARD_EU",
            "EE_IN_REV_STANDARD_EU_2024",
            "EE_IN_REV_STANDARD_EU_SERVICE",
            "EE_IN_REV_STANDARD_EU_SERVICE_2024",
            "EE_IN_STANDARD",
            "EE_IN_STANDARD_2024",
            "EE_IN_TAX_FREE_THIRD",
            "EE_IN_ZERO",
            "ES_ADD_REDUCED",
            "ES_ADD_REDUCED_SLIGHT",
            "ES_ADD_STANDARD",
            "ES_ADD_TAX_FREE_EU",
            "ES_ADD_TAX_FREE_EU_SERVICES",
            "ES_ADD_TAX_FREE_THIRD",
            "ES_ADD_ZERO",
            "ES_IN_REDUCED",
            "ES_IN_REDUCED_SLIGHT",
            "ES_IN_REV_REDUCED_EU",
            "ES_IN_REV_REDUCED_EU_SERVICE",
            "ES_IN_REV_REDUCED_SLIGHT_EU",
            "ES_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "ES_IN_REV_STANDARD_EU",
            "ES_IN_REV_STANDARD_EU_SERVICE",
            "ES_IN_STANDARD",
            "ES_IN_TAX_FREE_THIRD",
            "ES_IN_ZERO",
            "FI_ADD_REDUCED",
            "FI_ADD_REDUCED_SLIGHT",
            "FI_ADD_STANDARD",
            "FI_ADD_STANDARD_09_2024",
            "FI_ADD_TAX_FREE_EU",
            "FI_ADD_TAX_FREE_EU_SERVICES",
            "FI_ADD_TAX_FREE_THIRD",
            "FI_ADD_ZERO",
            "FI_IN_REDUCED",
            "FI_IN_REDUCED_SLIGHT",
            "FI_IN_REV_REDUCED_EU",
            "FI_IN_REV_REDUCED_EU_SERVICE",
            "FI_IN_REV_REDUCED_SLIGHT_EU",
            "FI_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "FI_IN_REV_STANDARD_EU",
            "FI_IN_REV_STANDARD_EU_09_2024",
            "FI_IN_REV_STANDARD_EU_SERVICE",
            "FI_IN_STANDARD",
            "FI_IN_STANDARD_09_2024",
            "FI_IN_TAX_FREE_THIRD",
            "FI_IN_ZERO",
            "FO_ADD_STANDARD",
            "FO_ADD_TAX_FREE_THIRD",
            "FO_ADD_ZERO",
            "FO_IN_STANDARD",
            "FO_IN_TAX_FREE_THIRD",
            "FO_IN_ZERO",
            "FR_ADD_REDUCED",
            "FR_ADD_REDUCED_SLIGHT",
            "FR_ADD_REDUCED_SUPER",
            "FR_ADD_STANDARD",
            "FR_ADD_TAX_FREE_EU",
            "FR_ADD_TAX_FREE_EU_SERVICES",
            "FR_ADD_TAX_FREE_THIRD",
            "FR_ADD_ZERO",
            "FR_IN_REDUCED",
            "FR_IN_REDUCED_SLIGHT",
            "FR_IN_REDUCED_SUPER",
            "FR_IN_REV_REDUCED_EU",
            "FR_IN_REV_REDUCED_EU_SERVICE",
            "FR_IN_REV_REDUCED_SLIGHT_EU",
            "FR_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "FR_IN_REV_REDUCED_SUPER_EU",
            "FR_IN_REV_REDUCED_SUPER_EU_SERVICE",
            "FR_IN_REV_STANDARD_EU",
            "FR_IN_REV_STANDARD_EU_SERVICE",
            "FR_IN_STANDARD",
            "FR_IN_TAX_FREE_THIRD",
            "FR_IN_ZERO",
            "GB_ADD_REDUCED",
            "GB_ADD_STANDARD",
            "GB_ADD_TAX_FREE_THIRD",
            "GB_ADD_ZERO",
            "GB_IN_REDUCED",
            "GB_IN_STANDARD",
            "GB_IN_TAX_FREE_THIRD",
            "GB_IN_ZERO",
            "GR_ADD_REDUCED",
            "GR_ADD_REDUCED_SLIGHT",
            "GR_ADD_STANDARD",
            "GR_ADD_TAX_FREE_EU",
            "GR_ADD_TAX_FREE_EU_SERVICES",
            "GR_ADD_TAX_FREE_THIRD",
            "GR_ADD_ZERO",
            "GR_IN_REDUCED",
            "GR_IN_REDUCED_SLIGHT",
            "GR_IN_REV_REDUCED_EU",
            "GR_IN_REV_REDUCED_EU_SERVICE",
            "GR_IN_REV_REDUCED_SLIGHT_EU",
            "GR_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "GR_IN_REV_STANDARD_EU",
            "GR_IN_REV_STANDARD_EU_SERVICE",
            "GR_IN_STANDARD",
            "GR_IN_TAX_FREE_THIRD",
            "GR_IN_ZERO",
            "HR_ADD_REDUCED",
            "HR_ADD_REDUCED_SLIGHT",
            "HR_ADD_STANDARD",
            "HR_ADD_TAX_FREE_EU",
            "HR_ADD_TAX_FREE_EU_SERVICES",
            "HR_ADD_TAX_FREE_THIRD",
            "HR_ADD_ZERO",
            "HR_IN_REDUCED",
            "HR_IN_REDUCED_SLIGHT",
            "HR_IN_REV_REDUCED_EU",
            "HR_IN_REV_REDUCED_EU_SERVICE",
            "HR_IN_REV_REDUCED_SLIGHT_EU",
            "HR_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "HR_IN_REV_STANDARD_EU",
            "HR_IN_REV_STANDARD_EU_SERVICE",
            "HR_IN_STANDARD",
            "HR_IN_TAX_FREE_THIRD",
            "HR_IN_ZERO",
            "HU_ADD_REDUCED",
            "HU_ADD_REDUCED_SLIGHT",
            "HU_ADD_STANDARD",
            "HU_ADD_TAX_FREE_EU",
            "HU_ADD_TAX_FREE_EU_SERVICES",
            "HU_ADD_TAX_FREE_THIRD",
            "HU_ADD_ZERO",
            "HU_IN_REDUCED",
            "HU_IN_REDUCED_SLIGHT",
            "HU_IN_REV_REDUCED_EU",
            "HU_IN_REV_REDUCED_EU_SERVICE",
            "HU_IN_REV_REDUCED_SLIGHT_EU",
            "HU_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "HU_IN_REV_STANDARD_EU",
            "HU_IN_REV_STANDARD_EU_SERVICE",
            "HU_IN_STANDARD",
            "HU_IN_TAX_FREE_THIRD",
            "HU_IN_ZERO",
            "IE_ADD_REDUCED",
            "IE_ADD_REDUCED_SLIGHT",
            "IE_ADD_REDUCED_SUPER",
            "IE_ADD_STANDARD",
            "IE_ADD_TAX_FREE_EU",
            "IE_ADD_TAX_FREE_EU_SERVICES",
            "IE_ADD_TAX_FREE_THIRD",
            "IE_ADD_ZERO",
            "IE_IN_REDUCED",
            "IE_IN_REDUCED_SLIGHT",
            "IE_IN_REDUCED_SUPER",
            "IE_IN_REV_REDUCED_EU",
            "IE_IN_REV_REDUCED_EU_SERVICE",
            "IE_IN_REV_REDUCED_SLIGHT_EU",
            "IE_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "IE_IN_REV_REDUCED_SUPER_EU",
            "IE_IN_REV_REDUCED_SUPER_EU_SERVICE",
            "IE_IN_REV_STANDARD_EU",
            "IE_IN_REV_STANDARD_EU_SERVICE",
            "IE_IN_STANDARD",
            "IE_IN_TAX_FREE_THIRD",
            "IE_IN_ZERO",
            "IL_ADD_REDUCED",
            "IL_ADD_STANDARD",
            "IL_ADD_TAX_FREE_THIRD",
            "IL_ADD_ZERO",
            "IL_IN_REDUCED",
            "IL_IN_STANDARD",
            "IL_IN_TAX_FREE_THIRD",
            "IL_IN_ZERO",
            "IN_ADD_REDUCED",
            "IN_ADD_REDUCED_SUPER",
            "IN_ADD_STANDARD",
            "IN_ADD_TAX_FREE_THIRD",
            "IN_ADD_ZERO",
            "IN_IN_REDUCED",
            "IN_IN_REDUCED_SUPER",
            "IN_IN_STANDARD",
            "IN_IN_TAX_FREE_THIRD",
            "IN_IN_ZERO",
            "IS_ADD_REDUCED",
            "IS_ADD_STANDARD",
            "IS_ADD_TAX_FREE_THIRD",
            "IS_ADD_ZERO",
            "IS_IN_REDUCED",
            "IS_IN_STANDARD",
            "IS_IN_TAX_FREE_THIRD",
            "IS_IN_ZERO",
            "IT_ADD_REDUCED",
            "IT_ADD_REDUCED_SLIGHT",
            "IT_ADD_REDUCED_SUPER",
            "IT_ADD_STANDARD",
            "IT_ADD_TAX_FREE_EU",
            "IT_ADD_TAX_FREE_EU_SERVICES",
            "IT_ADD_TAX_FREE_LETTER_OF_INTENT",
            "IT_ADD_TAX_FREE_THIRD",
            "IT_ADD_TAX_FREE_THIRD_SERVICES",
            "IT_ADD_ZERO",
            "IT_IN_REDUCED",
            "IT_IN_REDUCED_SLIGHT",
            "IT_IN_REDUCED_SUPER",
            "IT_IN_REV_REDUCED_EU",
            "IT_IN_REV_REDUCED_EU_SERVICE",
            "IT_IN_REV_REDUCED_SLIGHT_EU",
            "IT_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "IT_IN_REV_REDUCED_SUPER_EU",
            "IT_IN_REV_REDUCED_SUPER_EU_SERVICE",
            "IT_IN_REV_STANDARD_EU",
            "IT_IN_REV_STANDARD_EU_SERVICE",
            "IT_IN_STANDARD",
            "IT_IN_TAX_FREE_LETTER_OF_INTENT",
            "IT_IN_TAX_FREE_THIRD",
            "IT_IN_ZERO",
            "JP_ADD_STANDARD",
            "JP_ADD_TAX_FREE_THIRD",
            "JP_ADD_ZERO",
            "JP_IN_STANDARD",
            "JP_IN_TAX_FREE_THIRD",
            "JP_IN_ZERO",
            "LI_ADD_REDUCED",
            "LI_ADD_REDUCED_2024",
            "LI_ADD_REDUCED_SUPER",
            "LI_ADD_REDUCED_SUPER_2024",
            "LI_ADD_STANDARD",
            "LI_ADD_STANDARD_2024",
            "LI_ADD_TAX_FREE_THIRD",
            "LI_ADD_ZERO",
            "LI_IN_REDUCED",
            "LI_IN_REDUCED_2024",
            "LI_IN_REDUCED_SUPER",
            "LI_IN_REDUCED_SUPER_2024",
            "LI_IN_STANDARD",
            "LI_IN_STANDARD_2024",
            "LI_IN_TAX_FREE_THIRD",
            "LI_IN_ZERO",
            "LK_ADD_STANDARD",
            "LK_ADD_TAX_FREE_THIRD",
            "LK_ADD_ZERO",
            "LK_IN_STANDARD",
            "LK_IN_TAX_FREE_THIRD",
            "LK_IN_ZERO",
            "LT_ADD_REDUCED",
            "LT_ADD_REDUCED_SLIGHT",
            "LT_ADD_STANDARD",
            "LT_ADD_TAX_FREE_EU",
            "LT_ADD_TAX_FREE_EU_SERVICES",
            "LT_ADD_TAX_FREE_THIRD",
            "LT_ADD_ZERO",
            "LT_IN_REDUCED",
            "LT_IN_REDUCED_SLIGHT",
            "LT_IN_REV_REDUCED_EU",
            "LT_IN_REV_REDUCED_EU_SERVICE",
            "LT_IN_REV_REDUCED_SLIGHT_EU",
            "LT_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "LT_IN_REV_STANDARD_EU",
            "LT_IN_REV_STANDARD_EU_SERVICE",
            "LT_IN_STANDARD",
            "LT_IN_TAX_FREE_THIRD",
            "LT_IN_ZERO",
            "LU_ADD_REDUCED",
            "LU_ADD_REDUCED_2023",
            "LU_ADD_REDUCED_SLIGHT",
            "LU_ADD_REDUCED_SLIGHT_2023",
            "LU_ADD_REDUCED_SUPER",
            "LU_ADD_STANDARD",
            "LU_ADD_STANDARD_2023",
            "LU_ADD_TAX_FREE_EU",
            "LU_ADD_TAX_FREE_EU_SERVICES",
            "LU_ADD_TAX_FREE_THIRD",
            "LU_ADD_ZERO",
            "LU_IN_REDUCED",
            "LU_IN_REDUCED_2023",
            "LU_IN_REDUCED_SLIGHT",
            "LU_IN_REDUCED_SLIGHT_2023",
            "LU_IN_REDUCED_SUPER",
            "LU_IN_REV_REDUCED_EU",
            "LU_IN_REV_REDUCED_EU_2023",
            "LU_IN_REV_REDUCED_EU_SERVICE",
            "LU_IN_REV_REDUCED_EU_SERVICE_2023",
            "LU_IN_REV_REDUCED_SLIGHT_EU",
            "LU_IN_REV_REDUCED_SLIGHT_EU_2023",
            "LU_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "LU_IN_REV_REDUCED_SLIGHT_EU_SERVICE_2023",
            "LU_IN_REV_REDUCED_SUPER_EU",
            "LU_IN_REV_REDUCED_SUPER_EU_SERVICE",
            "LU_IN_REV_STANDARD_EU",
            "LU_IN_REV_STANDARD_EU_2023",
            "LU_IN_REV_STANDARD_EU_SERVICE",
            "LU_IN_REV_STANDARD_EU_SERVICE_2023",
            "LU_IN_STANDARD",
            "LU_IN_STANDARD_2023",
            "LU_IN_TAX_FREE_THIRD",
            "LU_IN_ZERO",
            "LV_ADD_REDUCED",
            "LV_ADD_REDUCED_SLIGHT",
            "LV_ADD_STANDARD",
            "LV_ADD_TAX_FREE_EU",
            "LV_ADD_TAX_FREE_EU_SERVICES",
            "LV_ADD_TAX_FREE_THIRD",
            "LV_ADD_ZERO",
            "LV_IN_REDUCED",
            "LV_IN_REDUCED_SLIGHT",
            "LV_IN_REV_REDUCED_EU",
            "LV_IN_REV_REDUCED_EU_SERVICE",
            "LV_IN_REV_REDUCED_SLIGHT_EU",
            "LV_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "LV_IN_REV_STANDARD_EU",
            "LV_IN_REV_STANDARD_EU_SERVICE",
            "LV_IN_STANDARD",
            "LV_IN_TAX_FREE_THIRD",
            "LV_IN_ZERO",
            "MA_ADD_STANDARD",
            "MA_ADD_TAX_FREE_THIRD",
            "MA_ADD_ZERO",
            "MA_IN_STANDARD",
            "MA_IN_TAX_FREE_THIRD",
            "MA_IN_ZERO",
            "ME_ADD_REDUCED",
            "ME_ADD_STANDARD",
            "ME_ADD_TAX_FREE_THIRD",
            "ME_ADD_ZERO",
            "ME_IN_REDUCED",
            "ME_IN_STANDARD",
            "ME_IN_TAX_FREE_THIRD",
            "ME_IN_ZERO",
            "MK_ADD_REDUCED",
            "MK_ADD_STANDARD",
            "MK_ADD_TAX_FREE_THIRD",
            "MK_ADD_ZERO",
            "MK_IN_REDUCED",
            "MK_IN_STANDARD",
            "MK_IN_TAX_FREE_THIRD",
            "MK_IN_ZERO",
            "MT_ADD_REDUCED",
            "MT_ADD_REDUCED_2024",
            "MT_ADD_REDUCED_SLIGHT",
            "MT_ADD_REDUCED_SLIGHT_2024",
            "MT_ADD_REDUCED_SUPER",
            "MT_ADD_STANDARD",
            "MT_ADD_TAX_FREE_EU",
            "MT_ADD_TAX_FREE_EU_SERVICES",
            "MT_ADD_TAX_FREE_THIRD",
            "MT_ADD_ZERO",
            "MT_IN_REDUCED",
            "MT_IN_REDUCED_2024",
            "MT_IN_REDUCED_SLIGHT",
            "MT_IN_REDUCED_SLIGHT_2024",
            "MT_IN_REDUCED_SUPER",
            "MT_IN_REV_REDUCED_EU",
            "MT_IN_REV_REDUCED_EU_2024",
            "MT_IN_REV_REDUCED_EU_SERVICE",
            "MT_IN_REV_REDUCED_EU_SERVICE_2024",
            "MT_IN_REV_REDUCED_SLIGHT_EU",
            "MT_IN_REV_REDUCED_SLIGHT_EU_2024",
            "MT_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "MT_IN_REV_REDUCED_SLIGHT_EU_SERVICE_2024",
            "MT_IN_REV_REDUCED_SUPER_EU",
            "MT_IN_REV_REDUCED_SUPER_EU_SERVICE",
            "MT_IN_REV_STANDARD_EU",
            "MT_IN_REV_STANDARD_EU_SERVICE",
            "MT_IN_STANDARD",
            "MT_IN_TAX_FREE_THIRD",
            "MT_IN_ZERO",
            "MX_ADD_STANDARD",
            "MX_ADD_TAX_FREE_THIRD",
            "MX_ADD_ZERO",
            "MX_IN_STANDARD",
            "MX_IN_TAX_FREE_THIRD",
            "MX_IN_ZERO",
            "NL_ADD_REDUCED",
            "NL_ADD_STANDARD",
            "NL_ADD_TAX_FREE_EU",
            "NL_ADD_TAX_FREE_EU_SERVICES",
            "NL_ADD_TAX_FREE_THIRD",
            "NL_ADD_ZERO",
            "NL_IN_REDUCED",
            "NL_IN_REV_REDUCED_EU",
            "NL_IN_REV_REDUCED_EU_SERVICE",
            "NL_IN_REV_STANDARD_EU",
            "NL_IN_REV_STANDARD_EU_SERVICE",
            "NL_IN_STANDARD",
            "NL_IN_TAX_FREE_THIRD",
            "NL_IN_ZERO",
            "NO_ADD_REDUCED",
            "NO_ADD_REDUCED_SUPER",
            "NO_ADD_STANDARD",
            "NO_ADD_TAX_FREE_THIRD",
            "NO_ADD_ZERO",
            "NO_IN_REDUCED",
            "NO_IN_REDUCED_SUPER",
            "NO_IN_STANDARD",
            "NO_IN_TAX_FREE_THIRD",
            "NO_IN_ZERO",
            "NZ_ADD_STANDARD",
            "NZ_ADD_TAX_FREE_THIRD",
            "NZ_ADD_ZERO",
            "NZ_IN_STANDARD",
            "NZ_IN_TAX_FREE_THIRD",
            "NZ_IN_ZERO",
            "PL_ADD_REDUCED",
            "PL_ADD_REDUCED_SUPER",
            "PL_ADD_STANDARD",
            "PL_ADD_TAX_FREE_EU",
            "PL_ADD_TAX_FREE_EU_SERVICES",
            "PL_ADD_TAX_FREE_THIRD",
            "PL_ADD_ZERO",
            "PL_IN_REDUCED",
            "PL_IN_REDUCED_SUPER",
            "PL_IN_REV_REDUCED_EU",
            "PL_IN_REV_REDUCED_EU_SERVICE",
            "PL_IN_REV_REDUCED_SUPER_EU",
            "PL_IN_REV_REDUCED_SUPER_EU_SERVICE",
            "PL_IN_REV_STANDARD_EU",
            "PL_IN_REV_STANDARD_EU_SERVICE",
            "PL_IN_STANDARD",
            "PL_IN_TAX_FREE_THIRD",
            "PL_IN_ZERO",
            "PT_ADD_REDUCED",
            "PT_ADD_REDUCED_SLIGHT",
            "PT_ADD_STANDARD",
            "PT_ADD_TAX_FREE_EU",
            "PT_ADD_TAX_FREE_EU_SERVICES",
            "PT_ADD_TAX_FREE_THIRD",
            "PT_ADD_ZERO",
            "PT_IN_REDUCED",
            "PT_IN_REDUCED_SLIGHT",
            "PT_IN_REV_REDUCED_EU",
            "PT_IN_REV_REDUCED_EU_SERVICE",
            "PT_IN_REV_REDUCED_SLIGHT_EU",
            "PT_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "PT_IN_REV_STANDARD_EU",
            "PT_IN_REV_STANDARD_EU_SERVICE",
            "PT_IN_STANDARD",
            "PT_IN_TAX_FREE_THIRD",
            "PT_IN_ZERO",
            "RO_ADD_REDUCED",
            "RO_ADD_REDUCED_SLIGHT",
            "RO_ADD_STANDARD",
            "RO_ADD_TAX_FREE_EU",
            "RO_ADD_TAX_FREE_EU_SERVICES",
            "RO_ADD_TAX_FREE_THIRD",
            "RO_ADD_ZERO",
            "RO_IN_REDUCED",
            "RO_IN_REDUCED_SLIGHT",
            "RO_IN_REV_REDUCED_EU",
            "RO_IN_REV_REDUCED_EU_SERVICE",
            "RO_IN_REV_REDUCED_SLIGHT_EU",
            "RO_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "RO_IN_REV_STANDARD_EU",
            "RO_IN_REV_STANDARD_EU_SERVICE",
            "RO_IN_STANDARD",
            "RO_IN_TAX_FREE_THIRD",
            "RO_IN_ZERO",
            "RS_ADD_REDUCED",
            "RS_ADD_STANDARD",
            "RS_ADD_TAX_FREE_THIRD",
            "RS_ADD_ZERO",
            "RS_IN_REDUCED",
            "RS_IN_STANDARD",
            "RS_IN_TAX_FREE_THIRD",
            "RS_IN_ZERO",
            "RU_ADD_REDUCED",
            "RU_ADD_STANDARD",
            "RU_ADD_TAX_FREE_THIRD",
            "RU_ADD_ZERO",
            "RU_IN_REDUCED",
            "RU_IN_STANDARD",
            "RU_IN_TAX_FREE_THIRD",
            "RU_IN_ZERO",
            "SE_ADD_REDUCED",
            "SE_ADD_REDUCED_SLIGHT",
            "SE_ADD_STANDARD",
            "SE_ADD_TAX_FREE_EU",
            "SE_ADD_TAX_FREE_EU_SERVICES",
            "SE_ADD_TAX_FREE_THIRD",
            "SE_ADD_ZERO",
            "SE_IN_REDUCED",
            "SE_IN_REDUCED_SLIGHT",
            "SE_IN_REV_REDUCED_EU",
            "SE_IN_REV_REDUCED_EU_SERVICE",
            "SE_IN_REV_REDUCED_SLIGHT_EU",
            "SE_IN_REV_REDUCED_SLIGHT_EU_SERVICE",
            "SE_IN_REV_STANDARD_EU",
            "SE_IN_REV_STANDARD_EU_SERVICE",
            "SE_IN_STANDARD",
            "SE_IN_TAX_FREE_THIRD",
            "SE_IN_ZERO",
            "SG_ADD_STANDARD",
            "SG_ADD_TAX_FREE_THIRD",
            "SG_ADD_ZERO",
            "SG_IN_STANDARD",
            "SG_IN_TAX_FREE_THIRD",
            "SG_IN_ZERO",
            "SI_ADD_REDUCED",
            "SI_ADD_STANDARD",
            "SI_ADD_TAX_FREE_EU",
            "SI_ADD_TAX_FREE_EU_SERVICES",
            "SI_ADD_TAX_FREE_THIRD",
            "SI_ADD_ZERO",
            "SI_IN_REDUCED",
            "SI_IN_REV_REDUCED_EU",
            "SI_IN_REV_REDUCED_EU_SERVICE",
            "SI_IN_REV_STANDARD_EU",
            "SI_IN_REV_STANDARD_EU_SERVICE",
            "SI_IN_STANDARD",
            "SI_IN_TAX_FREE_THIRD",
            "SI_IN_ZERO",
            "SK_ADD_REDUCED",
            "SK_ADD_REDUCED_2025",
            "SK_ADD_STANDARD",
            "SK_ADD_STANDARD_2025",
            "SK_ADD_TAX_FREE_EU",
            "SK_ADD_TAX_FREE_EU_SERVICES",
            "SK_ADD_TAX_FREE_THIRD",
            "SK_ADD_ZERO",
            "SK_IN_REDUCED",
            "SK_IN_REDUCED_2025",
            "SK_IN_REV_REDUCED_EU",
            "SK_IN_REV_REDUCED_EU_2025",
            "SK_IN_REV_REDUCED_EU_SERVICE",
            "SK_IN_REV_REDUCED_EU_SERVICE_2025",
            "SK_IN_REV_STANDARD_EU",
            "SK_IN_REV_STANDARD_EU_2025",
            "SK_IN_REV_STANDARD_EU_SERVICE",
            "SK_IN_REV_STANDARD_EU_SERVICE_2025",
            "SK_IN_STANDARD",
            "SK_IN_STANDARD_2025",
            "SK_IN_TAX_FREE_THIRD",
            "SK_IN_ZERO",
            "TH_ADD_STANDARD",
            "TH_ADD_TAX_FREE_THIRD",
            "TH_ADD_ZERO",
            "TH_IN_STANDARD",
            "TH_IN_TAX_FREE_THIRD",
            "TH_IN_ZERO",
            "TR_ADD_REDUCED",
            "TR_ADD_REDUCED_SUPER",
            "TR_ADD_STANDARD",
            "TR_ADD_TAX_FREE_THIRD",
            "TR_ADD_ZERO",
            "TR_IN_REDUCED",
            "TR_IN_REDUCED_SUPER",
            "TR_IN_STANDARD",
            "TR_IN_TAX_FREE_THIRD",
            "TR_IN_ZERO",
            "TW_ADD_STANDARD",
            "TW_ADD_TAX_FREE_THIRD",
            "TW_ADD_ZERO",
            "TW_IN_STANDARD",
            "TW_IN_TAX_FREE_THIRD",
            "TW_IN_ZERO",
            "UA_ADD_REDUCED",
            "UA_ADD_STANDARD",
            "UA_ADD_TAX_FREE_THIRD",
            "UA_ADD_ZERO",
            "UA_IN_REDUCED",
            "UA_IN_STANDARD",
            "UA_IN_TAX_FREE_THIRD",
            "UA_IN_ZERO",
            "VE_ADD_STANDARD",
            "VE_ADD_TAX_FREE_THIRD",
            "VE_ADD_ZERO",
            "VE_IN_STANDARD",
            "VE_IN_TAX_FREE_THIRD",
            "VE_IN_ZERO",
            "XI_ADD_REDUCED",
            "XI_ADD_STANDARD",
            "XI_ADD_TAX_FREE_EU",
            "XI_ADD_TAX_FREE_EU_SERVICES",
            "XI_ADD_TAX_FREE_THIRD",
            "XI_ADD_ZERO",
            "XI_IN_REDUCED",
            "XI_IN_REV_REDUCED_EU",
            "XI_IN_REV_REDUCED_EU_SERVICE",
            "XI_IN_REV_STANDARD_EU",
            "XI_IN_REV_STANDARD_EU_SERVICE",
            "XI_IN_STANDARD",
            "XI_IN_TAX_FREE_THIRD",
            "XI_IN_ZERO",
            "XK_ADD_REDUCED",
            "XK_ADD_STANDARD",
            "XK_ADD_TAX_FREE_THIRD",
            "XK_ADD_ZERO",
            "XK_IN_REDUCED",
            "XK_IN_STANDARD",
            "XK_IN_TAX_FREE_THIRD",
            "XK_IN_ZERO",
            "ZA_ADD_REDUCED",
            "ZA_ADD_REDUCED_SUPER",
            "ZA_ADD_STANDARD",
            "ZA_ADD_TAX_FREE_THIRD",
            "ZA_ADD_ZERO",
            "ZA_IN_REDUCED",
            "ZA_IN_REDUCED_SUPER",
            "ZA_IN_STANDARD",
            "ZA_IN_TAX_FREE_THIRD",
            "ZA_IN_ZERO"
          ],
          "type": "string"
        },
        "taxType": {
          "enum": [
            "IMPORT_SALES_TAX",
            "INPUT_VAT",
            "INPUT_VAT_REVERSED",
            "VALUE_ADDED_TAX"
          ],
          "type": "string"
        },
        "taxValue": {
          "format": "number",
          "type": "string"
        }
      },
      "required": [
        "name",
        "taxType",
        "taxValue"
      ],
      "type": "object"
    },
    "taxDeterminationRule": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "accountingCodeId": {
          "type": "string",
          "x-relatedEntityName": "articleAccountingCode"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customerDebtorAccountingCodeId": {
          "type": "string",
          "x-relatedEntityName": "personalAccountingCode"
        },
        "dispatchCountryCode": {
          "type": "string"
        },
        "endDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "partyType": {
          "enum": [
            "ORGANIZATION",
            "PERSON"
          ],
          "type": "string"
        },
        "recipientCountryCode": {
          "type": "string"
        },
        "sales": {
          "type": "boolean"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        },
        "taxRateType": {
          "enum": [
            "REDUCED",
            "SLIGHTLY_REDUCED",
            "STANDARD",
            "SUPER_REDUCED",
            "ZERO"
          ],
          "type": "string"
        },
        "validVatId": {
          "type": "boolean"
        }
      },
      "required": [
        "taxId"
      ],
      "type": "object"
    },
    "taxGroup": {
      "properties": {
        "finalGrossAmount": {
          "format": "number",
          "type": "string"
        },
        "finalGrossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "finalNetAmount": {
          "format": "number",
          "type": "string"
        },
        "finalNetAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "finalVatAmount": {
          "format": "number",
          "type": "string"
        },
        "finalVatAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "headReductionAdditions": {
          "items": {
            "$ref": "#/definitions/headReductionAddition"
          },
          "type": "array"
        },
        "sumGrossAmount": {
          "format": "number",
          "type": "string"
        },
        "sumGrossAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "sumNetAmount": {
          "format": "number",
          "type": "string"
        },
        "sumNetAmountInCompanyCurrency": {
          "format": "number",
          "type": "string"
        },
        "taxId": {
          "type": "string",
          "x-relatedEntityName": "tax"
        }
      },
      "type": "object"
    },
    "termOfPayment": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/termOfPaymentCondition"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "datevTermOfPaymentNumber": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "dueDateOption": {
          "enum": [
            "END_OF_MONTH",
            "FIX",
            "IMMEDIATE",
            "PERIOD"
          ],
          "type": "string"
        },
        "fixedDay": {
          "format": "int32",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "numberOfDays": {
          "format": "int32",
          "type": "integer"
        },
        "reference": {
          "type": "string"
        },
        "validFrom": {
          "format": "timestamp",
          "type": "integer"
        },
        "validTo": {
          "format": "timestamp",
          "type": "integer"
        }
      },
      "required": [
        "dueDateOption"
      ],
      "type": "object"
    },
    "termOfPaymentCondition": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "discountPercentage": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "numberOfDays": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "textModule": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "factoring": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "recordTypes": {
          "items": {
            "enum": [
              "ACCOUNTING",
              "BLANKET_PURCHASE_ORDER",
              "BLANKET_SALES_ORDER",
              "CONTRACT",
              "CREDIT_ADVICE",
              "CREDIT_ADVICE_CANCELLATION",
              "CREDIT_ADVICE_PRELIMINARY_INVOICE",
              "CREDIT_NOTE",
              "DROPSHIP_DELIVERY_NOTE",
              "INCOMING_GOODS",
              "INCOMING_GOODS_FROM_RETURN",
              "INVENTORY_TAKING",
              "LETTER",
              "PERFORMANCE_RECORD",
              "PICKING_LIST",
              "PRELIMINARY_INVOICE",
              "PRODUCTION_ORDER",
              "PROFORMA_INVOICE",
              "PURCHASE_ORDER",
              "PURCHASE_ORDER_REQUEST",
              "QUOTATION",
              "SALES_INVOICE_ADVANCE",
              "SALES_INVOICE_CANCELLATION",
              "SALES_INVOICE_FINAL",
              "SALES_INVOICE_PART",
              "SALES_INVOICE_PRE",
              "SALES_INVOICE_STANDARD",
              "SALES_ORDER",
              "SHIPMENT_DELIVERY_NOTE",
              "SHIPMENT_RETURN_DELIVERY_NOTE",
              "STANDARD_REPORT",
              "STANDARD_REPORT_CUSTOM",
              "STANDARD_REPORT_CUSTOM_CODE_JAVA",
              "STANDARD_REPORT_CUSTOM_HQL",
              "SUPPLIER_RETURN_DELIVERY_NOTE",
              "TEMPLATE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "salesChannels": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "standard": {
          "type": "boolean"
        },
        "textModuleType": {
          "enum": [
            "ASN",
            "COMMENT",
            "FREETEXT",
            "OPENING"
          ],
          "type": "string"
        },
        "withInheritance": {
          "type": "boolean"
        }
      },
      "required": [
        "recordTypes",
        "textModuleType"
      ],
      "type": "object"
    },
    "ticket": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "assignedPoolingGroupId": {
          "type": "string",
          "x-relatedEntityName": "ticketPoolingGroup"
        },
        "assignedUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "billable": {
          "type": "boolean"
        },
        "billableStatus": {
          "type": "boolean"
        },
        "ccEmailAddresses": {
          "type": "string"
        },
        "contactId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "contractId": {
          "type": "string",
          "x-relatedEntityName": "contract"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "disableEmailTemplates": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "entityReferences": {
          "items": {
            "$ref": "#/definitions/entityReference"
          },
          "type": "array"
        },
        "finishedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "followUpDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "invoicingStatus": {
          "enum": [
            "INVOICED",
            "NOT_INVOICED",
            "PARTLY_INVOICED"
          ],
          "type": "string"
        },
        "isTemplate": {
          "type": "boolean"
        },
        "language": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "legacyArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "legacyTimeAndMaterialTicket": {
          "type": "boolean"
        },
        "mail2TicketId": {
          "type": "string"
        },
        "mobilePhoneNumber": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "partyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "performanceRecordedStatus": {
          "enum": [
            "NOT_PERFORMANCE_RECORDED",
            "PERFORMANCE_RECORDED",
            "UNDEFINED"
          ],
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "publicPageExpirationDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "publicPageUuid": {
          "type": "string"
        },
        "resolvedYourIssue": {
          "type": "boolean"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "room": {
          "type": "string"
        },
        "salesOrderId": {
          "type": "string",
          "x-relatedEntityName": "salesOrder"
        },
        "solutionDueDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "subject": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ticketCategoryId": {
          "type": "string",
          "x-relatedEntityName": "ticketCategory"
        },
        "ticketChannelId": {
          "type": "string",
          "x-relatedEntityName": "ticketChannel"
        },
        "ticketNumber": {
          "type": "string"
        },
        "ticketPriorityId": {
          "type": "string",
          "x-relatedEntityName": "ticketPriority"
        },
        "ticketRating": {
          "enum": [
            "STARS_1",
            "STARS_2",
            "STARS_3",
            "STARS_4",
            "STARS_5"
          ],
          "type": "string"
        },
        "ticketRatingComment": {
          "type": "string"
        },
        "ticketRatingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "ticketServiceLevelAgreementId": {
          "type": "string",
          "x-relatedEntityName": "ticketServiceLevelAgreement"
        },
        "ticketStatusId": {
          "type": "string",
          "x-relatedEntityName": "ticketStatus"
        },
        "ticketTypeId": {
          "type": "string",
          "x-relatedEntityName": "ticketType"
        },
        "watchers": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        }
      },
      "required": [
        "ticketPriorityId",
        "ticketStatusId"
      ],
      "type": "object"
    },
    "ticketAssignmentRule": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "assignedPoolingGroupId": {
          "type": "string",
          "x-relatedEntityName": "ticketPoolingGroup"
        },
        "assigneeUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "commercialLanguage": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "distributionChannel": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "partyId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "responsibleUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "targetStatusId": {
          "type": "string",
          "x-relatedEntityName": "ticketStatus"
        },
        "ticketAssigneeType": {
          "enum": [
            "CUSTOMER_RESPONSIBLE_PERSON",
            "POOL",
            "TICKET_AGENT"
          ],
          "type": "string"
        },
        "ticketCategoryId": {
          "type": "string",
          "x-relatedEntityName": "ticketCategory"
        },
        "ticketChannelId": {
          "type": "string",
          "x-relatedEntityName": "ticketChannel"
        },
        "ticketPriorityId": {
          "type": "string",
          "x-relatedEntityName": "ticketPriority"
        },
        "ticketTypeId": {
          "type": "string",
          "x-relatedEntityName": "ticketType"
        }
      },
      "type": "object"
    },
    "ticketCategory": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "parentTicketCategoryId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "pseudoCategory": {
          "type": "boolean"
        },
        "published": {
          "type": "boolean"
        },
        "visibleInCustomerPortal": {
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ticketConfiguration": {
      "properties": {
        "allowedContactFeaturesForTickets": {
          "items": {
            "enum": [
              "COMPETITOR",
              "CUSTOMER",
              "LEAD",
              "NONE",
              "SUPPLIER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "categoryRequired": {
          "type": "boolean"
        },
        "createTimeRecordOnlyInprogress": {
          "type": "boolean"
        },
        "defaultTicketChannelId": {
          "type": "string",
          "x-relatedEntityName": "ticketChannel"
        },
        "reportProblemChannelId": {
          "type": "string"
        },
        "showCreator": {
          "type": "boolean"
        },
        "showTicketType": {
          "type": "boolean"
        },
        "ticketTypeRequired": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ticketEmailCommunicationSettings": {
      "properties": {
        "commentsPublicByDefault": {
          "type": "boolean"
        },
        "disableEmailTemplates": {
          "type": "boolean"
        },
        "solutionCommentMail": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ticketExtraInformation": {
      "properties": {
        "assignmentTime": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "progressTime": {
          "type": "string"
        },
        "solutionTime": {
          "type": "string"
        },
        "ticketHistory": {
          "items": {
            "$ref": "#/definitions/ticketProtocol"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ticketFaq": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "answer": {
          "type": "string"
        },
        "createdById": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customers": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "question": {
          "type": "string"
        },
        "ticketCategories": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "visibility": {
          "enum": [
            "INTERNAL",
            "PUBLIC"
          ],
          "type": "string"
        }
      },
      "required": [
        "answer",
        "question"
      ],
      "type": "object"
    },
    "ticketGeneralSettings": {
      "properties": {
        "allowedContactFunctionsForTicketCustomer": {
          "items": {
            "enum": [
              "COMPETITOR",
              "CUSTOMER",
              "LEAD",
              "NONE",
              "SUPPLIER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "applyTechnicalContact": {
          "type": "boolean"
        },
        "categoryRequired": {
          "type": "boolean"
        },
        "createNewTicketOnCommentForClosedTicket": {
          "type": "boolean"
        },
        "customerRequired": {
          "type": "boolean"
        },
        "defaultChannelId": {
          "type": "string",
          "x-relatedEntityName": "ticketChannel"
        },
        "hideFaqEditor": {
          "type": "boolean"
        },
        "notificationForHelpdeskTickets": {
          "type": "boolean"
        },
        "reportProblemChannelId": {
          "type": "string",
          "x-relatedEntityName": "ticketChannel"
        },
        "showOnlyActiveContractsInReferences": {
          "type": "boolean"
        },
        "subjectOrDescriptionEditable": {
          "type": "boolean"
        },
        "ticketAssignmentPreference": {
          "enum": [
            "COMPANY",
            "NO_ASSOCIATION",
            "PERSON"
          ],
          "type": "string"
        },
        "watcherIsAllowedToReadAndEditTickets": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ticketGroupByStatusReport": {
      "properties": {
        "defaultOrder": {
          "format": "int32",
          "type": "integer"
        },
        "internalTicketStatus": {
          "enum": [
            "CLOSED",
            "FIXED",
            "IN_PROGRESS",
            "POOL",
            "UNASSIGNED",
            "WAITING"
          ],
          "type": "string"
        },
        "ticketCount": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ticketPoolingGroup": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "ticketCategories": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "ticketPoolingGroupMembers": {
          "items": {
            "$ref": "#/definitions/ticketPoolingGroupMember"
          },
          "type": "array"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ticketPoolingGroupMember": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "ticketPoolingGroupId": {
          "type": "string",
          "x-relatedEntityName": "ticketPoolingGroup"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "required": [
        "ticketPoolingGroupId",
        "userId"
      ],
      "type": "object"
    },
    "ticketPriority": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ticketProtocol": {
      "properties": {
        "protocolActivity": {
          "type": "string"
        },
        "protocolDate": {
          "type": "string"
        },
        "userActivities": {
          "items": {
            "$ref": "#/definitions/ticketProtocolActivity"
          },
          "type": "array"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "ticketProtocolActivity": {
      "properties": {
        "nextValue": {
          "type": "string"
        },
        "previousValue": {
          "type": "string"
        },
        "whatWasChanged": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ticketPublicPageSettings": {
      "properties": {
        "autoCreateTicketPublicLink": {
          "type": "boolean"
        },
        "publicLinkExpirationInDays": {
          "format": "int32",
          "type": "integer"
        },
        "showActualHours": {
          "enum": [
            "DISPLAY_ALL",
            "DISPLAY_ALL_WITH_TIME_TABLE",
            "DISPLAY_NONE",
            "DISPLAY_ONLY_BILLABLE",
            "DISPLAY_ONLY_BILLABLE_WITH_TIME_TABLE"
          ],
          "type": "string"
        },
        "showTicketAssignee": {
          "type": "boolean"
        },
        "showTicketRating": {
          "type": "boolean"
        },
        "ticketRatingEditable": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ticketServiceLevelAgreement": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "categories": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customers": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "degreeOfPerformance": {
          "format": "int32",
          "type": "integer"
        },
        "includeNoTicketType": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "ratingId": {
          "type": "string",
          "x-relatedEntityName": "partyRating"
        },
        "targets": {
          "items": {
            "$ref": "#/definitions/ticketServiceLevelAgreementTarget"
          },
          "type": "array"
        },
        "types": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ticketServiceLevelAgreementTarget": {
      "properties": {
        "assignmentTimeQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "assignmentTimeUnit": {
          "enum": [
            "DAYS",
            "HOURS",
            "MINUTES",
            "NONE"
          ],
          "type": "string"
        },
        "businessHolidaysId": {
          "format": "int32",
          "type": "integer"
        },
        "businessHoursId": {
          "format": "int32",
          "type": "integer"
        },
        "firstReplyTimeQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "firstReplyTimeUnit": {
          "enum": [
            "DAYS",
            "HOURS",
            "MINUTES",
            "NONE"
          ],
          "type": "string"
        },
        "notification": {
          "type": "boolean"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "sendEscalationEmail": {
          "type": "boolean"
        },
        "solutionTimeQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "solutionTimeUnit": {
          "enum": [
            "DAYS",
            "HOURS",
            "MINUTES",
            "NONE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ticketSettings": {
      "properties": {
        "emailCommunication": {
          "$ref": "#/definitions/ticketEmailCommunicationSettings"
        },
        "general": {
          "$ref": "#/definitions/ticketGeneralSettings"
        },
        "publicPage": {
          "$ref": "#/definitions/ticketPublicPageSettings"
        },
        "timeRecordingAndFactoring": {
          "$ref": "#/definitions/ticketTimeRecordingAndFactoringSettings"
        }
      },
      "type": "object"
    },
    "ticketStatus": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "autoChangeDays": {
          "format": "int32",
          "type": "integer"
        },
        "autoChangeTicketStatusId": {
          "type": "string",
          "x-relatedEntityName": "ticketStatus"
        },
        "color": {
          "enum": [
            "BLUE",
            "BROWN",
            "DARK_BLUE",
            "DARK_GREEN",
            "DARK_RED",
            "GREEN",
            "LIGHT_BLUE",
            "ORANGE",
            "PINK",
            "PURPLE",
            "RED",
            "VIOLET",
            "YELLOW",
            "YELLOW_GREEN"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "defaultForInternal": {
          "type": "boolean"
        },
        "internalTicketStatus": {
          "enum": [
            "CLOSED",
            "FIXED",
            "IN_PROGRESS",
            "POOL",
            "UNASSIGNED",
            "WAITING"
          ],
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "targetStatusId": {
          "type": "string",
          "x-relatedEntityName": "ticketStatus"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ticketTimeRecordingAndFactoringSettings": {
      "properties": {
        "addTicketToItemGroup": {
          "type": "boolean"
        },
        "closeTasksIfTicketSolved": {
          "type": "boolean"
        },
        "commissionOfQuotationsCreatedFromTicket": {
          "type": "string"
        },
        "createDefaultTaskWithTicket": {
          "type": "boolean"
        },
        "createTimeRecordOnlyInprogress": {
          "type": "boolean"
        },
        "keepTaskUpToDateWithTicket": {
          "type": "boolean"
        },
        "legacyInvoiceable": {
          "type": "boolean"
        },
        "legacyTimeAndMaterial": {
          "type": "boolean"
        },
        "startTimeTrackingWhenTicketIsOpened": {
          "type": "boolean"
        },
        "useArticleDescriptionForInvoice": {
          "type": "boolean"
        },
        "useArticleTitleForInvoice": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ticketType": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "timeRecord": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "billable": {
          "type": "boolean"
        },
        "billableDurationSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "billableInvoiceStatus": {
          "enum": [
            "INVOICED",
            "NOT_INVOICED",
            "PARTLY_INVOICED"
          ],
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "customerId": {
          "type": "string",
          "x-relatedEntityName": "party"
        },
        "description": {
          "type": "string"
        },
        "durationSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "externalConnectionSourceId": {
          "type": "string"
        },
        "hourlyRate": {
          "format": "number",
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "performanceRecordedStatus": {
          "enum": [
            "NOT_PERFORMANCE_RECORDED",
            "PERFORMANCE_RECORDED",
            "UNDEFINED"
          ],
          "type": "string"
        },
        "placeOfServiceId": {
          "type": "string",
          "x-relatedEntityName": "placeOfService"
        },
        "printOnPerformanceRecord": {
          "type": "boolean"
        },
        "projectId": {
          "type": "string",
          "x-relatedEntityName": "project"
        },
        "projectTaskId": {
          "type": "string",
          "x-relatedEntityName": "projectTask"
        },
        "salesInvoiceId": {
          "type": "string",
          "x-relatedEntityName": "salesInvoice"
        },
        "salesOrderId": {
          "type": "string",
          "x-relatedEntityName": "salesOrder"
        },
        "salesOrderTicketId": {
          "type": "string",
          "x-relatedEntityName": "ticket"
        },
        "startDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "taskId": {
          "type": "string",
          "x-relatedEntityName": "task"
        },
        "ticketId": {
          "type": "string",
          "x-relatedEntityName": "ticket"
        },
        "timeRecordSource": {
          "enum": [
            "TEAMVIEWER"
          ],
          "type": "string"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "userUsername": {
          "type": "string"
        }
      },
      "required": [
        "durationSeconds",
        "startDate"
      ],
      "type": "object"
    },
    "timeRecordConfiguration": {
      "properties": {
        "bookingOnCustomerAllowed": {
          "type": "boolean"
        },
        "bookingOnLegacyTaskAllowed": {
          "type": "boolean"
        },
        "bookingWithoutTaskAllowed": {
          "type": "boolean"
        },
        "markAsBillCompletelyOnCreate": {
          "type": "boolean"
        },
        "overbookingOnProjectAllowed": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "timeRecordGeneralSettings": {
      "properties": {
        "allowBookingOnLegacyTasks": {
          "type": "boolean"
        },
        "defaultPlaceOfServiceId": {
          "type": "string",
          "x-relatedEntityName": "placeOfService"
        },
        "markAsBillCompletelyOnCreate": {
          "type": "boolean"
        },
        "taskStatusForBookingToCustomer": {
          "enum": [
            "COMPLETED",
            "DEFERRED",
            "IN_PROGRESS",
            "NOT_STARTED",
            "WAITING_ON_OTHERS"
          ],
          "type": "string"
        },
        "taskStatusInProcessOnTimeBooking": {
          "type": "boolean"
        },
        "timeRecordIndividualPrintOption": {
          "enum": [
            "ALWAYS_LIKE_BILLABLE",
            "FOR_ALL_TIME_RECORDS",
            "FOR_NON_BILLABLE_TIME_RECORDS"
          ],
          "type": "string"
        },
        "timeRecordRoundingMinutes": {
          "format": "number",
          "type": "string"
        },
        "userSettings": {
          "items": {
            "$ref": "#/definitions/timeRecordUserSettings"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "timeRecordSettings": {
      "properties": {
        "general": {
          "$ref": "#/definitions/timeRecordGeneralSettings"
        },
        "resourceUtilization": {
          "$ref": "#/definitions/resourceUtilizationSettings"
        }
      },
      "type": "object"
    },
    "timeRecordUserSettings": {
      "properties": {
        "defaultSalesArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "hourlyCost": {
          "format": "number",
          "type": "string"
        },
        "hourlyRate": {
          "format": "number",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "translation": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "values": {
          "items": {
            "$ref": "#/definitions/translationValue"
          },
          "type": "array"
        }
      },
      "required": [
        "key"
      ],
      "type": "object"
    },
    "translationValue": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "locale": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "type": "object"
    },
    "transportPick": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "batchNumber": {
          "type": "string"
        },
        "bookedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "confirmedByUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "confirmedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "internalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "orderItemId": {
          "type": "string"
        },
        "packagingUnitBaseArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "productionOrderItemId": {
          "type": "string"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "salesOrderItemId": {
          "type": "string"
        },
        "serialNumbers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "shipmentItemId": {
          "type": "string"
        },
        "sourceInternalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "sourceStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "storagePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        }
      },
      "required": [
        "quantity",
        "serialNumbers",
        "storagePlaceId"
      ],
      "type": "object"
    },
    "transportationOrder": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "assignedUserId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "destinationStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "internalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "loadingEquipmentArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "loadingEquipmentIdentifierId": {
          "type": "string",
          "x-relatedEntityName": "loadingEquipmentIdentifier"
        },
        "picks": {
          "items": {
            "$ref": "#/definitions/transportPick"
          },
          "type": "array"
        },
        "productionOrderId": {
          "type": "string",
          "x-relatedEntityName": "productionOrder"
        },
        "shipmentId": {
          "type": "string",
          "x-relatedEntityName": "shipment"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "COMPLETED",
            "IN_INTERIM",
            "IN_TRANSIT",
            "NEW"
          ],
          "type": "string"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/transportationOrderStatusHistory"
          },
          "type": "array"
        },
        "transportationOrderNumber": {
          "type": "string"
        },
        "transportationOrderType": {
          "enum": [
            "PICKING",
            "STOCK_TRANSFER"
          ],
          "type": "string"
        }
      },
      "required": [
        "destinationStoragePlaceId",
        "status",
        "transportationOrderType"
      ],
      "type": "object"
    },
    "transportationOrderStatusHistory": {
      "properties": {
        "status": {
          "enum": [
            "CANCELLED",
            "COMPLETED",
            "IN_INTERIM",
            "IN_TRANSIT",
            "NEW"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        }
      },
      "type": "object"
    },
    "unit": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "timeUnitAmount": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "unitSettings": {
      "properties": {
        "defaultUnitHourId": {
          "type": "string",
          "x-relatedEntityName": "unit"
        }
      },
      "type": "object"
    },
    "user": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "birthDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "email": {
          "type": "string"
        },
        "faxNumber": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "imageId": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "licenses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mobilePhoneNumber": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "DEPARTURE",
            "NOT_ACTIVE"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "userRoles": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "email"
      ],
      "type": "object"
    },
    "userRole": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "allPermissionsEnabled": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "includedUserRoles": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "includedUserRoles",
        "name"
      ],
      "type": "object"
    },
    "validationError": {
      "properties": {
        "allowed": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "detail": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "variantArticle": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "primaryArticleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "primaryArticleNumber": {
          "type": "string"
        },
        "variantArticleName": {
          "type": "string"
        },
        "variantArticleNumber": {
          "type": "string"
        },
        "variants": {
          "items": {
            "$ref": "#/definitions/variantArticleVariantWithoutReference"
          },
          "type": "array"
        }
      },
      "required": [
        "variantArticleNumber"
      ],
      "type": "object"
    },
    "variantArticleAttribute": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "attributeOptions": {
          "items": {
            "$ref": "#/definitions/variantArticleAttributeOption"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "variantArticleAttributeOption": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "variantArticleVariant": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "attributeOptions": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "variantArticleId": {
          "type": "string",
          "x-relatedEntityName": "variantArticle"
        },
        "variantArticleNumber": {
          "type": "string"
        }
      },
      "required": [
        "variantArticleId"
      ],
      "type": "object"
    },
    "variantArticleVariantWithoutReference": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "attributeOptions": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "positionNumber": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "viewSettings": {
      "properties": {
        "addFirstWorkflowActionToWorkflowButton": {
          "type": "boolean"
        },
        "allowToGenerateAndDisableConfirmationOfArrival": {
          "type": "boolean"
        },
        "allowToGenerateAndDisablePublicLink": {
          "type": "boolean"
        },
        "alwaysDisplayTab": {
          "type": "boolean"
        },
        "currencyNumberFormat": {
          "enum": [
            "FORMAT_0_5",
            "FORMAT_1_5",
            "FORMAT_2_5",
            "FORMAT_3_5",
            "FORMAT_4_5",
            "FORMAT_5_5"
          ],
          "type": "string"
        },
        "exportTablesWithLinks": {
          "type": "boolean"
        },
        "hidePerformanceHeavyEvaluationsOnDetailPages": {
          "type": "boolean"
        },
        "includeUsersInBirthDayWidget": {
          "type": "boolean"
        },
        "quantityNumberFormat": {
          "enum": [
            "FORMAT_0_5",
            "FORMAT_1_5",
            "FORMAT_2_5",
            "FORMAT_3_5",
            "FORMAT_4_5",
            "FORMAT_5_5"
          ],
          "type": "string"
        },
        "showDatesWithCalendarWeek": {
          "type": "boolean"
        },
        "validateGermanZipcodes": {
          "type": "boolean"
        },
        "warnUserUnsavedChanges": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "warehouse": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "defaultConsolidationStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "defaultProductionStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "defaultReturnsStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "defaultStoragePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/address"
        },
        "directBookingInternalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "invoiceAddress": {
          "$ref": "#/definitions/address"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "loadingEquipmentStoragePlace": {
          "$ref": "#/definitions/minimalStoragePlace"
        },
        "name": {
          "type": "string"
        },
        "primaryAddress": {
          "$ref": "#/definitions/address"
        },
        "shortIdentifier": {
          "type": "string"
        },
        "standard": {
          "type": "boolean"
        },
        "transitStoragePlace": {
          "$ref": "#/definitions/minimalStoragePlace"
        },
        "warehouseType": {
          "enum": [
            "CONSIGNMENT",
            "DROP_SHIPPING",
            "STANDARD"
          ],
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "warehouseGeneralSettings": {
      "properties": {
        "permanentItrLoadingEquipmentId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "permanentItrLoadingEquipmentIdentifierId": {
          "type": "string",
          "x-relatedEntityName": "loadingEquipmentIdentifier"
        }
      },
      "type": "object"
    },
    "warehousePicksSettings": {
      "properties": {
        "automaticPicksStrategy": {
          "enum": [
            "FIFO",
            "QUANTITY_ASC",
            "UNRESERVED_QUANTITY_DESC"
          ],
          "type": "string"
        },
        "automaticPicksStrategyBatchNumber": {
          "enum": [
            "CREATION_DATE_ASC",
            "EXPIRATION_DATE_ASC",
            "NONE"
          ],
          "type": "string"
        },
        "automaticSalesOrderPicks": {
          "enum": [
            "FROM_INCOMING_GOODS",
            "NONE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "warehouseQuantity": {
      "properties": {
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        }
      },
      "type": "object"
    },
    "warehouseSettings": {
      "properties": {
        "general": {
          "$ref": "#/definitions/warehouseGeneralSettings"
        },
        "picks": {
          "$ref": "#/definitions/warehousePicksSettings"
        }
      },
      "type": "object"
    },
    "warehouseStock": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "articleNumber": {
          "type": "string"
        },
        "batchNumber": {
          "type": "string"
        },
        "batchNumberId": {
          "type": "string",
          "x-relatedEntityName": "batchNumber"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "inboundDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "internalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "packagingUnits": {
          "items": {
            "$ref": "#/definitions/packagingUnit"
          },
          "type": "array"
        },
        "picks": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "salesOrderItemId": {
          "type": "string"
        },
        "serialNumbers": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "storagePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "warehouseId": {
          "type": "string",
          "x-relatedEntityName": "warehouse"
        }
      },
      "required": [
        "articleId",
        "inboundDate",
        "storagePlaceId",
        "warehouseId"
      ],
      "type": "object"
    },
    "warehouseStockMovement": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "articleId": {
          "type": "string",
          "x-relatedEntityName": "article"
        },
        "batchNumber": {
          "type": "string"
        },
        "batchNumberId": {
          "type": "string",
          "x-relatedEntityName": "batchNumber"
        },
        "costCenterId": {
          "type": "string",
          "x-relatedEntityName": "costCenter"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "customAttributes": {
          "items": {
            "$ref": "#/definitions/customAttribute"
          },
          "type": "array"
        },
        "incomingGoodsItemId": {
          "type": "string"
        },
        "internalTransportReferenceId": {
          "type": "string",
          "x-relatedEntityName": "internalTransportReference"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "movementNote": {
          "type": "string"
        },
        "movementNumber": {
          "type": "string"
        },
        "postingDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "productionOrderId": {
          "type": "string",
          "x-relatedEntityName": "productionOrder"
        },
        "quantity": {
          "format": "number",
          "type": "string"
        },
        "salesOrderItemId": {
          "type": "string"
        },
        "serialNumbers": {
          "items": {
            "$ref": "#/definitions/onlyId"
          },
          "type": "array"
        },
        "shipmentItemId": {
          "type": "string"
        },
        "stockMovementType": {
          "enum": [
            "IN",
            "IN_CUSTOMER_RETURN",
            "IN_DISABLE_TRANSPORT_REFERENCE",
            "IN_INVENTORY",
            "IN_PACKAGING_UNIT_TRANSFORMATION",
            "IN_PRODUCTION_ORDER",
            "IN_PURCHASE_ORDER",
            "IN_REPACK_ON_TRANSPORT_REFERENCE",
            "IN_SHIPMENT",
            "IN_SHIPMENT_CANCELLATION",
            "IN_SHIPMENT_CONSIGNMENT",
            "IN_SHIPMENT_INTERNAL",
            "IN_THIRD_PARTY_DEAL",
            "IN_TRANSFER",
            "OUT",
            "OUT_DISABLE_TRANSPORT_REFERENCE",
            "OUT_INVENTORY",
            "OUT_PACKAGING_UNIT_TRANSFORMATION",
            "OUT_PRODUCTION_ORDER",
            "OUT_REPACK_ON_TRANSPORT_REFERENCE",
            "OUT_SALES_ORDER",
            "OUT_SHIPMENT",
            "OUT_SHIPMENT_CANCELLATION",
            "OUT_SHIPMENT_CONSIGNMENT",
            "OUT_SHIPMENT_INTERNAL",
            "OUT_THIRD_PARTY_DEAL",
            "OUT_TRANSFER"
          ],
          "type": "string"
        },
        "storagePlaceId": {
          "type": "string",
          "x-relatedEntityName": "storagePlace"
        },
        "transportationOrderId": {
          "type": "string",
          "x-relatedEntityName": "transportationOrder"
        },
        "userId": {
          "type": "string",
          "x-relatedEntityName": "user"
        },
        "valuationPrice": {
          "format": "number",
          "type": "string"
        }
      },
      "required": [
        "articleId",
        "postingDate",
        "quantity",
        "valuationPrice"
      ],
      "type": "object"
    },
    "webhook": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "atCreate": {
          "type": "boolean"
        },
        "atDelete": {
          "type": "boolean"
        },
        "atUpdate": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "deactivatedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "entityName": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "requestMethod": {
          "enum": [
            "GET",
            "POST"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "entityName",
        "url"
      ],
      "type": "object"
    },
    "weclappOs": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createdDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "hardwareId": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "timestamp",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "printerNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "hardwareId"
      ],
      "type": "object"
    }
  },
  "host": "testhandel.weclapp.com",
  "info": {
    "version": "1",
    "contact": {
      "email": "support@weclapp.com",
      "name": "weclapp",
      "url": "https://www.weclapp.com"
    },
    "title": "weclapp api"
  },
  "paths": {
    "/accountCategory": {
      "get": {
        "description": "query accountCategory",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "accountCategory response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/accountCategory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountCategory"
        ]
      },
      "post": {
        "description": "create a accountCategory",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountCategory"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "accountCategory create response",
            "schema": {
              "$ref": "#/definitions/accountCategory"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountCategory"
        ]
      }
    },
    "/accountCategory/count": {
      "get": {
        "description": "count accountCategory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountCategory"
        ]
      }
    },
    "/accountCategory/id/{id}": {
      "delete": {
        "description": "delete a accountCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "accountCategory delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountCategory"
        ]
      },
      "get": {
        "description": "query accountCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/accountCategory"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountCategory"
        ]
      },
      "put": {
        "description": "update accountCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountCategory"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "accountCategory update response",
            "schema": {
              "$ref": "#/definitions/accountCategory"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountCategory"
        ]
      }
    },
    "/accountingTransaction": {
      "get": {
        "description": "query accountingTransaction",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "accountingTransaction response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/accountingTransaction"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountingTransaction"
        ]
      }
    },
    "/accountingTransaction/batchBooking": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "batchBookingDto": {
                  "$ref": "#/definitions/batchBooking"
                }
              },
              "required": [
                "batchBookingDto"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "batchBooking response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountingTransaction"
        ]
      }
    },
    "/accountingTransaction/bookIncomingPayment": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "moneyTransactionIds": {
                  "items": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "required": [
                "moneyTransactionIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bookIncomingPayment response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountingTransaction"
        ]
      }
    },
    "/accountingTransaction/count": {
      "get": {
        "description": "count accountingTransaction",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountingTransaction"
        ]
      }
    },
    "/accountingTransaction/id/{id}": {
      "get": {
        "description": "query accountingTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/accountingTransaction"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "accountingTransaction"
        ]
      }
    },
    "/activityFeedEntry/lastEntries": {
      "get": {
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "count",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "lastEntries response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/activityFeedEntry"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "activityFeedEntry"
        ]
      }
    },
    "/appSettings": {
      "get": {
        "description": "query appSettings",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appSettings response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/appSettings"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appSettings"
        ]
      },
      "post": {
        "description": "create a appSettings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appSettings"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "appSettings create response",
            "schema": {
              "$ref": "#/definitions/appSettings"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appSettings"
        ]
      }
    },
    "/appSettings/count": {
      "get": {
        "description": "count appSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appSettings"
        ]
      }
    },
    "/appSettings/id/{id}": {
      "delete": {
        "description": "delete a appSettings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "appSettings delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appSettings"
        ]
      },
      "get": {
        "description": "query appSettings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/appSettings"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appSettings"
        ]
      },
      "put": {
        "description": "update appSettings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appSettings"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "appSettings update response",
            "schema": {
              "$ref": "#/definitions/appSettings"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appSettings"
        ]
      }
    },
    "/appUserSettings": {
      "get": {
        "description": "query appUserSettings",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appUserSettings response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/appUserSettings"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appUserSettings"
        ]
      },
      "post": {
        "description": "create a appUserSettings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appUserSettings"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "appUserSettings create response",
            "schema": {
              "$ref": "#/definitions/appUserSettings"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appUserSettings"
        ]
      }
    },
    "/appUserSettings/count": {
      "get": {
        "description": "count appUserSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appUserSettings"
        ]
      }
    },
    "/appUserSettings/id/{id}": {
      "delete": {
        "description": "delete a appUserSettings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "appUserSettings delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appUserSettings"
        ]
      },
      "get": {
        "description": "query appUserSettings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/appUserSettings"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appUserSettings"
        ]
      },
      "put": {
        "description": "update appUserSettings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appUserSettings"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "appUserSettings update response",
            "schema": {
              "$ref": "#/definitions/appUserSettings"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "appUserSettings"
        ]
      }
    },
    "/archivedEmail": {
      "get": {
        "description": "query archivedEmail",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "archivedEmail response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/archivedEmail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "archivedEmail"
        ]
      }
    },
    "/archivedEmail/count": {
      "get": {
        "description": "count archivedEmail",
        "parameters": [
          {
            "in": "query",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "archivedEmail"
        ]
      }
    },
    "/archivedEmail/create": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "entityName": {
                  "type": "string"
                },
                "entityId": {
                  "type": "string"
                },
                "archivedEmailWithAttachments": {
                  "$ref": "#/definitions/archivedEmailWithAttachments"
                }
              },
              "required": [
                "entityName",
                "entityId",
                "archivedEmailWithAttachments"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/archivedEmail"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "archivedEmail"
        ]
      }
    },
    "/archivedEmail/id/{id}": {
      "get": {
        "description": "query archivedEmail",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/archivedEmail"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "archivedEmail"
        ]
      }
    },
    "/archivedEmail/id/{id}/removeReference": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "entityName": {
                  "type": "string"
                },
                "entityId": {
                  "type": "string"
                }
              },
              "required": [
                "entityName",
                "entityId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "removeReference response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "archivedEmail"
        ]
      }
    },
    "/archivedEmail/queryByIds": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "queryByIds response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/archivedEmail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "archivedEmail"
        ]
      }
    },
    "/article": {
      "get": {
        "description": "query article",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "additionalProperties",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "article response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/article"
                  },
                  "type": "array"
                },
                "additionalProperties": {
                  "properties": {
                    "aggregateStock": {
                      "items": {
                        "items": {
                          "$ref": "#/definitions/aggregateStock"
                        },
                        "type": "array"
                      },
                      "type": "array"
                    },
                    "averagePrice": {
                      "items": {
                        "$ref": "#/definitions/amount"
                      },
                      "type": "array"
                    },
                    "currentSalesPrice": {
                      "items": {
                        "$ref": "#/definitions/priceData"
                      },
                      "type": "array"
                    },
                    "pickableStockQuantity": {
                      "items": {
                        "items": {
                          "$ref": "#/definitions/warehouseQuantity"
                        },
                        "type": "array"
                      },
                      "type": "array"
                    },
                    "reservedStockQuantity": {
                      "items": {
                        "items": {
                          "$ref": "#/definitions/warehouseQuantity"
                        },
                        "type": "array"
                      },
                      "type": "array"
                    },
                    "totalStockQuantity": {
                      "items": {
                        "items": {
                          "$ref": "#/definitions/warehouseQuantity"
                        },
                        "type": "array"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      },
      "post": {
        "description": "create a article",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/article"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "article create response",
            "schema": {
              "$ref": "#/definitions/article"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/calculatePurchaseArticlePrice": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "articleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "supplierId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "quantity",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "currencyId",
            "required": true,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "startDate",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "calculatePurchaseArticlePrice response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/amount"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/count": {
      "get": {
        "description": "count article",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/createItScopeArticle": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "articleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "createItScopeArticle response",
            "schema": {
              "properties": {
                "result": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/downloadExportedKeyFigures": {
      "get": {
        "parameters": [],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadExportedKeyFigures response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/exportKeyFigures": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "storeIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "categoryIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "storeIds",
                "categoryIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "exportKeyFigures response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/jobResult"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/id/{id}": {
      "delete": {
        "description": "delete a article",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "article delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      },
      "get": {
        "description": "query article",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/article"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      },
      "put": {
        "description": "update article",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/article"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "article update response",
            "schema": {
              "$ref": "#/definitions/article"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/id/{id}/changeUnit": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "unitId": {
                  "type": "string"
                }
              },
              "required": [
                "unitId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "changeUnit response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/id/{id}/createDatasheetPdf": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "commercialLanguageId": {
                  "type": "string"
                },
                "salesChannel": {
                  "type": "string"
                }
              },
              "required": [
                "commercialLanguageId",
                "salesChannel"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createDatasheetPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/id/{id}/createLabelPdf": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "printCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "startPosition": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "required": [
                "printCount",
                "startPosition"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createLabelPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/id/{id}/downloadArticleImage": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "articleImageId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "preview",
            "required": false,
            "type": "boolean"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadArticleImage response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/id/{id}/downloadMainArticleImage": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "preview",
            "required": false,
            "type": "boolean"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadMainArticleImage response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/id/{id}/extraInfoForApp": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "extraInfoForApp response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/articleExtraInformation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/id/{id}/packagingUnitStructure": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "packagingUnitStructure response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/article"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/id/{id}/uploadArticleImage": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "mainImage",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "articleImageId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "uploadArticleImage response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/article/suggestArticlesForSupplier": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "supplierId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "suggestArticlesForSupplier response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/article"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/articleAccountingCode": {
      "get": {
        "description": "query articleAccountingCode",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "articleAccountingCode response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleAccountingCode"
        ]
      },
      "post": {
        "description": "create a articleAccountingCode",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "articleAccountingCode create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleAccountingCode"
        ]
      }
    },
    "/articleAccountingCode/count": {
      "get": {
        "description": "count articleAccountingCode",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleAccountingCode"
        ]
      }
    },
    "/articleAccountingCode/id/{id}": {
      "delete": {
        "description": "delete a articleAccountingCode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "articleAccountingCode delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleAccountingCode"
        ]
      },
      "get": {
        "description": "query articleAccountingCode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleAccountingCode"
        ]
      },
      "put": {
        "description": "update articleAccountingCode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "articleAccountingCode update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleAccountingCode"
        ]
      }
    },
    "/articleCategory": {
      "get": {
        "description": "query articleCategory",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "articleCategory response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/articleCategory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategory"
        ]
      },
      "post": {
        "description": "create a articleCategory",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/articleCategory"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "articleCategory create response",
            "schema": {
              "$ref": "#/definitions/articleCategory"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategory"
        ]
      }
    },
    "/articleCategory/count": {
      "get": {
        "description": "count articleCategory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategory"
        ]
      }
    },
    "/articleCategory/id/{id}": {
      "delete": {
        "description": "delete a articleCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "articleCategory delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategory"
        ]
      },
      "get": {
        "description": "query articleCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/articleCategory"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategory"
        ]
      },
      "put": {
        "description": "update articleCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/articleCategory"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "articleCategory update response",
            "schema": {
              "$ref": "#/definitions/articleCategory"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategory"
        ]
      }
    },
    "/articleCategory/id/{id}/downloadImage": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "imageId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadImage response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategory"
        ]
      }
    },
    "/articleCategory/id/{id}/uploadImage": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "uploadImage response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategory"
        ]
      }
    },
    "/articleCategoryClassification": {
      "get": {
        "description": "query articleCategoryClassification",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "articleCategoryClassification response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategoryClassification"
        ]
      },
      "post": {
        "description": "create a articleCategoryClassification",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "articleCategoryClassification create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategoryClassification"
        ]
      }
    },
    "/articleCategoryClassification/count": {
      "get": {
        "description": "count articleCategoryClassification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategoryClassification"
        ]
      }
    },
    "/articleCategoryClassification/id/{id}": {
      "delete": {
        "description": "delete a articleCategoryClassification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "articleCategoryClassification delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategoryClassification"
        ]
      },
      "get": {
        "description": "query articleCategoryClassification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategoryClassification"
        ]
      },
      "put": {
        "description": "update articleCategoryClassification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "articleCategoryClassification update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleCategoryClassification"
        ]
      }
    },
    "/articleItemGroup": {
      "get": {
        "description": "query articleItemGroup",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "articleItemGroup response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/articleItemGroup"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleItemGroup"
        ]
      },
      "post": {
        "description": "create a articleItemGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/articleItemGroup"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "articleItemGroup create response",
            "schema": {
              "$ref": "#/definitions/articleItemGroup"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleItemGroup"
        ]
      }
    },
    "/articleItemGroup/count": {
      "get": {
        "description": "count articleItemGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleItemGroup"
        ]
      }
    },
    "/articleItemGroup/id/{id}": {
      "delete": {
        "description": "delete a articleItemGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "articleItemGroup delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleItemGroup"
        ]
      },
      "get": {
        "description": "query articleItemGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/articleItemGroup"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleItemGroup"
        ]
      },
      "put": {
        "description": "update articleItemGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/articleItemGroup"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "articleItemGroup update response",
            "schema": {
              "$ref": "#/definitions/articleItemGroup"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleItemGroup"
        ]
      }
    },
    "/articlePrice": {
      "get": {
        "description": "query articlePrice",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "articlePrice response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/articlePrice"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articlePrice"
        ]
      }
    },
    "/articlePrice/count": {
      "get": {
        "description": "count articlePrice",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articlePrice"
        ]
      }
    },
    "/articlePrice/id/{id}": {
      "get": {
        "description": "query articlePrice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/articlePrice"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articlePrice"
        ]
      }
    },
    "/articleRating": {
      "get": {
        "description": "query articleRating",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "articleRating response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleRating"
        ]
      },
      "post": {
        "description": "create a articleRating",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "articleRating create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleRating"
        ]
      }
    },
    "/articleRating/count": {
      "get": {
        "description": "count articleRating",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleRating"
        ]
      }
    },
    "/articleRating/id/{id}": {
      "delete": {
        "description": "delete a articleRating",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "articleRating delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleRating"
        ]
      },
      "get": {
        "description": "query articleRating",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleRating"
        ]
      },
      "put": {
        "description": "update articleRating",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "articleRating update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleRating"
        ]
      }
    },
    "/articleStatus": {
      "get": {
        "description": "query articleStatus",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "articleStatus response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleStatus"
        ]
      },
      "post": {
        "description": "create a articleStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "articleStatus create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleStatus"
        ]
      }
    },
    "/articleStatus/count": {
      "get": {
        "description": "count articleStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleStatus"
        ]
      }
    },
    "/articleStatus/id/{id}": {
      "delete": {
        "description": "delete a articleStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "articleStatus delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleStatus"
        ]
      },
      "get": {
        "description": "query articleStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleStatus"
        ]
      },
      "put": {
        "description": "update articleStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "articleStatus update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleStatus"
        ]
      }
    },
    "/articleSupplySource": {
      "get": {
        "description": "query articleSupplySource",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "additionalProperties",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "articleSupplySource response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/articleSupplySource"
                  },
                  "type": "array"
                },
                "additionalProperties": {
                  "properties": {
                    "currentPurchasePrice": {
                      "items": {
                        "$ref": "#/definitions/priceData"
                      },
                      "type": "array"
                    },
                    "currentPurchasePriceInCompanyCurrency": {
                      "items": {
                        "$ref": "#/definitions/amount"
                      },
                      "type": "array"
                    },
                    "lastPurchaseOrderDate": {
                      "items": {
                        "format": "timestamp",
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleSupplySource"
        ]
      },
      "post": {
        "description": "create a articleSupplySource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/articleSupplySource"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "articleSupplySource create response",
            "schema": {
              "$ref": "#/definitions/articleSupplySource"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleSupplySource"
        ]
      }
    },
    "/articleSupplySource/count": {
      "get": {
        "description": "count articleSupplySource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleSupplySource"
        ]
      }
    },
    "/articleSupplySource/id/{id}": {
      "delete": {
        "description": "delete a articleSupplySource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "articleSupplySource delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleSupplySource"
        ]
      },
      "get": {
        "description": "query articleSupplySource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/articleSupplySource"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleSupplySource"
        ]
      },
      "put": {
        "description": "update articleSupplySource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/articleSupplySource"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "articleSupplySource update response",
            "schema": {
              "$ref": "#/definitions/articleSupplySource"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "articleSupplySource"
        ]
      }
    },
    "/attendance": {
      "get": {
        "description": "query attendance",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "attendance response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/attendance"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      },
      "post": {
        "description": "create a attendance",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/attendance"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "attendance create response",
            "schema": {
              "$ref": "#/definitions/attendance"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      }
    },
    "/attendance/count": {
      "get": {
        "description": "count attendance",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      }
    },
    "/attendance/currentAttendance": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "currentAttendance response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/attendance"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      }
    },
    "/attendance/id/{id}": {
      "delete": {
        "description": "delete a attendance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "attendance delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      },
      "get": {
        "description": "query attendance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/attendance"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      },
      "put": {
        "description": "update attendance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/attendance"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "attendance update response",
            "schema": {
              "$ref": "#/definitions/attendance"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      }
    },
    "/attendance/logOff": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "logOff response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/attendance"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      }
    },
    "/attendance/logOn": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "logOn response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/attendance"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      }
    },
    "/auditing/history": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "history response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/auditingHistoryEntry"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "auditing"
        ]
      }
    },
    "/bankAccount": {
      "get": {
        "description": "query bankAccount",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "bankAccount response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/bankAccount"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "bankAccount"
        ]
      },
      "post": {
        "description": "create a bankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bankAccount"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "bankAccount create response",
            "schema": {
              "$ref": "#/definitions/bankAccount"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "bankAccount"
        ]
      }
    },
    "/bankAccount/count": {
      "get": {
        "description": "count bankAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "bankAccount"
        ]
      }
    },
    "/bankAccount/id/{id}": {
      "delete": {
        "description": "delete a bankAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "bankAccount delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "bankAccount"
        ]
      },
      "get": {
        "description": "query bankAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/bankAccount"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "bankAccount"
        ]
      },
      "put": {
        "description": "update bankAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bankAccount"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "bankAccount update response",
            "schema": {
              "$ref": "#/definitions/bankAccount"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "bankAccount"
        ]
      }
    },
    "/batch/query": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "requests": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "requests"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "query response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "batch"
        ]
      }
    },
    "/batchNumber": {
      "get": {
        "description": "query batchNumber",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "batchNumber response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/batchNumber"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "batchNumber"
        ]
      }
    },
    "/batchNumber/count": {
      "get": {
        "description": "count batchNumber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "batchNumber"
        ]
      }
    },
    "/batchNumber/id/{id}": {
      "get": {
        "description": "query batchNumber",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/batchNumber"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "batchNumber"
        ]
      }
    },
    "/blanketPurchaseOrder": {
      "get": {
        "description": "query blanketPurchaseOrder",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "blanketPurchaseOrder response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/blanketPurchaseOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "blanketPurchaseOrder"
        ]
      },
      "post": {
        "description": "create a blanketPurchaseOrder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/blanketPurchaseOrder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "blanketPurchaseOrder create response",
            "schema": {
              "$ref": "#/definitions/blanketPurchaseOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "blanketPurchaseOrder"
        ]
      }
    },
    "/blanketPurchaseOrder/count": {
      "get": {
        "description": "count blanketPurchaseOrder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "blanketPurchaseOrder"
        ]
      }
    },
    "/blanketPurchaseOrder/id/{id}": {
      "delete": {
        "description": "delete a blanketPurchaseOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "blanketPurchaseOrder delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "blanketPurchaseOrder"
        ]
      },
      "get": {
        "description": "query blanketPurchaseOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/blanketPurchaseOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "blanketPurchaseOrder"
        ]
      },
      "put": {
        "description": "update blanketPurchaseOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/blanketPurchaseOrder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "blanketPurchaseOrder update response",
            "schema": {
              "$ref": "#/definitions/blanketPurchaseOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "blanketPurchaseOrder"
        ]
      }
    },
    "/blanketPurchaseOrder/id/{id}/downloadLatestBlanketPurchaseOrderPdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestBlanketPurchaseOrderPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "blanketPurchaseOrder"
        ]
      }
    },
    "/blanketPurchaseOrder/id/{id}/generateReleases": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "firstScheduledDeliveryDate": {
                  "format": "timestamp",
                  "type": "integer"
                },
                "repeatInterval": {
                  "format": "int32",
                  "type": "integer"
                },
                "repeatType": {
                  "enum": [
                    "DAY",
                    "MONTH",
                    "WEEK",
                    "YEAR"
                  ],
                  "type": "string"
                },
                "fixReleasedQuantity": {
                  "type": "boolean"
                },
                "releasedQuantity": {
                  "format": "number",
                  "type": "string"
                }
              },
              "required": [
                "firstScheduledDeliveryDate",
                "repeatInterval",
                "repeatType",
                "fixReleasedQuantity"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "generateReleases response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/blanketPurchaseOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "blanketPurchaseOrder"
        ]
      }
    },
    "/businessHolidays": {
      "get": {
        "description": "query businessHolidays",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "businessHolidays response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/businessHolidays"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHolidays"
        ]
      },
      "post": {
        "description": "create a businessHolidays",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/businessHolidays"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "businessHolidays create response",
            "schema": {
              "$ref": "#/definitions/businessHolidays"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHolidays"
        ]
      }
    },
    "/businessHolidays/count": {
      "get": {
        "description": "count businessHolidays",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHolidays"
        ]
      }
    },
    "/businessHolidays/id/{id}": {
      "delete": {
        "description": "delete a businessHolidays",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "businessHolidays delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHolidays"
        ]
      },
      "get": {
        "description": "query businessHolidays",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/businessHolidays"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHolidays"
        ]
      },
      "put": {
        "description": "update businessHolidays",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/businessHolidays"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "businessHolidays update response",
            "schema": {
              "$ref": "#/definitions/businessHolidays"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHolidays"
        ]
      }
    },
    "/businessHours": {
      "get": {
        "description": "query businessHours",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "businessHours response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/businessHours"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHours"
        ]
      },
      "post": {
        "description": "create a businessHours",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/businessHours"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "businessHours create response",
            "schema": {
              "$ref": "#/definitions/businessHours"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHours"
        ]
      }
    },
    "/businessHours/count": {
      "get": {
        "description": "count businessHours",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHours"
        ]
      }
    },
    "/businessHours/id/{id}": {
      "delete": {
        "description": "delete a businessHours",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "businessHours delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHours"
        ]
      },
      "get": {
        "description": "query businessHours",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/businessHours"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHours"
        ]
      },
      "put": {
        "description": "update businessHours",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/businessHours"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "businessHours update response",
            "schema": {
              "$ref": "#/definitions/businessHours"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "businessHours"
        ]
      }
    },
    "/calendar": {
      "get": {
        "description": "query calendar",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "calendar response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/calendar"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendar"
        ]
      },
      "post": {
        "description": "create a calendar",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/calendar"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "calendar create response",
            "schema": {
              "$ref": "#/definitions/calendar"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendar"
        ]
      }
    },
    "/calendar/count": {
      "get": {
        "description": "count calendar",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendar"
        ]
      }
    },
    "/calendar/id/{id}": {
      "delete": {
        "description": "delete a calendar",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "calendar delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendar"
        ]
      },
      "get": {
        "description": "query calendar",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/calendar"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendar"
        ]
      },
      "put": {
        "description": "update calendar",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/calendar"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "calendar update response",
            "schema": {
              "$ref": "#/definitions/calendar"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendar"
        ]
      }
    },
    "/calendar/id/{id}/deleteCalendarAndMoveEvents": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "replacementCalendarId": {
                  "type": "string"
                }
              },
              "required": [
                "replacementCalendarId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleteCalendarAndMoveEvents response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendar"
        ]
      }
    },
    "/calendar/id/{id}/importiCal": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "importiCal response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendar"
        ]
      }
    },
    "/calendarEvent": {
      "get": {
        "description": "query calendarEvent",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "calendarEvent response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/calendarEvent"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendarEvent"
        ]
      },
      "post": {
        "description": "create a calendarEvent",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/calendarEvent"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "calendarEvent create response",
            "schema": {
              "$ref": "#/definitions/calendarEvent"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendarEvent"
        ]
      }
    },
    "/calendarEvent/count": {
      "get": {
        "description": "count calendarEvent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendarEvent"
        ]
      }
    },
    "/calendarEvent/id/{id}": {
      "delete": {
        "description": "delete a calendarEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "calendarEvent delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendarEvent"
        ]
      },
      "get": {
        "description": "query calendarEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/calendarEvent"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendarEvent"
        ]
      },
      "put": {
        "description": "update calendarEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/calendarEvent"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "calendarEvent update response",
            "schema": {
              "$ref": "#/definitions/calendarEvent"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "calendarEvent"
        ]
      }
    },
    "/campaign": {
      "get": {
        "description": "query campaign",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "campaign response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/campaign"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaign"
        ]
      },
      "post": {
        "description": "create a campaign",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/campaign"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "campaign create response",
            "schema": {
              "$ref": "#/definitions/campaign"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaign"
        ]
      }
    },
    "/campaign/count": {
      "get": {
        "description": "count campaign",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaign"
        ]
      }
    },
    "/campaign/id/{id}": {
      "delete": {
        "description": "delete a campaign",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "campaign delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaign"
        ]
      },
      "get": {
        "description": "query campaign",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/campaign"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaign"
        ]
      },
      "put": {
        "description": "update campaign",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/campaign"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "campaign update response",
            "schema": {
              "$ref": "#/definitions/campaign"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaign"
        ]
      }
    },
    "/campaignParticipant": {
      "get": {
        "description": "query campaignParticipant",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "campaignParticipant response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/campaignParticipant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaignParticipant"
        ]
      },
      "post": {
        "description": "create a campaignParticipant",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/campaignParticipant"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "campaignParticipant create response",
            "schema": {
              "$ref": "#/definitions/campaignParticipant"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaignParticipant"
        ]
      }
    },
    "/campaignParticipant/count": {
      "get": {
        "description": "count campaignParticipant",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaignParticipant"
        ]
      }
    },
    "/campaignParticipant/id/{id}": {
      "delete": {
        "description": "delete a campaignParticipant",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "campaignParticipant delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaignParticipant"
        ]
      },
      "get": {
        "description": "query campaignParticipant",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/campaignParticipant"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaignParticipant"
        ]
      },
      "put": {
        "description": "update campaignParticipant",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/campaignParticipant"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "campaignParticipant update response",
            "schema": {
              "$ref": "#/definitions/campaignParticipant"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "campaignParticipant"
        ]
      }
    },
    "/cashAccount": {
      "get": {
        "description": "query cashAccount",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "cashAccount response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/cashAccount"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccount"
        ]
      },
      "post": {
        "description": "create a cashAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cashAccount"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "cashAccount create response",
            "schema": {
              "$ref": "#/definitions/cashAccount"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccount"
        ]
      }
    },
    "/cashAccount/count": {
      "get": {
        "description": "count cashAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccount"
        ]
      }
    },
    "/cashAccount/id/{id}": {
      "get": {
        "description": "query cashAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/cashAccount"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccount"
        ]
      },
      "put": {
        "description": "update cashAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cashAccount"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "cashAccount update response",
            "schema": {
              "$ref": "#/definitions/cashAccount"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccount"
        ]
      }
    },
    "/cashAccountSheet": {
      "get": {
        "description": "query cashAccountSheet",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "cashAccountSheet response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/cashAccountSheet"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccountSheet"
        ]
      },
      "post": {
        "description": "create a cashAccountSheet",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cashAccountSheet"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "cashAccountSheet create response",
            "schema": {
              "$ref": "#/definitions/cashAccountSheet"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccountSheet"
        ]
      }
    },
    "/cashAccountSheet/count": {
      "get": {
        "description": "count cashAccountSheet",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccountSheet"
        ]
      }
    },
    "/cashAccountSheet/id/{id}": {
      "delete": {
        "description": "delete a cashAccountSheet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "cashAccountSheet delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccountSheet"
        ]
      },
      "get": {
        "description": "query cashAccountSheet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/cashAccountSheet"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccountSheet"
        ]
      },
      "put": {
        "description": "update cashAccountSheet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cashAccountSheet"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "cashAccountSheet update response",
            "schema": {
              "$ref": "#/definitions/cashAccountSheet"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "cashAccountSheet"
        ]
      }
    },
    "/comment": {
      "get": {
        "description": "query comment",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "comment response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/comment"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "comment"
        ]
      },
      "post": {
        "description": "create a comment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "comment create response",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "comment"
        ]
      }
    },
    "/comment/count": {
      "get": {
        "description": "count comment",
        "parameters": [
          {
            "in": "query",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "comment"
        ]
      }
    },
    "/comment/id/{id}": {
      "delete": {
        "description": "delete a comment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "comment delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "comment"
        ]
      },
      "get": {
        "description": "query comment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "comment"
        ]
      },
      "put": {
        "description": "update comment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "comment update response",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "comment"
        ]
      }
    },
    "/commercialLanguage": {
      "get": {
        "description": "query commercialLanguage",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "commercialLanguage response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/commercialLanguage"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "commercialLanguage"
        ]
      }
    },
    "/commercialLanguage/count": {
      "get": {
        "description": "count commercialLanguage",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "commercialLanguage"
        ]
      }
    },
    "/commercialLanguage/id/{id}": {
      "get": {
        "description": "query commercialLanguage",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/commercialLanguage"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "commercialLanguage"
        ]
      }
    },
    "/companySize": {
      "get": {
        "description": "query companySize",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "companySize response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "companySize"
        ]
      },
      "post": {
        "description": "create a companySize",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "companySize create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "companySize"
        ]
      }
    },
    "/companySize/count": {
      "get": {
        "description": "count companySize",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "companySize"
        ]
      }
    },
    "/companySize/id/{id}": {
      "delete": {
        "description": "delete a companySize",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "companySize delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "companySize"
        ]
      },
      "get": {
        "description": "query companySize",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "companySize"
        ]
      },
      "put": {
        "description": "update companySize",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "companySize update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "companySize"
        ]
      }
    },
    "/contact": {
      "get": {
        "description": "query contact",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "contact response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/contact"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contact"
        ]
      },
      "post": {
        "description": "create a contact",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contact"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "contact create response",
            "schema": {
              "$ref": "#/definitions/contact"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contact"
        ]
      }
    },
    "/contact/count": {
      "get": {
        "description": "count contact",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contact"
        ]
      }
    },
    "/contact/id/{id}": {
      "delete": {
        "description": "delete a contact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "contact delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contact"
        ]
      },
      "get": {
        "description": "query contact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/contact"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contact"
        ]
      },
      "put": {
        "description": "update contact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contact"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "contact update response",
            "schema": {
              "$ref": "#/definitions/contact"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contact"
        ]
      }
    },
    "/contact/id/{id}/downloadImage": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadImage response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contact"
        ]
      }
    },
    "/contact/id/{id}/uploadImage": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "uploadImage response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contact"
        ]
      }
    },
    "/contract": {
      "get": {
        "description": "query contract",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "contract response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/contract"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contract"
        ]
      },
      "post": {
        "description": "create a contract",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contract"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "contract create response",
            "schema": {
              "$ref": "#/definitions/contract"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contract"
        ]
      }
    },
    "/contract/count": {
      "get": {
        "description": "count contract",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contract"
        ]
      }
    },
    "/contract/getFromTemplate": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "templateId": {
                  "type": "string"
                }
              },
              "required": [
                "templateId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "getFromTemplate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/contract"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contract"
        ]
      }
    },
    "/contract/id/{id}": {
      "delete": {
        "description": "delete a contract",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "contract delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contract"
        ]
      },
      "get": {
        "description": "query contract",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/contract"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contract"
        ]
      },
      "put": {
        "description": "update contract",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contract"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "contract update response",
            "schema": {
              "$ref": "#/definitions/contract"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contract"
        ]
      }
    },
    "/contract/id/{id}/createContractDocument": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createContractDocument response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contract"
        ]
      }
    },
    "/contract/id/{id}/downloadLatestContractDocumentPdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestContractDocumentPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contract"
        ]
      }
    },
    "/contractAuthorizationUnit": {
      "get": {
        "description": "query contractAuthorizationUnit",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "contractAuthorizationUnit response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/contractAuthorizationUnit"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractAuthorizationUnit"
        ]
      }
    },
    "/contractAuthorizationUnit/count": {
      "get": {
        "description": "count contractAuthorizationUnit",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractAuthorizationUnit"
        ]
      }
    },
    "/contractAuthorizationUnit/id/{id}": {
      "get": {
        "description": "query contractAuthorizationUnit",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/contractAuthorizationUnit"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractAuthorizationUnit"
        ]
      }
    },
    "/contractBillingGroup": {
      "get": {
        "description": "query contractBillingGroup",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "contractBillingGroup response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractBillingGroup"
        ]
      },
      "post": {
        "description": "create a contractBillingGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "contractBillingGroup create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractBillingGroup"
        ]
      }
    },
    "/contractBillingGroup/count": {
      "get": {
        "description": "count contractBillingGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractBillingGroup"
        ]
      }
    },
    "/contractBillingGroup/id/{id}": {
      "delete": {
        "description": "delete a contractBillingGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "contractBillingGroup delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractBillingGroup"
        ]
      },
      "get": {
        "description": "query contractBillingGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractBillingGroup"
        ]
      },
      "put": {
        "description": "update contractBillingGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "contractBillingGroup update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractBillingGroup"
        ]
      }
    },
    "/contractTerminationReason": {
      "get": {
        "description": "query contractTerminationReason",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "contractTerminationReason response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractTerminationReason"
        ]
      },
      "post": {
        "description": "create a contractTerminationReason",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "contractTerminationReason create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractTerminationReason"
        ]
      }
    },
    "/contractTerminationReason/count": {
      "get": {
        "description": "count contractTerminationReason",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractTerminationReason"
        ]
      }
    },
    "/contractTerminationReason/id/{id}": {
      "delete": {
        "description": "delete a contractTerminationReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "contractTerminationReason delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractTerminationReason"
        ]
      },
      "get": {
        "description": "query contractTerminationReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractTerminationReason"
        ]
      },
      "put": {
        "description": "update contractTerminationReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "contractTerminationReason update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractTerminationReason"
        ]
      }
    },
    "/contractType": {
      "get": {
        "description": "query contractType",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "contractType response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractType"
        ]
      },
      "post": {
        "description": "create a contractType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "contractType create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractType"
        ]
      }
    },
    "/contractType/count": {
      "get": {
        "description": "count contractType",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractType"
        ]
      }
    },
    "/contractType/id/{id}": {
      "delete": {
        "description": "delete a contractType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "contractType delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractType"
        ]
      },
      "get": {
        "description": "query contractType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractType"
        ]
      },
      "put": {
        "description": "update contractType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "contractType update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "contractType"
        ]
      }
    },
    "/costCenter": {
      "get": {
        "description": "query costCenter",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "costCenter response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/costCenter"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenter"
        ]
      },
      "post": {
        "description": "create a costCenter",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/costCenter"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "costCenter create response",
            "schema": {
              "$ref": "#/definitions/costCenter"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenter"
        ]
      }
    },
    "/costCenter/count": {
      "get": {
        "description": "count costCenter",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenter"
        ]
      }
    },
    "/costCenter/id/{id}": {
      "delete": {
        "description": "delete a costCenter",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "costCenter delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenter"
        ]
      },
      "get": {
        "description": "query costCenter",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/costCenter"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenter"
        ]
      },
      "put": {
        "description": "update costCenter",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/costCenter"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "costCenter update response",
            "schema": {
              "$ref": "#/definitions/costCenter"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenter"
        ]
      }
    },
    "/costCenterGroup": {
      "get": {
        "description": "query costCenterGroup",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "costCenterGroup response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenterGroup"
        ]
      },
      "post": {
        "description": "create a costCenterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "costCenterGroup create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenterGroup"
        ]
      }
    },
    "/costCenterGroup/count": {
      "get": {
        "description": "count costCenterGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenterGroup"
        ]
      }
    },
    "/costCenterGroup/id/{id}": {
      "delete": {
        "description": "delete a costCenterGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "costCenterGroup delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenterGroup"
        ]
      },
      "get": {
        "description": "query costCenterGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenterGroup"
        ]
      },
      "put": {
        "description": "update costCenterGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "costCenterGroup update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costCenterGroup"
        ]
      }
    },
    "/costType": {
      "get": {
        "description": "query costType",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "costType response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/costType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costType"
        ]
      },
      "post": {
        "description": "create a costType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/costType"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "costType create response",
            "schema": {
              "$ref": "#/definitions/costType"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costType"
        ]
      }
    },
    "/costType/count": {
      "get": {
        "description": "count costType",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costType"
        ]
      }
    },
    "/costType/id/{id}": {
      "delete": {
        "description": "delete a costType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "costType delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costType"
        ]
      },
      "get": {
        "description": "query costType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/costType"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costType"
        ]
      },
      "put": {
        "description": "update costType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/costType"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "costType update response",
            "schema": {
              "$ref": "#/definitions/costType"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "costType"
        ]
      }
    },
    "/crmCallCategory": {
      "get": {
        "description": "query crmCallCategory",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "crmCallCategory response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmCallCategory"
        ]
      },
      "post": {
        "description": "create a crmCallCategory",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "crmCallCategory create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmCallCategory"
        ]
      }
    },
    "/crmCallCategory/count": {
      "get": {
        "description": "count crmCallCategory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmCallCategory"
        ]
      }
    },
    "/crmCallCategory/id/{id}": {
      "delete": {
        "description": "delete a crmCallCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "crmCallCategory delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmCallCategory"
        ]
      },
      "get": {
        "description": "query crmCallCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmCallCategory"
        ]
      },
      "put": {
        "description": "update crmCallCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "crmCallCategory update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmCallCategory"
        ]
      }
    },
    "/crmEvent": {
      "get": {
        "description": "query crmEvent",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "crmEvent response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/crmEvent"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEvent"
        ]
      },
      "post": {
        "description": "create a crmEvent",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crmEvent"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "crmEvent create response",
            "schema": {
              "$ref": "#/definitions/crmEvent"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEvent"
        ]
      }
    },
    "/crmEvent/count": {
      "get": {
        "description": "count crmEvent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEvent"
        ]
      }
    },
    "/crmEvent/id/{id}": {
      "delete": {
        "description": "delete a crmEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "crmEvent delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEvent"
        ]
      },
      "get": {
        "description": "query crmEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/crmEvent"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEvent"
        ]
      },
      "put": {
        "description": "update crmEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crmEvent"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "crmEvent update response",
            "schema": {
              "$ref": "#/definitions/crmEvent"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEvent"
        ]
      }
    },
    "/crmEventCategory": {
      "get": {
        "description": "query crmEventCategory",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "crmEventCategory response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEventCategory"
        ]
      },
      "post": {
        "description": "create a crmEventCategory",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "crmEventCategory create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEventCategory"
        ]
      }
    },
    "/crmEventCategory/count": {
      "get": {
        "description": "count crmEventCategory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEventCategory"
        ]
      }
    },
    "/crmEventCategory/id/{id}": {
      "delete": {
        "description": "delete a crmEventCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "crmEventCategory delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEventCategory"
        ]
      },
      "get": {
        "description": "query crmEventCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEventCategory"
        ]
      },
      "put": {
        "description": "update crmEventCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "crmEventCategory update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "crmEventCategory"
        ]
      }
    },
    "/currency": {
      "get": {
        "description": "query currency",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "currency response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/currency"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "currency"
        ]
      },
      "post": {
        "description": "create a currency",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/currency"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "currency create response",
            "schema": {
              "$ref": "#/definitions/currency"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "currency"
        ]
      }
    },
    "/currency/companyCurrency": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "companyCurrency response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/currency"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "currency"
        ]
      }
    },
    "/currency/count": {
      "get": {
        "description": "count currency",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "currency"
        ]
      }
    },
    "/currency/id/{id}": {
      "delete": {
        "description": "delete a currency",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "currency delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "currency"
        ]
      },
      "get": {
        "description": "query currency",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/currency"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "currency"
        ]
      },
      "put": {
        "description": "update currency",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/currency"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "currency update response",
            "schema": {
              "$ref": "#/definitions/currency"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "currency"
        ]
      }
    },
    "/currency/id/{id}/historicalRatesForChart": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "historicalRatesForChart response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "items": {
                      "format": "double",
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "currency"
        ]
      }
    },
    "/customAttributeDefinition": {
      "get": {
        "description": "query customAttributeDefinition",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "customAttributeDefinition response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customAttributeDefinition"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customAttributeDefinition"
        ]
      },
      "post": {
        "description": "create a customAttributeDefinition",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customAttributeDefinition"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "customAttributeDefinition create response",
            "schema": {
              "$ref": "#/definitions/customAttributeDefinition"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customAttributeDefinition"
        ]
      }
    },
    "/customAttributeDefinition/count": {
      "get": {
        "description": "count customAttributeDefinition",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customAttributeDefinition"
        ]
      }
    },
    "/customAttributeDefinition/id/{id}": {
      "delete": {
        "description": "delete a customAttributeDefinition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "customAttributeDefinition delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customAttributeDefinition"
        ]
      },
      "get": {
        "description": "query customAttributeDefinition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customAttributeDefinition"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customAttributeDefinition"
        ]
      },
      "put": {
        "description": "update customAttributeDefinition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customAttributeDefinition"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "customAttributeDefinition update response",
            "schema": {
              "$ref": "#/definitions/customAttributeDefinition"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customAttributeDefinition"
        ]
      }
    },
    "/customAttributeDefinition/readOrder": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "entityType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "readOrder response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customAttributeDefinitionOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customAttributeDefinition"
        ]
      }
    },
    "/customAttributeDefinition/updateOrder": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "entityType": {
                  "enum": [
                    "article",
                    "articleSupplySource",
                    "batchNumber",
                    "blanketPurchaseOrder",
                    "blanketSalesOrder",
                    "campaign",
                    "competitor",
                    "contract",
                    "contractItem",
                    "crmEvent",
                    "customer",
                    "incomingGoods",
                    "incomingGoodsItem",
                    "opportunity",
                    "party",
                    "performanceRecord",
                    "performanceRecordItem",
                    "productionOrder",
                    "productionOrderItem",
                    "project",
                    "purchaseInvoice",
                    "purchaseInvoiceItem",
                    "purchaseOrder",
                    "purchaseOrderItem",
                    "purchaseOrderRequest",
                    "purchaseOrderRequestItem",
                    "purchaseRequisition",
                    "quotation",
                    "quotationItem",
                    "recurringInvoice",
                    "recurringInvoiceItem",
                    "salesInvoice",
                    "salesInvoiceItem",
                    "salesOrder",
                    "salesOrderItem",
                    "serialNumber",
                    "shipment",
                    "shipmentItem",
                    "storageLocation",
                    "storagePlace",
                    "supplier",
                    "task",
                    "ticket",
                    "timeRecord",
                    "transportationOrder",
                    "user",
                    "warehouse",
                    "warehouseStockMovement"
                  ],
                  "type": "string"
                },
                "order": {
                  "items": {
                    "$ref": "#/definitions/customAttributeDefinitionOrder"
                  },
                  "type": "array"
                }
              },
              "required": [
                "entityType",
                "order"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateOrder response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customAttributeDefinitionOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customAttributeDefinition"
        ]
      }
    },
    "/customer": {
      "get": {
        "description": "query customer",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "customer response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customer"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customer"
        ]
      },
      "post": {
        "description": "create a customer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "customer create response",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customer"
        ]
      }
    },
    "/customer/count": {
      "get": {
        "description": "count customer",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customer"
        ]
      }
    },
    "/customer/id/{id}": {
      "delete": {
        "description": "delete a customer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "customer delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customer"
        ]
      },
      "get": {
        "description": "query customer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customer"
        ]
      },
      "put": {
        "description": "update customer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "customer update response",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customer"
        ]
      }
    },
    "/customer/id/{id}/downloadImage": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadImage response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customer"
        ]
      }
    },
    "/customer/id/{id}/operationalFigures": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "operationalFigures response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/customerOperationalFigures"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customer"
        ]
      }
    },
    "/customer/id/{id}/uploadImage": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "uploadImage response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customer"
        ]
      }
    },
    "/customerCategory": {
      "get": {
        "description": "query customerCategory",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "customerCategory response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerCategory"
        ]
      },
      "post": {
        "description": "create a customerCategory",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "customerCategory create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerCategory"
        ]
      }
    },
    "/customerCategory/count": {
      "get": {
        "description": "count customerCategory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerCategory"
        ]
      }
    },
    "/customerCategory/id/{id}": {
      "delete": {
        "description": "delete a customerCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "customerCategory delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerCategory"
        ]
      },
      "get": {
        "description": "query customerCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerCategory"
        ]
      },
      "put": {
        "description": "update customerCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "customerCategory update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerCategory"
        ]
      }
    },
    "/customerLeadLossReason": {
      "get": {
        "description": "query customerLeadLossReason",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "customerLeadLossReason response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerLeadLossReason"
        ]
      },
      "post": {
        "description": "create a customerLeadLossReason",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "customerLeadLossReason create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerLeadLossReason"
        ]
      }
    },
    "/customerLeadLossReason/count": {
      "get": {
        "description": "count customerLeadLossReason",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerLeadLossReason"
        ]
      }
    },
    "/customerLeadLossReason/id/{id}": {
      "delete": {
        "description": "delete a customerLeadLossReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "customerLeadLossReason delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerLeadLossReason"
        ]
      },
      "get": {
        "description": "query customerLeadLossReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerLeadLossReason"
        ]
      },
      "put": {
        "description": "update customerLeadLossReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "customerLeadLossReason update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerLeadLossReason"
        ]
      }
    },
    "/customerTopic": {
      "get": {
        "description": "query customerTopic",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "customerTopic response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerTopic"
        ]
      },
      "post": {
        "description": "create a customerTopic",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "customerTopic create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerTopic"
        ]
      }
    },
    "/customerTopic/count": {
      "get": {
        "description": "count customerTopic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerTopic"
        ]
      }
    },
    "/customerTopic/id/{id}": {
      "delete": {
        "description": "delete a customerTopic",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "customerTopic delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerTopic"
        ]
      },
      "get": {
        "description": "query customerTopic",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerTopic"
        ]
      },
      "put": {
        "description": "update customerTopic",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "customerTopic update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customerTopic"
        ]
      }
    },
    "/customsTariffNumber": {
      "get": {
        "description": "query customsTariffNumber",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "customsTariffNumber response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customsTariffNumber"
        ]
      },
      "post": {
        "description": "create a customsTariffNumber",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "customsTariffNumber create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customsTariffNumber"
        ]
      }
    },
    "/customsTariffNumber/count": {
      "get": {
        "description": "count customsTariffNumber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customsTariffNumber"
        ]
      }
    },
    "/customsTariffNumber/id/{id}": {
      "delete": {
        "description": "delete a customsTariffNumber",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "customsTariffNumber delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customsTariffNumber"
        ]
      },
      "get": {
        "description": "query customsTariffNumber",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customsTariffNumber"
        ]
      },
      "put": {
        "description": "update customsTariffNumber",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "customsTariffNumber update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "customsTariffNumber"
        ]
      }
    },
    "/document": {
      "get": {
        "description": "query document",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "document response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/document"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/document/copy": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "sourceDocumentId": {
                  "type": "string"
                },
                "entityName": {
                  "type": "string"
                },
                "entityId": {
                  "type": "string"
                }
              },
              "required": [
                "sourceDocumentId",
                "entityName",
                "entityId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "copy response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/document"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/document/count": {
      "get": {
        "description": "count document",
        "parameters": [
          {
            "in": "query",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/document/id/{id}": {
      "delete": {
        "description": "delete a document",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "document delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      },
      "get": {
        "description": "query document",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/document"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      },
      "put": {
        "description": "update document",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/document"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "document update response",
            "schema": {
              "$ref": "#/definitions/document"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/document/id/{id}/copy": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "sourceDocumentId": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                }
              },
              "required": [
                "sourceDocumentId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "copy response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/document"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/document/id/{id}/download": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "download response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/document/id/{id}/downloadDocumentVersion": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "versionId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadDocumentVersion response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/document/id/{id}/downloadDocumentVersionsZipped": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filename",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadDocumentVersionsZipped response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/document/id/{id}/upload": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "comment",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "upload response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/document"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/document/upload": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "entityName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "upload response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/document"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/externalConnection": {
      "get": {
        "description": "query externalConnection",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "externalConnection response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/externalConnection"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "externalConnection"
        ]
      }
    },
    "/externalConnection/count": {
      "get": {
        "description": "count externalConnection",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "externalConnection"
        ]
      }
    },
    "/externalConnection/id/{id}": {
      "get": {
        "description": "query externalConnection",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/externalConnection"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "externalConnection"
        ]
      }
    },
    "/financialYear": {
      "get": {
        "description": "query financialYear",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "financialYear response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/financialYear"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "financialYear"
        ]
      },
      "post": {
        "description": "create a financialYear",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/financialYear"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "financialYear create response",
            "schema": {
              "$ref": "#/definitions/financialYear"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "financialYear"
        ]
      }
    },
    "/financialYear/count": {
      "get": {
        "description": "count financialYear",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "financialYear"
        ]
      }
    },
    "/financialYear/id/{id}": {
      "delete": {
        "description": "delete a financialYear",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "financialYear delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "financialYear"
        ]
      },
      "get": {
        "description": "query financialYear",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/financialYear"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "financialYear"
        ]
      },
      "put": {
        "description": "update financialYear",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/financialYear"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "financialYear update response",
            "schema": {
              "$ref": "#/definitions/financialYear"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "financialYear"
        ]
      }
    },
    "/financialYear/id/{id}/generatePeriods": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "generatePeriods response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/financialYear"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "financialYear"
        ]
      }
    },
    "/fulfillmentProvider": {
      "get": {
        "description": "query fulfillmentProvider",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "fulfillmentProvider response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/fulfillmentProvider"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "fulfillmentProvider"
        ]
      }
    },
    "/fulfillmentProvider/count": {
      "get": {
        "description": "count fulfillmentProvider",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "fulfillmentProvider"
        ]
      }
    },
    "/fulfillmentProvider/id/{id}": {
      "get": {
        "description": "query fulfillmentProvider",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/fulfillmentProvider"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "fulfillmentProvider"
        ]
      }
    },
    "/groupwareContact": {
      "get": {
        "description": "query groupwareContact",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "groupwareContact response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/groupwareContact"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "groupwareContact"
        ]
      },
      "post": {
        "description": "create a groupwareContact",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/groupwareContact"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "groupwareContact create response",
            "schema": {
              "$ref": "#/definitions/groupwareContact"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "groupwareContact"
        ]
      }
    },
    "/groupwareContact/count": {
      "get": {
        "description": "count groupwareContact",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "groupwareContact"
        ]
      }
    },
    "/groupwareContact/id/{id}": {
      "delete": {
        "description": "delete a groupwareContact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "groupwareContact delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "groupwareContact"
        ]
      },
      "get": {
        "description": "query groupwareContact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/groupwareContact"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "groupwareContact"
        ]
      },
      "put": {
        "description": "update groupwareContact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/groupwareContact"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "groupwareContact update response",
            "schema": {
              "$ref": "#/definitions/groupwareContact"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "groupwareContact"
        ]
      }
    },
    "/incomingGoods": {
      "get": {
        "description": "query incomingGoods",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "incomingGoods response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/incomingGoods"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      },
      "post": {
        "description": "create a incomingGoods",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/incomingGoods"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "incomingGoods create response",
            "schema": {
              "$ref": "#/definitions/incomingGoods"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/count": {
      "get": {
        "description": "count incomingGoods",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}": {
      "delete": {
        "description": "delete a incomingGoods",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "incomingGoods delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      },
      "get": {
        "description": "query incomingGoods",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/incomingGoods"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      },
      "put": {
        "description": "update incomingGoods",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/incomingGoods"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "incomingGoods update response",
            "schema": {
              "$ref": "#/definitions/incomingGoods"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/addPurchaseOrders": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "ids"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addPurchaseOrders response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/incomingGoods"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/createCompensationShipment": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCompensationShipment response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/shipment"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/createCreditNote": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCreditNote response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/createGenericLabel": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "articleId": {
                  "format": "int32",
                  "type": "integer"
                },
                "commonVariables": {
                  "type": "object"
                },
                "specificVariables": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "required": [
                "articleId",
                "commonVariables"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createGenericLabel response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/createLabel": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createLabel response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/createLabelForIncomingBookRecord": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "incomingBookRecordId": {
                  "type": "string"
                }
              },
              "required": [
                "incomingBookRecordId"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createLabelForIncomingBookRecord response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/createPurchaseInvoice": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPurchaseInvoice response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/createReturnLabels": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createReturnLabels response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/document"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/createSupplierReturn": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "supplierId": {
                  "type": "string"
                },
                "purchaseOrderId": {
                  "type": "string"
                }
              },
              "required": [
                "supplierId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createSupplierReturn response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/shipment"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/incomingBookings": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "incomingBookings response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/incomingBooking"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/incomingGoods/id/{id}/updateIncomingBookings": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "incomingBookings": {
                  "items": {
                    "$ref": "#/definitions/incomingBooking"
                  },
                  "type": "array"
                }
              },
              "required": [
                "incomingBookings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateIncomingBookings response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/incomingBooking"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "incomingGoods"
        ]
      }
    },
    "/internalTransportReference": {
      "get": {
        "description": "query internalTransportReference",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "internalTransportReference response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/internalTransportReference"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "internalTransportReference"
        ]
      },
      "post": {
        "description": "create a internalTransportReference",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/internalTransportReference"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "internalTransportReference create response",
            "schema": {
              "$ref": "#/definitions/internalTransportReference"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "internalTransportReference"
        ]
      }
    },
    "/internalTransportReference/count": {
      "get": {
        "description": "count internalTransportReference",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "internalTransportReference"
        ]
      }
    },
    "/internalTransportReference/id/{id}": {
      "delete": {
        "description": "delete a internalTransportReference",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "internalTransportReference delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "internalTransportReference"
        ]
      },
      "get": {
        "description": "query internalTransportReference",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/internalTransportReference"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "internalTransportReference"
        ]
      },
      "put": {
        "description": "update internalTransportReference",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/internalTransportReference"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "internalTransportReference update response",
            "schema": {
              "$ref": "#/definitions/internalTransportReference"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "internalTransportReference"
        ]
      }
    },
    "/internalTransportReference/id/{id}/createLabel": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createLabel response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "internalTransportReference"
        ]
      }
    },
    "/internalTransportReference/id/{id}/downloadLatestLabel": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestLabel response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "internalTransportReference"
        ]
      }
    },
    "/inventory": {
      "get": {
        "description": "query inventory",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "inventory response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/inventory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventory"
        ]
      },
      "post": {
        "description": "create a inventory",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventory"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "inventory create response",
            "schema": {
              "$ref": "#/definitions/inventory"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventory"
        ]
      }
    },
    "/inventory/count": {
      "get": {
        "description": "count inventory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventory"
        ]
      }
    },
    "/inventory/create": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "inventory": {
                  "$ref": "#/definitions/inventory"
                },
                "storagePlaceIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "createEmptyPositionsForEmptyLevels": {
                  "type": "boolean"
                },
                "placeForArticlePositionsId": {
                  "type": "string"
                },
                "dryRun": {
                  "type": "boolean"
                }
              },
              "required": [
                "inventory"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/inventory"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventory"
        ]
      }
    },
    "/inventory/id/{id}": {
      "get": {
        "description": "query inventory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/inventory"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventory"
        ]
      },
      "put": {
        "description": "update inventory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventory"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "inventory update response",
            "schema": {
              "$ref": "#/definitions/inventory"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventory"
        ]
      }
    },
    "/inventoryGroup": {
      "get": {
        "description": "query inventoryGroup",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "inventoryGroup response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/inventoryGroup"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryGroup"
        ]
      }
    },
    "/inventoryGroup/count": {
      "get": {
        "description": "count inventoryGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryGroup"
        ]
      }
    },
    "/inventoryGroup/id/{id}": {
      "get": {
        "description": "query inventoryGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/inventoryGroup"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryGroup"
        ]
      }
    },
    "/inventoryItem": {
      "get": {
        "description": "query inventoryItem",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "inventoryItem response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/inventoryItem"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryItem"
        ]
      },
      "post": {
        "description": "create a inventoryItem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryItem"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "inventoryItem create response",
            "schema": {
              "$ref": "#/definitions/inventoryItem"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryItem"
        ]
      }
    },
    "/inventoryItem/count": {
      "get": {
        "description": "count inventoryItem",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryItem"
        ]
      }
    },
    "/inventoryItem/id/{id}": {
      "delete": {
        "description": "delete a inventoryItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "inventoryItem delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryItem"
        ]
      },
      "get": {
        "description": "query inventoryItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/inventoryItem"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryItem"
        ]
      },
      "put": {
        "description": "update inventoryItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryItem"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "inventoryItem update response",
            "schema": {
              "$ref": "#/definitions/inventoryItem"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryItem"
        ]
      }
    },
    "/inventoryItem/massUpdate": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "inventoryItems": {
                  "items": {
                    "$ref": "#/definitions/inventoryItem"
                  },
                  "type": "array"
                },
                "dryRun": {
                  "type": "boolean"
                }
              },
              "required": [
                "inventoryItems"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "massUpdate response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/inventoryItem"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryItem"
        ]
      }
    },
    "/inventoryTransportReference": {
      "get": {
        "description": "query inventoryTransportReference",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "inventoryTransportReference response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/inventoryTransportReference"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryTransportReference"
        ]
      },
      "post": {
        "description": "create a inventoryTransportReference",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryTransportReference"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "inventoryTransportReference create response",
            "schema": {
              "$ref": "#/definitions/inventoryTransportReference"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryTransportReference"
        ]
      }
    },
    "/inventoryTransportReference/count": {
      "get": {
        "description": "count inventoryTransportReference",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryTransportReference"
        ]
      }
    },
    "/inventoryTransportReference/id/{id}": {
      "get": {
        "description": "query inventoryTransportReference",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/inventoryTransportReference"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryTransportReference"
        ]
      },
      "put": {
        "description": "update inventoryTransportReference",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryTransportReference"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "inventoryTransportReference update response",
            "schema": {
              "$ref": "#/definitions/inventoryTransportReference"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "inventoryTransportReference"
        ]
      }
    },
    "/job/abort": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "abort response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/jobResult"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "job"
        ]
      }
    },
    "/job/logEntries": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "items": {
              "enum": [
                "ACCOUNTING_DATASTRUCTURE_MIGRATION",
                "ACCOUNTING_EXPORT",
                "ACCOUNT_BALANCES_TRANSFER",
                "ADAPT_SALES_STAGES",
                "AMAZON_ARTICLE_WECLAPP_ARTICLE_FBA_SYNC",
                "AMAZON_ARTICLE_WECLAPP_ARTICLE_SYNC",
                "AMAZON_CREATE_REPORTS",
                "AMAZON_INVOICE_UPLOAD",
                "AMAZON_REPORT_SALES_ORDER_FBA_SYNC",
                "AMAZON_REPORT_SALES_ORDER_SYNC",
                "AMAZON_SETTLEMENT_WECLAPP_SYNC",
                "AMAZON_WECLAPP_ARTICLE_FBA_SYNC",
                "AMAZON_WECLAPP_ARTICLE_SYNC",
                "AMAZON_WECLAPP_REPORT_FBA_SYNC",
                "AMAZON_WECLAPP_REPORT_SYNC",
                "AMAZON_WECLAPP_SETTLEMENT_SYNC",
                "ARTICLE_DELETION",
                "ARTICLE_KEY_FIGURES_EXPORT",
                "ARTICLE_PRICE_TO_AMAZON_REPORT_SYNC",
                "BREVO_CAMPAIGN_PARTICIPANT_EXPORT",
                "BREVO_CONTACT_EXPORT",
                "BREVO_CONTACT_IMPORT",
                "BREVO_CUSTOMER_EXPORT",
                "BREVO_LEAD_EXPORT",
                "CAMPAIGN_EMAIL_SENDING",
                "CLEVER_REACH_CAMPAIGN_PARTICIPANT_EXPORT",
                "CLEVER_REACH_CONTACT_EXPORT",
                "CLEVER_REACH_CONTACT_IMPORT",
                "CLEVER_REACH_CUSTOMER_EXPORT",
                "CLEVER_REACH_LEAD_EXPORT",
                "COMMISSION_RUN",
                "CONTRACT_BILLING",
                "DATEV_BBS_TRANSMISSION",
                "DATEV_BDS_TRANSMISSION",
                "DATEV_RDS_TRANSMISSION",
                "EBAY_WECLAPP_DELETION_REQUEST_SYNC",
                "EBAY_WECLAPP_LISTING_SYNC",
                "EBAY_WECLAPP_ORDER_SYNC",
                "EBAY_WECLAPP_PAYMENT_SYNC",
                "EBAY_WECLAPP_SELLER_PROFILE_SYNC",
                "ERIC_CREATE_ACCOUNT_SHEET",
                "FATTURAPA_IMPORT",
                "FATTURAPA_SALES_INVOICE_XML_CREATION",
                "GROUPWARE_CONTACT_CREATION",
                "IMPORT_VCARD",
                "INVENTORY_BOOKING",
                "INVENTORY_VALUATION",
                "INVENTORY_VALUTATION_EXPORT",
                "ITSCOPE_ARTICLE_PRICE_UPDATE",
                "ITSCOPE_WECLAPP_ARTICLE_SYNC",
                "ITSCOPE_WECLAPP_PURCHASE_ORDER_SYNC",
                "ITSCOPE_WECLAPP_SALES_ORDER_SYNC",
                "IT_SCOPE_QUOTATION_SYNC",
                "KAUFLAND_ARTICLE_UPLOAD_CHECK_SYNC",
                "KAUFLAND_INVOICE_UPLOAD",
                "KAUFLAND_WECLAPP_ARTICLE_SYNC",
                "KAUFLAND_WECLAPP_ORDER_SYNC",
                "LISTING_TO_EBAY_UPDATE_SYNC",
                "MAGENTO2_WECLAPP_ARTICLE_SYNC",
                "MAGENTO2_WECLAPP_CUSTOMER_SYNC",
                "MAGENTO2_WECLAPP_ORDER_SYNC",
                "MAGENTO_WECLAPP_ARTICLE_SYNC",
                "MAGENTO_WECLAPP_CUSTOMER_SYNC",
                "MAGENTO_WECLAPP_ORDER_SYNC",
                "MAIL_CHIMP_CAMPAIGN_PARTICIPANT_EXPORT",
                "MAIL_CHIMP_CONTACT_EXPORT",
                "MAIL_CHIMP_CONTACT_IMPORT",
                "MAIL_CHIMP_CUSTOMER_EXPORT",
                "MAIL_CHIMP_LEAD_EXPORT",
                "MAIL_TO_INVOICE_IMPORT",
                "MASS_ACCOUNTING_TRANSACTION_DELETE",
                "MASS_ACCOUNTING_TRANSACTION_UPDATE",
                "MASS_ADVANCE_PAYMENT_INVOICE_COMPLETE_WORKFLOW",
                "MASS_ADVANCE_PAYMENT_INVOICE_CREATION",
                "MASS_AMAZON_SHIPMENT_CREATION",
                "MASS_ARTICLE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_ARTICLE_PRINT_DATASHEET",
                "MASS_ARTICLE_SUPPLY_SOURCE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_ARTICLE_SUPPLY_SOURCE_DELETION",
                "MASS_ARTICLE_SUPPLY_SOURCE_UPDATE",
                "MASS_ARTICLE_UPDATE",
                "MASS_BILL_OF_MATERIAL_ITEM_UPDATE",
                "MASS_BLANKET_PURCHASE_ORDER_CANCEL",
                "MASS_BLANKET_PURCHASE_ORDER_COMPLETE",
                "MASS_BLANKET_PURCHASE_ORDER_CONFIRM_BY_SUPPLIER",
                "MASS_BLANKET_PURCHASE_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_BLANKET_PURCHASE_ORDER_DELETION",
                "MASS_BLANKET_PURCHASE_ORDER_PRINT",
                "MASS_BLANKET_PURCHASE_ORDER_REOPEN",
                "MASS_BLANKET_PURCHASE_ORDER_SEND_EMAIL",
                "MASS_BLANKET_PURCHASE_ORDER_UPDATE",
                "MASS_BLANKET_PURCHASE_ORDER_UPDATE_FORM_TEXTS",
                "MASS_BUSINESS_TIMES_DAY_OFF_DELETE",
                "MASS_CAMPAIGN_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_CAMPAIGN_PARTICIPANTS_UPDATE",
                "MASS_CAMPAIGN_UPDATE",
                "MASS_CANCELLATION_SEND_EMAIL",
                "MASS_CANCEL_TRANSPORTATION_ORDER",
                "MASS_CLEAR_OPEN_ITEM",
                "MASS_CLOSE_SUPPLIER_ORDER",
                "MASS_COMPLETE_WORKFLOW_TRANSPORTATION_ORDER",
                "MASS_CONTRACT_CHARGE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_CONTRACT_CHARGE_UPDATE",
                "MASS_CONTRACT_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_CONTRACT_DELETION",
                "MASS_CONTRACT_PRINT_DOCUMENT",
                "MASS_CONTRACT_SEND_EMAIL",
                "MASS_CONTRACT_UPDATE",
                "MASS_CONTRACT_UPDATE_FORM_TEXTS",
                "MASS_CREATE_DROPSHIPPING_ORDER",
                "MASS_CREATE_SALES_ORDER_COMMISSION",
                "MASS_CREATE_TRANSPORTATION_ORDER_FROM_PICKING_BOOKS",
                "MASS_CREDIT_NOTE_COMPLETE_WORKFLOW",
                "MASS_CRM_EVENT_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_CRM_EVENT_DELETION",
                "MASS_CRM_EVENT_UPDATE",
                "MASS_CUSTOMER_RETURN_DELETE",
                "MASS_DELETE_PICKING_BOOK_RECORD",
                "MASS_DELETION_TRANSPORTATION_ORDER",
                "MASS_DELIVERY_NOTE_SEND_EMAIL",
                "MASS_DOWNLOAD_BANK_TRANSACTION",
                "MASS_DUNNING_RUN_PROCESS_PROPOSALS",
                "MASS_DUNNING_RUN_SEND_EMAIL_DETAIL",
                "MASS_DUNNING_RUN_SEND_EMAIL_OVERVIEW",
                "MASS_EBAY_LISTINGS_DELETE",
                "MASS_EBAY_LISTING_UPDATE",
                "MASS_INTERNAL_TRANSPORT_REFERENCE_DELETION",
                "MASS_INTERNAL_TRANSPORT_REFERENCE_UPDATE",
                "MASS_INVOICE_BOOK",
                "MASS_INVOICE_CHECK",
                "MASS_INVOICE_COMPLETE_ENTRY",
                "MASS_INVOICE_COMPLETE_WORKFLOW",
                "MASS_INVOICE_CREATE_OPEN_ITEMS",
                "MASS_INVOICE_DOCUMENT_CREATION",
                "MASS_INVOICE_SEND_EMAIL",
                "MASS_INVOICE_VERIFIED",
                "MASS_IT_SCOPE_ARTICLE_CREATION",
                "MASS_IT_SCOPE_ORDER_SYNC",
                "MASS_LEDGER_ACCOUNT_UPDATE",
                "MASS_OFFER_ACCEPT",
                "MASS_OFFER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_OFFER_DELETE",
                "MASS_OFFER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_OFFER_ITEM_UPDATE",
                "MASS_OFFER_PRINT_DOCUMENT",
                "MASS_OFFER_RECALCULATE_COSTS",
                "MASS_OFFER_REJECT",
                "MASS_OFFER_RESET_TAXES",
                "MASS_OFFER_SEND_EMAIL",
                "MASS_OFFER_UPDATE",
                "MASS_OFFER_UPDATE_FORM_TEXTS",
                "MASS_OPPORTUNITY_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_OPPORTUNITY_DELETION",
                "MASS_OPPORTUNITY_UPDATE",
                "MASS_ORDER_CANCEL",
                "MASS_ORDER_CLOSE",
                "MASS_ORDER_CONFIRMATION_CREATION",
                "MASS_ORDER_DELETE",
                "MASS_ORDER_RECALCULATE_COSTS",
                "MASS_ORDER_REOPEN",
                "MASS_ORDER_RESET_TAXES",
                "MASS_ORDER_SHIPPING_LABEL_CREATION",
                "MASS_ORDER_SHIPPING_RETURN_LABEL_CREATION",
                "MASS_ORDER_UPDATE",
                "MASS_ORDER_UPDATE_FORM_TEXTS",
                "MASS_PARTY_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PARTY_DELETION",
                "MASS_PARTY_MERGE",
                "MASS_PARTY_SET_PRIMARY_CONTACT",
                "MASS_PARTY_UPDATE",
                "MASS_PART_PAYMENT_INVOICE_COMPLETE_WORKFLOW",
                "MASS_PART_PAYMENT_INVOICE_CREATION",
                "MASS_PAYMENT_RUN_PROCESS_PROPOSALS",
                "MASS_PERFORMANCE_RECORD_COMPLETE_WORKFLOW_FOR_SALES_ORDER",
                "MASS_PERFORMANCE_RECORD_CREATE_DOCUMENTS",
                "MASS_PERFORMANCE_RECORD_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PERFORMANCE_RECORD_DELETE",
                "MASS_PERFORMANCE_RECORD_INVOICING",
                "MASS_PERFORMANCE_RECORD_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PERFORMANCE_RECORD_RECORDING",
                "MASS_PERFORMANCE_RECORD_SEND_EMAIL",
                "MASS_PERFORMANCE_RECORD_UPDATE",
                "MASS_PERFORMANCE_RECORD_UPDATE_FORM_TEXTS",
                "MASS_PICKING_LIST_CREATION",
                "MASS_PM_REQUIREMENT_ITEM_UPDATE",
                "MASS_PREPAYMENT_INVOICE_CREATION",
                "MASS_PREPAYMENT_INVOICE_WORKFLOW",
                "MASS_PRINT_DROPSHIPPING_ORDER_DELIVERY_NOTE",
                "MASS_PRINT_PRODUCTION_ORDER",
                "MASS_PRINT_PURCHASE_ORDER_DOCUMENTS",
                "MASS_PRINT_RETURNS_PICKUP_NOTE",
                "MASS_PRINT_RETURNS_RETURN_NOTE",
                "MASS_PRINT_RETURN_DELIVERY_NOTE",
                "MASS_PROCESS_DROPSHIPPING_ORDER",
                "MASS_PRODUCTION_ORDER_CANCELLATION",
                "MASS_PRODUCTION_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PRODUCTION_ORDER_DELETION",
                "MASS_PRODUCTION_ORDER_ITEM_ARTICLE_EXCHANGE",
                "MASS_PRODUCTION_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PRODUCTION_ORDER_MATERIAL_ITEMS_UPDATE",
                "MASS_PRODUCTION_ORDER_PICKING_LIST_CREATION",
                "MASS_PRODUCTION_ORDER_REOPEN",
                "MASS_PRODUCTION_ORDER_UPDATE",
                "MASS_PRODUCTION_ORDER_UPDATE_FORM_TEXTS",
                "MASS_PROJECT_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PROJECT_UPDATE",
                "MASS_PURCHASE_CREDIT_NOTE_COMPLETE_WORKFLOW",
                "MASS_PURCHASE_INVOICE_BACK_TO_ENTRY",
                "MASS_PURCHASE_INVOICE_BOOK_ACCOUNTING",
                "MASS_PURCHASE_INVOICE_CANCEL",
                "MASS_PURCHASE_INVOICE_COMPLETE_WORKFLOW",
                "MASS_PURCHASE_INVOICE_CREATE_CREDIT_NOTE",
                "MASS_PURCHASE_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PURCHASE_INVOICE_DELETE",
                "MASS_PURCHASE_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PURCHASE_INVOICE_ITEM_UPDATE",
                "MASS_PURCHASE_INVOICE_RESET_TAXES",
                "MASS_PURCHASE_INVOICE_SHIPPING_COST_ITEM_UPDATE",
                "MASS_PURCHASE_INVOICE_UPDATE",
                "MASS_PURCHASE_ORDER_CANCEL",
                "MASS_PURCHASE_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PURCHASE_ORDER_DELETION",
                "MASS_PURCHASE_ORDER_INVOICE_COMPLETE_WORKFLOW",
                "MASS_PURCHASE_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PURCHASE_ORDER_ITEM_UPDATE",
                "MASS_PURCHASE_ORDER_REOPEN",
                "MASS_PURCHASE_ORDER_SEND_EMAIL",
                "MASS_PURCHASE_ORDER_UPDATE",
                "MASS_PURCHASE_ORDER_UPDATE_FORM_TEXTS",
                "MASS_PURCHASE_REQUEST_CANCEL",
                "MASS_PURCHASE_REQUEST_CLOSE",
                "MASS_PURCHASE_REQUEST_CREATE_DOCUMENTS",
                "MASS_PURCHASE_REQUEST_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PURCHASE_REQUEST_DELETION",
                "MASS_PURCHASE_REQUEST_REOPEN",
                "MASS_PURCHASE_REQUEST_SEND_EMAIL",
                "MASS_PURCHASE_REQUEST_UPDATE",
                "MASS_PURCHASE_REQUEST_UPDATE_FORM_TEXTS",
                "MASS_RECORD_ADDRESS_FROM_CRM_UPDATE",
                "MASS_RECORD_EMAIL_ADDRESS_FROM_CRM_UPDATE",
                "MASS_RECURRING_CREATE_INVOICE",
                "MASS_RECURRING_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_RECURRING_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_RECURRING_INVOICE_ITEM_UPDATE",
                "MASS_RECURRING_INVOICE_UPDATE",
                "MASS_RECURRING_INVOICE_UPDATE_FORM_TEXTS",
                "MASS_RECURRING_RECALCULATION_COST",
                "MASS_REGION_UPDATE",
                "MASS_REMINDER_DELETION",
                "MASS_REMINDER_UPDATE",
                "MASS_RESET_CLEAR_OPEN_ITEM",
                "MASS_SALES_BILL_OF_MATERIAL_ITEM_UPDATE",
                "MASS_SALES_INVOICE_BACK_TO_ENTRY",
                "MASS_SALES_INVOICE_BOOK_ACCOUNTING",
                "MASS_SALES_INVOICE_CANCEL",
                "MASS_SALES_INVOICE_CREATE_CREDIT_NOTE",
                "MASS_SALES_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SALES_INVOICE_DELETE",
                "MASS_SALES_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SALES_INVOICE_ITEM_UPDATE",
                "MASS_SALES_INVOICE_RECALCULATE_COSTS",
                "MASS_SALES_INVOICE_RESET_TAXES",
                "MASS_SALES_INVOICE_SHIPPING_COST_ITEM_UPDATE",
                "MASS_SALES_INVOICE_UPDATE",
                "MASS_SALES_INVOICE_UPDATE_FORM_TEXTS",
                "MASS_SALES_ORDER_CASH_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SALES_ORDER_COMPLETE_WORKFLOW",
                "MASS_SALES_ORDER_CREATE_PERFORMANCE_RECORD",
                "MASS_SALES_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SALES_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SALES_ORDER_ITEM_UPDATE",
                "MASS_SALES_ORDER_SEND_EMAIL",
                "MASS_SALES_PRICE_ADD_SPECIAL_PRICE",
                "MASS_SALES_PRICE_DELETION",
                "MASS_SAVE_ORDER_CONFIRMED",
                "MASS_SEPA_MAIN_BANK_UPDATE",
                "MASS_SERIALNUMBER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SET_ORDERS_SHIPPED",
                "MASS_SHIPMENT_ARRIVAL_CANCEL",
                "MASS_SHIPMENT_ARRIVAL_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SHIPMENT_ARRIVAL_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SHIPMENT_COMPLETE_WORKFLOW",
                "MASS_SHIPMENT_COMPLETE_WORKFLOW_FOR_SALES_ORDER",
                "MASS_SHIPMENT_CREATION",
                "MASS_SHIPMENT_INCOMING_DELETE",
                "MASS_SHIPMENT_INCOMING_REOPEN",
                "MASS_SHIPMENT_INCOMING_UPDATE",
                "MASS_SHIPMENT_INCOMING_UPDATE_FORM_TEXTS",
                "MASS_SHIPMENT_INVOICE_CREATION",
                "MASS_SHIPMENT_OUTGOING_BACK_TO_ENTRY",
                "MASS_SHIPMENT_OUTGOING_CANCEL",
                "MASS_SHIPMENT_OUTGOING_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SHIPMENT_OUTGOING_DELETE",
                "MASS_SHIPMENT_OUTGOING_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SHIPMENT_OUTGOING_RETURN_LABEL_CREATION",
                "MASS_SHIPMENT_OUTGOING_UPDATE",
                "MASS_SHIPMENT_OUTGOING_UPDATE_FORM_TEXTS",
                "MASS_SHIPPING_CARRIER_UPDATE",
                "MASS_SHIPPING_CONFIRMATION_OF_ARRIVAL_CREATION",
                "MASS_SHIPPING_CONFIRMATION_OF_ARRIVAL_SEND_EMAIL",
                "MASS_SHIPPING_LABEL_CREATION",
                "MASS_SHIPPING_NOTE_CREATION",
                "MASS_SHIPPING_RETURN_LABEL_CREATION",
                "MASS_SHIP_IN",
                "MASS_SHIP_OUT",
                "MASS_STANDARD_INVOICE_CREATION",
                "MASS_STANDARD_INVOICE_WORKFLOW",
                "MASS_START_PRODUCTION_ORDER",
                "MASS_STOCK_BATCH_NUMBER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_STORAGE_PLACE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_STORAGE_PLACE_DELETE",
                "MASS_STORAGE_PLACE_UPDATE",
                "MASS_SUPPLIER_PRICE_DELETION",
                "MASS_SUPPLIER_RETURN_DELETE",
                "MASS_TAG_DELETE",
                "MASS_TASK_BILLING_DATA_UPDATE",
                "MASS_TASK_CREATE_PERFORMANCE_RECORD",
                "MASS_TASK_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
                "MASS_TASK_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_TASK_DELETION",
                "MASS_TASK_UPDATE",
                "MASS_TAX_DELETE",
                "MASS_TAX_RESET",
                "MASS_TEAMVIEWER_DOWNLOAD_TIME_ENTRIES",
                "MASS_TICKET_CATEGORY_UPDATE",
                "MASS_TICKET_CREATE_PERFORMANCE_RECORD",
                "MASS_TICKET_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
                "MASS_TICKET_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_TICKET_DELETE",
                "MASS_TICKET_FAQ_COPY",
                "MASS_TICKET_FAQ_UPDATE",
                "MASS_TICKET_LINK_TO_SALES_ORDER",
                "MASS_TICKET_MERGE",
                "MASS_TICKET_SLA_RECALCULATE",
                "MASS_TICKET_STATUS_UPDATE",
                "MASS_TICKET_UPDATE",
                "MASS_TIME_RECORD_CREATE_PERFORMANCE_RECORD",
                "MASS_TIME_RECORD_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
                "MASS_TIME_RECORD_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_TIME_RECORD_MOVE",
                "MASS_TIME_RECORD_UPDATE",
                "MASS_TRANSACTION_BOOKING",
                "MASS_TRANSACTION_CLEARING",
                "MASS_TRANSACTION_DELETE",
                "MASS_TRANSACTION_PROCESSING",
                "MASS_TRANSACTION_REMOVE_PAYMENTAPPLICATIONS",
                "MASS_TRANSACTION_RESET_IGNORE",
                "MASS_TRANSACTION_SET_IGNORE",
                "MASS_TRANSPORTATION_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_TRANSPORTATION_ORDER_PICKING_LIST_CREATION",
                "MASS_UPDATE_CONTRACT_PRICES",
                "MASS_UPDATE_OFFER_PRICES",
                "MASS_UPDATE_RECURRING_INVOICE_PRICES",
                "MASS_UPDATE_SALES_INVOICE_PRICES",
                "MASS_UPDATE_SALES_ORDER_PRICES",
                "MASS_VARIANT_ARTICLE_DELETION",
                "MATERIAL_PLANNING_RUN",
                "OFFER_EXPORT",
                "OTTO_ARTICLE_UPLOAD_CHECK_SYNC",
                "OTTO_WECLAPP_ARTICLE_SYNC",
                "OTTO_WECLAPP_CREDIT_NOTE_SYNC",
                "OTTO_WECLAPP_INVOICE_SYNC",
                "OTTO_WECLAPP_ORDER_SYNC",
                "PRESTA_WECLAPP_ARTICLE_SYNC",
                "PRESTA_WECLAPP_CUSTOMER_SYNC",
                "PRESTA_WECLAPP_ORDER_SYNC",
                "PRICE_CALCULATION_ARTICLE",
                "PURCHASE_INVOICE_EXPORT",
                "PURCHASE_INVOICE_SHIPPING_COST_EXPORT",
                "PURCHASE_ORDER_EXPORT",
                "PURCHASE_ORDER_REQUEST_SEND_EMAIL",
                "RECEIVED_INVOICE_IMPORT",
                "RECURRING_INVOICE_INVOICE_CREATION",
                "RESET_ACCOUNTING",
                "RESET_BUSINESS_TRANSACTIONS",
                "SALES_INVOICE_EXPORT",
                "SALES_INVOICE_SHIPPING_COST_ITEMS_EXPORT",
                "SALES_INVOICE_XRECHNUNG_EXPORT",
                "SALES_ORDER_EXPORT",
                "SHIPMENTIN_EXPORT",
                "SHIPMENTOUT_EXPORT",
                "SHOPIFY_WECLAPP_ARTICLE_SYNC",
                "SHOPIFY_WECLAPP_CUSTOMER_SYNC",
                "SHOPIFY_WECLAPP_ORDER_SYNC",
                "SHOPIFY_WECLAPP_PAYMENT_SYNC",
                "SHOPWARE6_WECLAPP_ARTICLE_SYNC",
                "SHOPWARE6_WECLAPP_CUSTOMER_SYNC",
                "SHOPWARE6_WECLAPP_ORDER_SYNC",
                "SHOPWARE_WECLAPP_ARTICLE_SYNC",
                "SHOPWARE_WECLAPP_CUSTOMER_SYNC",
                "SHOPWARE_WECLAPP_ORDER_SYNC",
                "SYNAXON_WECLAPP_ARTICLE_UPDATE",
                "TRANSUS_SALES_INVOICE_XML_CREATION",
                "TRANSUS_SHIPMENT_XML_CREATION",
                "TRANSUS_WECLAPP_ORDER_SYNC",
                "WECLAPP_AMAZON_OUTBOUND_SHIPMENT_SYNC",
                "WECLAPP_AMAZON_STOCK_SYNC",
                "WECLAPP_EBAY_LISTING_STOCK_SYNC",
                "WECLAPP_EBAY_ORDER_SYNC",
                "WECLAPP_ITSCOPE_ARTICLE_PRICE_UPDATE",
                "WECLAPP_ITSCOPE_ORDER_SYNC",
                "WECLAPP_KAUFLAND_ARTICLE_SYNC",
                "WECLAPP_KAUFLAND_ORDER_SYNC",
                "WECLAPP_KAUFLAND_STOCK_SYNC",
                "WECLAPP_MAGENTO2_ARTICLE_SYNC",
                "WECLAPP_MAGENTO2_ORDER_SYNC",
                "WECLAPP_MAGENTO2_STOCK_SYNC",
                "WECLAPP_MAGENTO_ARTICLE_SYNC",
                "WECLAPP_MAGENTO_ORDER_SYNC",
                "WECLAPP_MAGENTO_STOCK_SYNC",
                "WECLAPP_OTTO_ARTICLE_SYNC",
                "WECLAPP_OTTO_ORDER_SYNC",
                "WECLAPP_OTTO_STOCK_SYNC",
                "WECLAPP_PRESTA_ARTICLE_SYNC",
                "WECLAPP_PRESTA_CUSTOMER_SYNC",
                "WECLAPP_PRESTA_ORDER_SYNC",
                "WECLAPP_PRESTA_STOCK_SYNC",
                "WECLAPP_SALES_ORDER_AMAZON_REPORT_SYNC",
                "WECLAPP_SHOPIFY_ARTICLE_SYNC",
                "WECLAPP_SHOPIFY_ORDER_SYNC",
                "WECLAPP_SHOPIFY_STOCK_SYNC",
                "WECLAPP_SHOPWARE6_ARTICLE_SYNC",
                "WECLAPP_SHOPWARE6_ORDER_SYNC",
                "WECLAPP_SHOPWARE6_STOCK_SYNC",
                "WECLAPP_SHOPWARE_ARTICLE_SYNC",
                "WECLAPP_SHOPWARE_CUSTOMER_SYNC",
                "WECLAPP_SHOPWARE_ORDER_SYNC",
                "WECLAPP_SHOPWARE_STOCK_SYNC",
                "WECLAPP_TO_AMAZON_ARTICLE_REPORT_SYNC",
                "WECLAPP_TO_AMAZON_REPORT_SYNC",
                "WECLAPP_TO_SHOPIFY_CUSTOMER_SYNC",
                "WECLAPP_TO_SHOPWARE6_CUSTOMER_SYNC",
                "WECLAPP_TO_WECLAPP_ARTICLE_PUSH",
                "WECLAPP_TO_WECLAPP_CUSTOM_ATTRIBUTES_PULL",
                "WECLAPP_TO_WECLAPP_DELETION",
                "WECLAPP_TO_WECLAPP_OFFER_PULL",
                "WECLAPP_TO_WECLAPP_OTHER_DATA_PUSH",
                "WECLAPP_TO_WECLAPP_PARTY_PULL",
                "WECLAPP_TO_WECLAPP_PARTY_PUSH",
                "WECLAPP_TO_WECLAPP_PURCHASE_ORDERS_AS_SALES_ORDERS_PULL",
                "WECLAPP_TO_WECLAPP_PURCHASE_ORDER_PUSH",
                "WECLAPP_TO_WECLAPP_SALES_ORDER_PULL",
                "WECLAPP_TO_WECLAPP_STORE_PUSH",
                "WECLAPP_TO_WECLAPP_SUPPLIER_STOCK_SYNC",
                "WECLAPP_TO_WECLAPP_TICKET_PULL",
                "WECLAPP_TO_WECLAPP_USER_PULL",
                "WECLAPP_WOOCOMMERCE_ARTICLE_SYNC",
                "WECLAPP_WOOCOMMERCE_ORDER_SYNC",
                "WECLAPP_WOOCOMMERCE_STOCK_SYNC",
                "WOOCOMMERCE_WECLAPP_ARTICLE_SYNC",
                "WOOCOMMERCE_WECLAPP_CUSTOMER_SYNC",
                "WOOCOMMERCE_WECLAPP_ORDER_SYNC",
                "XT_WECLAPP_ARTICLE_SYNC",
                "XT_WECLAPP_ORDER_SYNC"
              ],
              "type": "string"
            },
            "name": "jobTypes",
            "required": false,
            "type": "array"
          },
          {
            "format": "timestamp",
            "in": "query",
            "name": "createdDateFrom",
            "required": false,
            "type": "integer"
          },
          {
            "format": "timestamp",
            "in": "query",
            "name": "createdDateTo",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "detail",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "severity",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "title",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "userId",
            "required": false,
            "type": "array"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "logEntries response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/jobLogEntry"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "job"
        ]
      }
    },
    "/job/status": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "status response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/jobResult"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "job"
        ]
      }
    },
    "/job/statuses": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "items": {
              "enum": [
                "ACCOUNTING_DATASTRUCTURE_MIGRATION",
                "ACCOUNTING_EXPORT",
                "ACCOUNT_BALANCES_TRANSFER",
                "ADAPT_SALES_STAGES",
                "AMAZON_ARTICLE_WECLAPP_ARTICLE_FBA_SYNC",
                "AMAZON_ARTICLE_WECLAPP_ARTICLE_SYNC",
                "AMAZON_CREATE_REPORTS",
                "AMAZON_INVOICE_UPLOAD",
                "AMAZON_REPORT_SALES_ORDER_FBA_SYNC",
                "AMAZON_REPORT_SALES_ORDER_SYNC",
                "AMAZON_SETTLEMENT_WECLAPP_SYNC",
                "AMAZON_WECLAPP_ARTICLE_FBA_SYNC",
                "AMAZON_WECLAPP_ARTICLE_SYNC",
                "AMAZON_WECLAPP_REPORT_FBA_SYNC",
                "AMAZON_WECLAPP_REPORT_SYNC",
                "AMAZON_WECLAPP_SETTLEMENT_SYNC",
                "ARTICLE_DELETION",
                "ARTICLE_KEY_FIGURES_EXPORT",
                "ARTICLE_PRICE_TO_AMAZON_REPORT_SYNC",
                "BREVO_CAMPAIGN_PARTICIPANT_EXPORT",
                "BREVO_CONTACT_EXPORT",
                "BREVO_CONTACT_IMPORT",
                "BREVO_CUSTOMER_EXPORT",
                "BREVO_LEAD_EXPORT",
                "CAMPAIGN_EMAIL_SENDING",
                "CLEVER_REACH_CAMPAIGN_PARTICIPANT_EXPORT",
                "CLEVER_REACH_CONTACT_EXPORT",
                "CLEVER_REACH_CONTACT_IMPORT",
                "CLEVER_REACH_CUSTOMER_EXPORT",
                "CLEVER_REACH_LEAD_EXPORT",
                "COMMISSION_RUN",
                "CONTRACT_BILLING",
                "DATEV_BBS_TRANSMISSION",
                "DATEV_BDS_TRANSMISSION",
                "DATEV_RDS_TRANSMISSION",
                "EBAY_WECLAPP_DELETION_REQUEST_SYNC",
                "EBAY_WECLAPP_LISTING_SYNC",
                "EBAY_WECLAPP_ORDER_SYNC",
                "EBAY_WECLAPP_PAYMENT_SYNC",
                "EBAY_WECLAPP_SELLER_PROFILE_SYNC",
                "ERIC_CREATE_ACCOUNT_SHEET",
                "FATTURAPA_IMPORT",
                "FATTURAPA_SALES_INVOICE_XML_CREATION",
                "GROUPWARE_CONTACT_CREATION",
                "IMPORT_VCARD",
                "INVENTORY_BOOKING",
                "INVENTORY_VALUATION",
                "INVENTORY_VALUTATION_EXPORT",
                "ITSCOPE_ARTICLE_PRICE_UPDATE",
                "ITSCOPE_WECLAPP_ARTICLE_SYNC",
                "ITSCOPE_WECLAPP_PURCHASE_ORDER_SYNC",
                "ITSCOPE_WECLAPP_SALES_ORDER_SYNC",
                "IT_SCOPE_QUOTATION_SYNC",
                "KAUFLAND_ARTICLE_UPLOAD_CHECK_SYNC",
                "KAUFLAND_INVOICE_UPLOAD",
                "KAUFLAND_WECLAPP_ARTICLE_SYNC",
                "KAUFLAND_WECLAPP_ORDER_SYNC",
                "LISTING_TO_EBAY_UPDATE_SYNC",
                "MAGENTO2_WECLAPP_ARTICLE_SYNC",
                "MAGENTO2_WECLAPP_CUSTOMER_SYNC",
                "MAGENTO2_WECLAPP_ORDER_SYNC",
                "MAGENTO_WECLAPP_ARTICLE_SYNC",
                "MAGENTO_WECLAPP_CUSTOMER_SYNC",
                "MAGENTO_WECLAPP_ORDER_SYNC",
                "MAIL_CHIMP_CAMPAIGN_PARTICIPANT_EXPORT",
                "MAIL_CHIMP_CONTACT_EXPORT",
                "MAIL_CHIMP_CONTACT_IMPORT",
                "MAIL_CHIMP_CUSTOMER_EXPORT",
                "MAIL_CHIMP_LEAD_EXPORT",
                "MAIL_TO_INVOICE_IMPORT",
                "MASS_ACCOUNTING_TRANSACTION_DELETE",
                "MASS_ACCOUNTING_TRANSACTION_UPDATE",
                "MASS_ADVANCE_PAYMENT_INVOICE_COMPLETE_WORKFLOW",
                "MASS_ADVANCE_PAYMENT_INVOICE_CREATION",
                "MASS_AMAZON_SHIPMENT_CREATION",
                "MASS_ARTICLE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_ARTICLE_PRINT_DATASHEET",
                "MASS_ARTICLE_SUPPLY_SOURCE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_ARTICLE_SUPPLY_SOURCE_DELETION",
                "MASS_ARTICLE_SUPPLY_SOURCE_UPDATE",
                "MASS_ARTICLE_UPDATE",
                "MASS_BILL_OF_MATERIAL_ITEM_UPDATE",
                "MASS_BLANKET_PURCHASE_ORDER_CANCEL",
                "MASS_BLANKET_PURCHASE_ORDER_COMPLETE",
                "MASS_BLANKET_PURCHASE_ORDER_CONFIRM_BY_SUPPLIER",
                "MASS_BLANKET_PURCHASE_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_BLANKET_PURCHASE_ORDER_DELETION",
                "MASS_BLANKET_PURCHASE_ORDER_PRINT",
                "MASS_BLANKET_PURCHASE_ORDER_REOPEN",
                "MASS_BLANKET_PURCHASE_ORDER_SEND_EMAIL",
                "MASS_BLANKET_PURCHASE_ORDER_UPDATE",
                "MASS_BLANKET_PURCHASE_ORDER_UPDATE_FORM_TEXTS",
                "MASS_BUSINESS_TIMES_DAY_OFF_DELETE",
                "MASS_CAMPAIGN_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_CAMPAIGN_PARTICIPANTS_UPDATE",
                "MASS_CAMPAIGN_UPDATE",
                "MASS_CANCELLATION_SEND_EMAIL",
                "MASS_CANCEL_TRANSPORTATION_ORDER",
                "MASS_CLEAR_OPEN_ITEM",
                "MASS_CLOSE_SUPPLIER_ORDER",
                "MASS_COMPLETE_WORKFLOW_TRANSPORTATION_ORDER",
                "MASS_CONTRACT_CHARGE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_CONTRACT_CHARGE_UPDATE",
                "MASS_CONTRACT_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_CONTRACT_DELETION",
                "MASS_CONTRACT_PRINT_DOCUMENT",
                "MASS_CONTRACT_SEND_EMAIL",
                "MASS_CONTRACT_UPDATE",
                "MASS_CONTRACT_UPDATE_FORM_TEXTS",
                "MASS_CREATE_DROPSHIPPING_ORDER",
                "MASS_CREATE_SALES_ORDER_COMMISSION",
                "MASS_CREATE_TRANSPORTATION_ORDER_FROM_PICKING_BOOKS",
                "MASS_CREDIT_NOTE_COMPLETE_WORKFLOW",
                "MASS_CRM_EVENT_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_CRM_EVENT_DELETION",
                "MASS_CRM_EVENT_UPDATE",
                "MASS_CUSTOMER_RETURN_DELETE",
                "MASS_DELETE_PICKING_BOOK_RECORD",
                "MASS_DELETION_TRANSPORTATION_ORDER",
                "MASS_DELIVERY_NOTE_SEND_EMAIL",
                "MASS_DOWNLOAD_BANK_TRANSACTION",
                "MASS_DUNNING_RUN_PROCESS_PROPOSALS",
                "MASS_DUNNING_RUN_SEND_EMAIL_DETAIL",
                "MASS_DUNNING_RUN_SEND_EMAIL_OVERVIEW",
                "MASS_EBAY_LISTINGS_DELETE",
                "MASS_EBAY_LISTING_UPDATE",
                "MASS_INTERNAL_TRANSPORT_REFERENCE_DELETION",
                "MASS_INTERNAL_TRANSPORT_REFERENCE_UPDATE",
                "MASS_INVOICE_BOOK",
                "MASS_INVOICE_CHECK",
                "MASS_INVOICE_COMPLETE_ENTRY",
                "MASS_INVOICE_COMPLETE_WORKFLOW",
                "MASS_INVOICE_CREATE_OPEN_ITEMS",
                "MASS_INVOICE_DOCUMENT_CREATION",
                "MASS_INVOICE_SEND_EMAIL",
                "MASS_INVOICE_VERIFIED",
                "MASS_IT_SCOPE_ARTICLE_CREATION",
                "MASS_IT_SCOPE_ORDER_SYNC",
                "MASS_LEDGER_ACCOUNT_UPDATE",
                "MASS_OFFER_ACCEPT",
                "MASS_OFFER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_OFFER_DELETE",
                "MASS_OFFER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_OFFER_ITEM_UPDATE",
                "MASS_OFFER_PRINT_DOCUMENT",
                "MASS_OFFER_RECALCULATE_COSTS",
                "MASS_OFFER_REJECT",
                "MASS_OFFER_RESET_TAXES",
                "MASS_OFFER_SEND_EMAIL",
                "MASS_OFFER_UPDATE",
                "MASS_OFFER_UPDATE_FORM_TEXTS",
                "MASS_OPPORTUNITY_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_OPPORTUNITY_DELETION",
                "MASS_OPPORTUNITY_UPDATE",
                "MASS_ORDER_CANCEL",
                "MASS_ORDER_CLOSE",
                "MASS_ORDER_CONFIRMATION_CREATION",
                "MASS_ORDER_DELETE",
                "MASS_ORDER_RECALCULATE_COSTS",
                "MASS_ORDER_REOPEN",
                "MASS_ORDER_RESET_TAXES",
                "MASS_ORDER_SHIPPING_LABEL_CREATION",
                "MASS_ORDER_SHIPPING_RETURN_LABEL_CREATION",
                "MASS_ORDER_UPDATE",
                "MASS_ORDER_UPDATE_FORM_TEXTS",
                "MASS_PARTY_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PARTY_DELETION",
                "MASS_PARTY_MERGE",
                "MASS_PARTY_SET_PRIMARY_CONTACT",
                "MASS_PARTY_UPDATE",
                "MASS_PART_PAYMENT_INVOICE_COMPLETE_WORKFLOW",
                "MASS_PART_PAYMENT_INVOICE_CREATION",
                "MASS_PAYMENT_RUN_PROCESS_PROPOSALS",
                "MASS_PERFORMANCE_RECORD_COMPLETE_WORKFLOW_FOR_SALES_ORDER",
                "MASS_PERFORMANCE_RECORD_CREATE_DOCUMENTS",
                "MASS_PERFORMANCE_RECORD_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PERFORMANCE_RECORD_DELETE",
                "MASS_PERFORMANCE_RECORD_INVOICING",
                "MASS_PERFORMANCE_RECORD_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PERFORMANCE_RECORD_RECORDING",
                "MASS_PERFORMANCE_RECORD_SEND_EMAIL",
                "MASS_PERFORMANCE_RECORD_UPDATE",
                "MASS_PERFORMANCE_RECORD_UPDATE_FORM_TEXTS",
                "MASS_PICKING_LIST_CREATION",
                "MASS_PM_REQUIREMENT_ITEM_UPDATE",
                "MASS_PREPAYMENT_INVOICE_CREATION",
                "MASS_PREPAYMENT_INVOICE_WORKFLOW",
                "MASS_PRINT_DROPSHIPPING_ORDER_DELIVERY_NOTE",
                "MASS_PRINT_PRODUCTION_ORDER",
                "MASS_PRINT_PURCHASE_ORDER_DOCUMENTS",
                "MASS_PRINT_RETURNS_PICKUP_NOTE",
                "MASS_PRINT_RETURNS_RETURN_NOTE",
                "MASS_PRINT_RETURN_DELIVERY_NOTE",
                "MASS_PROCESS_DROPSHIPPING_ORDER",
                "MASS_PRODUCTION_ORDER_CANCELLATION",
                "MASS_PRODUCTION_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PRODUCTION_ORDER_DELETION",
                "MASS_PRODUCTION_ORDER_ITEM_ARTICLE_EXCHANGE",
                "MASS_PRODUCTION_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PRODUCTION_ORDER_MATERIAL_ITEMS_UPDATE",
                "MASS_PRODUCTION_ORDER_PICKING_LIST_CREATION",
                "MASS_PRODUCTION_ORDER_REOPEN",
                "MASS_PRODUCTION_ORDER_UPDATE",
                "MASS_PRODUCTION_ORDER_UPDATE_FORM_TEXTS",
                "MASS_PROJECT_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PROJECT_UPDATE",
                "MASS_PURCHASE_CREDIT_NOTE_COMPLETE_WORKFLOW",
                "MASS_PURCHASE_INVOICE_BACK_TO_ENTRY",
                "MASS_PURCHASE_INVOICE_BOOK_ACCOUNTING",
                "MASS_PURCHASE_INVOICE_CANCEL",
                "MASS_PURCHASE_INVOICE_COMPLETE_WORKFLOW",
                "MASS_PURCHASE_INVOICE_CREATE_CREDIT_NOTE",
                "MASS_PURCHASE_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PURCHASE_INVOICE_DELETE",
                "MASS_PURCHASE_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PURCHASE_INVOICE_ITEM_UPDATE",
                "MASS_PURCHASE_INVOICE_RESET_TAXES",
                "MASS_PURCHASE_INVOICE_SHIPPING_COST_ITEM_UPDATE",
                "MASS_PURCHASE_INVOICE_UPDATE",
                "MASS_PURCHASE_ORDER_CANCEL",
                "MASS_PURCHASE_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PURCHASE_ORDER_DELETION",
                "MASS_PURCHASE_ORDER_INVOICE_COMPLETE_WORKFLOW",
                "MASS_PURCHASE_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PURCHASE_ORDER_ITEM_UPDATE",
                "MASS_PURCHASE_ORDER_REOPEN",
                "MASS_PURCHASE_ORDER_SEND_EMAIL",
                "MASS_PURCHASE_ORDER_UPDATE",
                "MASS_PURCHASE_ORDER_UPDATE_FORM_TEXTS",
                "MASS_PURCHASE_REQUEST_CANCEL",
                "MASS_PURCHASE_REQUEST_CLOSE",
                "MASS_PURCHASE_REQUEST_CREATE_DOCUMENTS",
                "MASS_PURCHASE_REQUEST_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_PURCHASE_REQUEST_DELETION",
                "MASS_PURCHASE_REQUEST_REOPEN",
                "MASS_PURCHASE_REQUEST_SEND_EMAIL",
                "MASS_PURCHASE_REQUEST_UPDATE",
                "MASS_PURCHASE_REQUEST_UPDATE_FORM_TEXTS",
                "MASS_RECORD_ADDRESS_FROM_CRM_UPDATE",
                "MASS_RECORD_EMAIL_ADDRESS_FROM_CRM_UPDATE",
                "MASS_RECURRING_CREATE_INVOICE",
                "MASS_RECURRING_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_RECURRING_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_RECURRING_INVOICE_ITEM_UPDATE",
                "MASS_RECURRING_INVOICE_UPDATE",
                "MASS_RECURRING_INVOICE_UPDATE_FORM_TEXTS",
                "MASS_RECURRING_RECALCULATION_COST",
                "MASS_REGION_UPDATE",
                "MASS_REMINDER_DELETION",
                "MASS_REMINDER_UPDATE",
                "MASS_RESET_CLEAR_OPEN_ITEM",
                "MASS_SALES_BILL_OF_MATERIAL_ITEM_UPDATE",
                "MASS_SALES_INVOICE_BACK_TO_ENTRY",
                "MASS_SALES_INVOICE_BOOK_ACCOUNTING",
                "MASS_SALES_INVOICE_CANCEL",
                "MASS_SALES_INVOICE_CREATE_CREDIT_NOTE",
                "MASS_SALES_INVOICE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SALES_INVOICE_DELETE",
                "MASS_SALES_INVOICE_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SALES_INVOICE_ITEM_UPDATE",
                "MASS_SALES_INVOICE_RECALCULATE_COSTS",
                "MASS_SALES_INVOICE_RESET_TAXES",
                "MASS_SALES_INVOICE_SHIPPING_COST_ITEM_UPDATE",
                "MASS_SALES_INVOICE_UPDATE",
                "MASS_SALES_INVOICE_UPDATE_FORM_TEXTS",
                "MASS_SALES_ORDER_CASH_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SALES_ORDER_COMPLETE_WORKFLOW",
                "MASS_SALES_ORDER_CREATE_PERFORMANCE_RECORD",
                "MASS_SALES_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SALES_ORDER_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SALES_ORDER_ITEM_UPDATE",
                "MASS_SALES_ORDER_SEND_EMAIL",
                "MASS_SALES_PRICE_ADD_SPECIAL_PRICE",
                "MASS_SALES_PRICE_DELETION",
                "MASS_SAVE_ORDER_CONFIRMED",
                "MASS_SEPA_MAIN_BANK_UPDATE",
                "MASS_SERIALNUMBER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SET_ORDERS_SHIPPED",
                "MASS_SHIPMENT_ARRIVAL_CANCEL",
                "MASS_SHIPMENT_ARRIVAL_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SHIPMENT_ARRIVAL_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SHIPMENT_COMPLETE_WORKFLOW",
                "MASS_SHIPMENT_COMPLETE_WORKFLOW_FOR_SALES_ORDER",
                "MASS_SHIPMENT_CREATION",
                "MASS_SHIPMENT_INCOMING_DELETE",
                "MASS_SHIPMENT_INCOMING_REOPEN",
                "MASS_SHIPMENT_INCOMING_UPDATE",
                "MASS_SHIPMENT_INCOMING_UPDATE_FORM_TEXTS",
                "MASS_SHIPMENT_INVOICE_CREATION",
                "MASS_SHIPMENT_OUTGOING_BACK_TO_ENTRY",
                "MASS_SHIPMENT_OUTGOING_CANCEL",
                "MASS_SHIPMENT_OUTGOING_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SHIPMENT_OUTGOING_DELETE",
                "MASS_SHIPMENT_OUTGOING_ITEM_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_SHIPMENT_OUTGOING_RETURN_LABEL_CREATION",
                "MASS_SHIPMENT_OUTGOING_UPDATE",
                "MASS_SHIPMENT_OUTGOING_UPDATE_FORM_TEXTS",
                "MASS_SHIPPING_CARRIER_UPDATE",
                "MASS_SHIPPING_CONFIRMATION_OF_ARRIVAL_CREATION",
                "MASS_SHIPPING_CONFIRMATION_OF_ARRIVAL_SEND_EMAIL",
                "MASS_SHIPPING_LABEL_CREATION",
                "MASS_SHIPPING_NOTE_CREATION",
                "MASS_SHIPPING_RETURN_LABEL_CREATION",
                "MASS_SHIP_IN",
                "MASS_SHIP_OUT",
                "MASS_STANDARD_INVOICE_CREATION",
                "MASS_STANDARD_INVOICE_WORKFLOW",
                "MASS_START_PRODUCTION_ORDER",
                "MASS_STOCK_BATCH_NUMBER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_STORAGE_PLACE_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_STORAGE_PLACE_DELETE",
                "MASS_STORAGE_PLACE_UPDATE",
                "MASS_SUPPLIER_PRICE_DELETION",
                "MASS_SUPPLIER_RETURN_DELETE",
                "MASS_TAG_DELETE",
                "MASS_TASK_BILLING_DATA_UPDATE",
                "MASS_TASK_CREATE_PERFORMANCE_RECORD",
                "MASS_TASK_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
                "MASS_TASK_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_TASK_DELETION",
                "MASS_TASK_UPDATE",
                "MASS_TAX_DELETE",
                "MASS_TAX_RESET",
                "MASS_TEAMVIEWER_DOWNLOAD_TIME_ENTRIES",
                "MASS_TICKET_CATEGORY_UPDATE",
                "MASS_TICKET_CREATE_PERFORMANCE_RECORD",
                "MASS_TICKET_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
                "MASS_TICKET_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_TICKET_DELETE",
                "MASS_TICKET_FAQ_COPY",
                "MASS_TICKET_FAQ_UPDATE",
                "MASS_TICKET_LINK_TO_SALES_ORDER",
                "MASS_TICKET_MERGE",
                "MASS_TICKET_SLA_RECALCULATE",
                "MASS_TICKET_STATUS_UPDATE",
                "MASS_TICKET_UPDATE",
                "MASS_TIME_RECORD_CREATE_PERFORMANCE_RECORD",
                "MASS_TIME_RECORD_CREATE_PERFORMANCE_RECORD_DOCUMENT_AND_INVOICE",
                "MASS_TIME_RECORD_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_TIME_RECORD_MOVE",
                "MASS_TIME_RECORD_UPDATE",
                "MASS_TRANSACTION_BOOKING",
                "MASS_TRANSACTION_CLEARING",
                "MASS_TRANSACTION_DELETE",
                "MASS_TRANSACTION_PROCESSING",
                "MASS_TRANSACTION_REMOVE_PAYMENTAPPLICATIONS",
                "MASS_TRANSACTION_RESET_IGNORE",
                "MASS_TRANSACTION_SET_IGNORE",
                "MASS_TRANSPORTATION_ORDER_CUSTOM_ATTRIBUTE_UPDATE",
                "MASS_TRANSPORTATION_ORDER_PICKING_LIST_CREATION",
                "MASS_UPDATE_CONTRACT_PRICES",
                "MASS_UPDATE_OFFER_PRICES",
                "MASS_UPDATE_RECURRING_INVOICE_PRICES",
                "MASS_UPDATE_SALES_INVOICE_PRICES",
                "MASS_UPDATE_SALES_ORDER_PRICES",
                "MASS_VARIANT_ARTICLE_DELETION",
                "MATERIAL_PLANNING_RUN",
                "OFFER_EXPORT",
                "OTTO_ARTICLE_UPLOAD_CHECK_SYNC",
                "OTTO_WECLAPP_ARTICLE_SYNC",
                "OTTO_WECLAPP_CREDIT_NOTE_SYNC",
                "OTTO_WECLAPP_INVOICE_SYNC",
                "OTTO_WECLAPP_ORDER_SYNC",
                "PRESTA_WECLAPP_ARTICLE_SYNC",
                "PRESTA_WECLAPP_CUSTOMER_SYNC",
                "PRESTA_WECLAPP_ORDER_SYNC",
                "PRICE_CALCULATION_ARTICLE",
                "PURCHASE_INVOICE_EXPORT",
                "PURCHASE_INVOICE_SHIPPING_COST_EXPORT",
                "PURCHASE_ORDER_EXPORT",
                "PURCHASE_ORDER_REQUEST_SEND_EMAIL",
                "RECEIVED_INVOICE_IMPORT",
                "RECURRING_INVOICE_INVOICE_CREATION",
                "RESET_ACCOUNTING",
                "RESET_BUSINESS_TRANSACTIONS",
                "SALES_INVOICE_EXPORT",
                "SALES_INVOICE_SHIPPING_COST_ITEMS_EXPORT",
                "SALES_INVOICE_XRECHNUNG_EXPORT",
                "SALES_ORDER_EXPORT",
                "SHIPMENTIN_EXPORT",
                "SHIPMENTOUT_EXPORT",
                "SHOPIFY_WECLAPP_ARTICLE_SYNC",
                "SHOPIFY_WECLAPP_CUSTOMER_SYNC",
                "SHOPIFY_WECLAPP_ORDER_SYNC",
                "SHOPIFY_WECLAPP_PAYMENT_SYNC",
                "SHOPWARE6_WECLAPP_ARTICLE_SYNC",
                "SHOPWARE6_WECLAPP_CUSTOMER_SYNC",
                "SHOPWARE6_WECLAPP_ORDER_SYNC",
                "SHOPWARE_WECLAPP_ARTICLE_SYNC",
                "SHOPWARE_WECLAPP_CUSTOMER_SYNC",
                "SHOPWARE_WECLAPP_ORDER_SYNC",
                "SYNAXON_WECLAPP_ARTICLE_UPDATE",
                "TRANSUS_SALES_INVOICE_XML_CREATION",
                "TRANSUS_SHIPMENT_XML_CREATION",
                "TRANSUS_WECLAPP_ORDER_SYNC",
                "WECLAPP_AMAZON_OUTBOUND_SHIPMENT_SYNC",
                "WECLAPP_AMAZON_STOCK_SYNC",
                "WECLAPP_EBAY_LISTING_STOCK_SYNC",
                "WECLAPP_EBAY_ORDER_SYNC",
                "WECLAPP_ITSCOPE_ARTICLE_PRICE_UPDATE",
                "WECLAPP_ITSCOPE_ORDER_SYNC",
                "WECLAPP_KAUFLAND_ARTICLE_SYNC",
                "WECLAPP_KAUFLAND_ORDER_SYNC",
                "WECLAPP_KAUFLAND_STOCK_SYNC",
                "WECLAPP_MAGENTO2_ARTICLE_SYNC",
                "WECLAPP_MAGENTO2_ORDER_SYNC",
                "WECLAPP_MAGENTO2_STOCK_SYNC",
                "WECLAPP_MAGENTO_ARTICLE_SYNC",
                "WECLAPP_MAGENTO_ORDER_SYNC",
                "WECLAPP_MAGENTO_STOCK_SYNC",
                "WECLAPP_OTTO_ARTICLE_SYNC",
                "WECLAPP_OTTO_ORDER_SYNC",
                "WECLAPP_OTTO_STOCK_SYNC",
                "WECLAPP_PRESTA_ARTICLE_SYNC",
                "WECLAPP_PRESTA_CUSTOMER_SYNC",
                "WECLAPP_PRESTA_ORDER_SYNC",
                "WECLAPP_PRESTA_STOCK_SYNC",
                "WECLAPP_SALES_ORDER_AMAZON_REPORT_SYNC",
                "WECLAPP_SHOPIFY_ARTICLE_SYNC",
                "WECLAPP_SHOPIFY_ORDER_SYNC",
                "WECLAPP_SHOPIFY_STOCK_SYNC",
                "WECLAPP_SHOPWARE6_ARTICLE_SYNC",
                "WECLAPP_SHOPWARE6_ORDER_SYNC",
                "WECLAPP_SHOPWARE6_STOCK_SYNC",
                "WECLAPP_SHOPWARE_ARTICLE_SYNC",
                "WECLAPP_SHOPWARE_CUSTOMER_SYNC",
                "WECLAPP_SHOPWARE_ORDER_SYNC",
                "WECLAPP_SHOPWARE_STOCK_SYNC",
                "WECLAPP_TO_AMAZON_ARTICLE_REPORT_SYNC",
                "WECLAPP_TO_AMAZON_REPORT_SYNC",
                "WECLAPP_TO_SHOPIFY_CUSTOMER_SYNC",
                "WECLAPP_TO_SHOPWARE6_CUSTOMER_SYNC",
                "WECLAPP_TO_WECLAPP_ARTICLE_PUSH",
                "WECLAPP_TO_WECLAPP_CUSTOM_ATTRIBUTES_PULL",
                "WECLAPP_TO_WECLAPP_DELETION",
                "WECLAPP_TO_WECLAPP_OFFER_PULL",
                "WECLAPP_TO_WECLAPP_OTHER_DATA_PUSH",
                "WECLAPP_TO_WECLAPP_PARTY_PULL",
                "WECLAPP_TO_WECLAPP_PARTY_PUSH",
                "WECLAPP_TO_WECLAPP_PURCHASE_ORDERS_AS_SALES_ORDERS_PULL",
                "WECLAPP_TO_WECLAPP_PURCHASE_ORDER_PUSH",
                "WECLAPP_TO_WECLAPP_SALES_ORDER_PULL",
                "WECLAPP_TO_WECLAPP_STORE_PUSH",
                "WECLAPP_TO_WECLAPP_SUPPLIER_STOCK_SYNC",
                "WECLAPP_TO_WECLAPP_TICKET_PULL",
                "WECLAPP_TO_WECLAPP_USER_PULL",
                "WECLAPP_WOOCOMMERCE_ARTICLE_SYNC",
                "WECLAPP_WOOCOMMERCE_ORDER_SYNC",
                "WECLAPP_WOOCOMMERCE_STOCK_SYNC",
                "WOOCOMMERCE_WECLAPP_ARTICLE_SYNC",
                "WOOCOMMERCE_WECLAPP_CUSTOMER_SYNC",
                "WOOCOMMERCE_WECLAPP_ORDER_SYNC",
                "XT_WECLAPP_ARTICLE_SYNC",
                "XT_WECLAPP_ORDER_SYNC"
              ],
              "type": "string"
            },
            "name": "types",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "statuses response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/jobResult"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "job"
        ]
      }
    },
    "/lead": {
      "get": {
        "description": "query lead",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "lead response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/lead"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "lead"
        ]
      },
      "post": {
        "description": "create a lead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/lead"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "lead create response",
            "schema": {
              "$ref": "#/definitions/lead"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "lead"
        ]
      }
    },
    "/lead/count": {
      "get": {
        "description": "count lead",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "lead"
        ]
      }
    },
    "/lead/id/{id}": {
      "delete": {
        "description": "delete a lead",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "lead delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "lead"
        ]
      },
      "get": {
        "description": "query lead",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/lead"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "lead"
        ]
      },
      "put": {
        "description": "update lead",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/lead"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "lead update response",
            "schema": {
              "$ref": "#/definitions/lead"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "lead"
        ]
      }
    },
    "/lead/id/{id}/convertLeadToCustomer": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "convertLeadToCustomer response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/customer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "lead"
        ]
      }
    },
    "/lead/id/{id}/downloadImage": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadImage response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "lead"
        ]
      }
    },
    "/lead/id/{id}/uploadImage": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "uploadImage response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "lead"
        ]
      }
    },
    "/leadRating": {
      "get": {
        "description": "query leadRating",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "leadRating response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadRating"
        ]
      },
      "post": {
        "description": "create a leadRating",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "leadRating create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadRating"
        ]
      }
    },
    "/leadRating/count": {
      "get": {
        "description": "count leadRating",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadRating"
        ]
      }
    },
    "/leadRating/id/{id}": {
      "delete": {
        "description": "delete a leadRating",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "leadRating delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadRating"
        ]
      },
      "get": {
        "description": "query leadRating",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadRating"
        ]
      },
      "put": {
        "description": "update leadRating",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "leadRating update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadRating"
        ]
      }
    },
    "/leadSource": {
      "get": {
        "description": "query leadSource",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "leadSource response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadSource"
        ]
      },
      "post": {
        "description": "create a leadSource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "leadSource create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadSource"
        ]
      }
    },
    "/leadSource/count": {
      "get": {
        "description": "count leadSource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadSource"
        ]
      }
    },
    "/leadSource/id/{id}": {
      "delete": {
        "description": "delete a leadSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "leadSource delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadSource"
        ]
      },
      "get": {
        "description": "query leadSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadSource"
        ]
      },
      "put": {
        "description": "update leadSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "leadSource update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "leadSource"
        ]
      }
    },
    "/ledgerAccount": {
      "get": {
        "description": "query ledgerAccount",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ledgerAccount response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ledgerAccount"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ledgerAccount"
        ]
      },
      "post": {
        "description": "create a ledgerAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ledgerAccount"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "ledgerAccount create response",
            "schema": {
              "$ref": "#/definitions/ledgerAccount"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ledgerAccount"
        ]
      }
    },
    "/ledgerAccount/count": {
      "get": {
        "description": "count ledgerAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ledgerAccount"
        ]
      }
    },
    "/ledgerAccount/id/{id}": {
      "delete": {
        "description": "delete a ledgerAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "ledgerAccount delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ledgerAccount"
        ]
      },
      "get": {
        "description": "query ledgerAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/ledgerAccount"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ledgerAccount"
        ]
      },
      "put": {
        "description": "update ledgerAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ledgerAccount"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ledgerAccount update response",
            "schema": {
              "$ref": "#/definitions/ledgerAccount"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ledgerAccount"
        ]
      }
    },
    "/legalForm": {
      "get": {
        "description": "query legalForm",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "legalForm response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "legalForm"
        ]
      },
      "post": {
        "description": "create a legalForm",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "legalForm create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "legalForm"
        ]
      }
    },
    "/legalForm/count": {
      "get": {
        "description": "count legalForm",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "legalForm"
        ]
      }
    },
    "/legalForm/id/{id}": {
      "delete": {
        "description": "delete a legalForm",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "legalForm delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "legalForm"
        ]
      },
      "get": {
        "description": "query legalForm",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "legalForm"
        ]
      },
      "put": {
        "description": "update legalForm",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "legalForm update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "legalForm"
        ]
      }
    },
    "/loadingEquipmentIdentifier": {
      "get": {
        "description": "query loadingEquipmentIdentifier",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "loadingEquipmentIdentifier response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/loadingEquipmentIdentifier"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "loadingEquipmentIdentifier"
        ]
      },
      "post": {
        "description": "create a loadingEquipmentIdentifier",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loadingEquipmentIdentifier"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "loadingEquipmentIdentifier create response",
            "schema": {
              "$ref": "#/definitions/loadingEquipmentIdentifier"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "loadingEquipmentIdentifier"
        ]
      }
    },
    "/loadingEquipmentIdentifier/count": {
      "get": {
        "description": "count loadingEquipmentIdentifier",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "loadingEquipmentIdentifier"
        ]
      }
    },
    "/loadingEquipmentIdentifier/id/{id}": {
      "delete": {
        "description": "delete a loadingEquipmentIdentifier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "loadingEquipmentIdentifier delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "loadingEquipmentIdentifier"
        ]
      },
      "get": {
        "description": "query loadingEquipmentIdentifier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/loadingEquipmentIdentifier"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "loadingEquipmentIdentifier"
        ]
      },
      "put": {
        "description": "update loadingEquipmentIdentifier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loadingEquipmentIdentifier"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "loadingEquipmentIdentifier update response",
            "schema": {
              "$ref": "#/definitions/loadingEquipmentIdentifier"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "loadingEquipmentIdentifier"
        ]
      }
    },
    "/mailAccount": {
      "get": {
        "description": "query mailAccount",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "mailAccount response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/mailAccount"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "mailAccount"
        ]
      }
    },
    "/mailAccount/count": {
      "get": {
        "description": "count mailAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "mailAccount"
        ]
      }
    },
    "/mailAccount/id/{id}": {
      "get": {
        "description": "query mailAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/mailAccount"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "mailAccount"
        ]
      }
    },
    "/mailTemplate": {
      "get": {
        "description": "query mailTemplate",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "mailTemplate response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/mailTemplate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "mailTemplate"
        ]
      },
      "post": {
        "description": "create a mailTemplate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mailTemplate"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "mailTemplate create response",
            "schema": {
              "$ref": "#/definitions/mailTemplate"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "mailTemplate"
        ]
      }
    },
    "/mailTemplate/count": {
      "get": {
        "description": "count mailTemplate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "mailTemplate"
        ]
      }
    },
    "/mailTemplate/id/{id}": {
      "delete": {
        "description": "delete a mailTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "mailTemplate delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "mailTemplate"
        ]
      },
      "get": {
        "description": "query mailTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/mailTemplate"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "mailTemplate"
        ]
      },
      "put": {
        "description": "update mailTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mailTemplate"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "mailTemplate update response",
            "schema": {
              "$ref": "#/definitions/mailTemplate"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "mailTemplate"
        ]
      }
    },
    "/manufacturer": {
      "get": {
        "description": "query manufacturer",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "manufacturer response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/manufacturer"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "manufacturer"
        ]
      },
      "post": {
        "description": "create a manufacturer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/manufacturer"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "manufacturer create response",
            "schema": {
              "$ref": "#/definitions/manufacturer"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "manufacturer"
        ]
      }
    },
    "/manufacturer/count": {
      "get": {
        "description": "count manufacturer",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "manufacturer"
        ]
      }
    },
    "/manufacturer/id/{id}": {
      "get": {
        "description": "query manufacturer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/manufacturer"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "manufacturer"
        ]
      },
      "put": {
        "description": "update manufacturer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/manufacturer"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "manufacturer update response",
            "schema": {
              "$ref": "#/definitions/manufacturer"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "manufacturer"
        ]
      }
    },
    "/meta/openapi.json": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "includeHidden",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "openapi.json response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "meta"
        ]
      }
    },
    "/meta/openapi.yaml": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "includeHidden",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "openapi.yaml response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "meta"
        ]
      }
    },
    "/meta/queryFilterProperties": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "queryFilterProperties response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "meta"
        ]
      }
    },
    "/meta/querySortProperties": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "querySortProperties response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "meta"
        ]
      }
    },
    "/meta/resources": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "resources response",
            "schema": {
              "properties": {
                "result": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "meta"
        ]
      }
    },
    "/meta/resourcesIncludingHidden": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "resourcesIncludingHidden response",
            "schema": {
              "properties": {
                "result": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "meta"
        ]
      }
    },
    "/meta/swagger.json": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "includeHidden",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "swagger.json response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "meta"
        ]
      }
    },
    "/moneyTransaction": {
      "get": {
        "description": "query moneyTransaction",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "moneyTransaction response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/moneyTransaction"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "moneyTransaction"
        ]
      },
      "post": {
        "description": "create a moneyTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/moneyTransaction"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "moneyTransaction create response",
            "schema": {
              "$ref": "#/definitions/moneyTransaction"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "moneyTransaction"
        ]
      }
    },
    "/moneyTransaction/count": {
      "get": {
        "description": "count moneyTransaction",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "moneyTransaction"
        ]
      }
    },
    "/moneyTransaction/id/{id}": {
      "delete": {
        "description": "delete a moneyTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "moneyTransaction delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "moneyTransaction"
        ]
      },
      "get": {
        "description": "query moneyTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/moneyTransaction"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "moneyTransaction"
        ]
      }
    },
    "/moneyTransaction/id/{id}/getOrCreateReceipt": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "getOrCreateReceipt response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "moneyTransaction"
        ]
      }
    },
    "/notification": {
      "get": {
        "description": "query notification",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "notification response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/notification"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "notification"
        ]
      }
    },
    "/notification/count": {
      "get": {
        "description": "count notification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "notification"
        ]
      }
    },
    "/notification/id/{id}": {
      "get": {
        "description": "query notification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/notification"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "notification"
        ]
      }
    },
    "/notification/id/{id}/markRead": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "markRead response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/notification"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "notification"
        ]
      }
    },
    "/notification/markAllAsRead": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "markAllAsRead response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/countResult"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "notification"
        ]
      }
    },
    "/opportunity": {
      "get": {
        "description": "query opportunity",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "opportunity response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/opportunity"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunity"
        ]
      },
      "post": {
        "description": "create a opportunity",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/opportunity"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "opportunity create response",
            "schema": {
              "$ref": "#/definitions/opportunity"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunity"
        ]
      }
    },
    "/opportunity/count": {
      "get": {
        "description": "count opportunity",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunity"
        ]
      }
    },
    "/opportunity/id/{id}": {
      "delete": {
        "description": "delete a opportunity",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "opportunity delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunity"
        ]
      },
      "get": {
        "description": "query opportunity",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/opportunity"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunity"
        ]
      },
      "put": {
        "description": "update opportunity",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/opportunity"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "opportunity update response",
            "schema": {
              "$ref": "#/definitions/opportunity"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunity"
        ]
      }
    },
    "/opportunity/id/{id}/linkQuotation": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "quotationId": {
                  "type": "string"
                }
              },
              "required": [
                "quotationId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "linkQuotation response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/opportunity"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunity"
        ]
      }
    },
    "/opportunity/startDelete": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "ids"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "startDelete response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/jobResult"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunity"
        ]
      }
    },
    "/opportunity/startUpdate": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "updateData": {
                  "$ref": "#/definitions/opportunityUpdateData"
                }
              },
              "required": [
                "ids",
                "updateData"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "startUpdate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/jobResult"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunity"
        ]
      }
    },
    "/opportunityTopic": {
      "get": {
        "description": "query opportunityTopic",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "opportunityTopic response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityTopic"
        ]
      },
      "post": {
        "description": "create a opportunityTopic",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "opportunityTopic create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityTopic"
        ]
      }
    },
    "/opportunityTopic/count": {
      "get": {
        "description": "count opportunityTopic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityTopic"
        ]
      }
    },
    "/opportunityTopic/id/{id}": {
      "delete": {
        "description": "delete a opportunityTopic",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "opportunityTopic delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityTopic"
        ]
      },
      "get": {
        "description": "query opportunityTopic",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityTopic"
        ]
      },
      "put": {
        "description": "update opportunityTopic",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "opportunityTopic update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityTopic"
        ]
      }
    },
    "/opportunityWinLossReason": {
      "get": {
        "description": "query opportunityWinLossReason",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "opportunityWinLossReason response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityWinLossReason"
        ]
      },
      "post": {
        "description": "create a opportunityWinLossReason",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "opportunityWinLossReason create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityWinLossReason"
        ]
      }
    },
    "/opportunityWinLossReason/count": {
      "get": {
        "description": "count opportunityWinLossReason",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityWinLossReason"
        ]
      }
    },
    "/opportunityWinLossReason/id/{id}": {
      "delete": {
        "description": "delete a opportunityWinLossReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "opportunityWinLossReason delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityWinLossReason"
        ]
      },
      "get": {
        "description": "query opportunityWinLossReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityWinLossReason"
        ]
      },
      "put": {
        "description": "update opportunityWinLossReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "opportunityWinLossReason update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "opportunityWinLossReason"
        ]
      }
    },
    "/party": {
      "get": {
        "description": "query party",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "additionalProperties",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "party response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/party"
                  },
                  "type": "array"
                },
                "additionalProperties": {
                  "properties": {
                    "customerChildrenSalesOrderVolumeCurrentYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerChildrenSalesOrderVolumePreviousYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerChildrenSalesRevenueCurrentYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerChildrenSalesRevenuePreviousYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerQuotationAcceptancePercentage": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerQuotationAcceptanceTimeInDays": {
                      "items": {
                        "format": "int64",
                        "type": "integer"
                      },
                      "type": "array"
                    },
                    "customerReturnPercentageCurrentYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerReturnPercentagePreviousYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerSalesOpenItemOverdueSum": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerSalesOpenItemSum": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerSalesOrderVolumeCurrentYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerSalesOrderVolumePreviousYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerSalesRevenueCurrentYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "customerSalesRevenuePreviousYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "leadChildrenExpectedRevenueOpportunities": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "leadChildrenExpectedRevenueQuotations": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "leadChildrenQuotationVolume": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "leadExpectedRevenueOpportunities": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "leadExpectedRevenueQuotations": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "leadQuotationVolume": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "supplierChildrenPurchaseOrderVolumeCurrentYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "supplierChildrenPurchaseOrderVolumePreviousYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "supplierChildrenPurchaseRevenueCurrentYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "supplierChildrenPurchaseRevenuePreviousYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "supplierPurchaseOrderVolumeCurrentYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "supplierPurchaseOrderVolumePreviousYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "supplierPurchaseRevenueCurrentYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "supplierPurchaseRevenuePreviousYear": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      },
      "post": {
        "description": "create a party",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/party"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "party create response",
            "schema": {
              "$ref": "#/definitions/party"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      }
    },
    "/party/count": {
      "get": {
        "description": "count party",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      }
    },
    "/party/id/{id}": {
      "delete": {
        "description": "delete a party",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "party delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      },
      "get": {
        "description": "query party",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/party"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      },
      "put": {
        "description": "update party",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/party"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "party update response",
            "schema": {
              "$ref": "#/definitions/party"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      }
    },
    "/party/id/{id}/createPublicPage": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPublicPage response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/party"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      }
    },
    "/party/id/{id}/downloadImage": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "imageId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadImage response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      }
    },
    "/party/id/{id}/topPurchaseArticles": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "topPurchaseArticles response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/articleIdWithNetAmount"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      }
    },
    "/party/id/{id}/topSalesArticles": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "topSalesArticles response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/articleIdWithNetAmount"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      }
    },
    "/party/id/{id}/uploadImage": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "uploadImage response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "party"
        ]
      }
    },
    "/partyRating": {
      "get": {
        "description": "query partyRating",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "partyRating response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "partyRating"
        ]
      },
      "post": {
        "description": "create a partyRating",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "partyRating create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "partyRating"
        ]
      }
    },
    "/partyRating/count": {
      "get": {
        "description": "count partyRating",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "partyRating"
        ]
      }
    },
    "/partyRating/id/{id}": {
      "delete": {
        "description": "delete a partyRating",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "partyRating delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "partyRating"
        ]
      },
      "get": {
        "description": "query partyRating",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "partyRating"
        ]
      },
      "put": {
        "description": "update partyRating",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "partyRating update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "partyRating"
        ]
      }
    },
    "/paymentMethod": {
      "get": {
        "description": "query paymentMethod",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paymentMethod response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/paymentMethod"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentMethod"
        ]
      },
      "post": {
        "description": "create a paymentMethod",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentMethod"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "paymentMethod create response",
            "schema": {
              "$ref": "#/definitions/paymentMethod"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentMethod"
        ]
      }
    },
    "/paymentMethod/count": {
      "get": {
        "description": "count paymentMethod",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentMethod"
        ]
      }
    },
    "/paymentMethod/id/{id}": {
      "delete": {
        "description": "delete a paymentMethod",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "paymentMethod delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentMethod"
        ]
      },
      "get": {
        "description": "query paymentMethod",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/paymentMethod"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentMethod"
        ]
      },
      "put": {
        "description": "update paymentMethod",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentMethod"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "paymentMethod update response",
            "schema": {
              "$ref": "#/definitions/paymentMethod"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentMethod"
        ]
      }
    },
    "/paymentRun": {
      "get": {
        "description": "query paymentRun",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paymentRun response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/paymentRun"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentRun"
        ]
      }
    },
    "/paymentRun/count": {
      "get": {
        "description": "count paymentRun",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentRun"
        ]
      }
    },
    "/paymentRun/id/{id}": {
      "delete": {
        "description": "delete a paymentRun",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "paymentRun delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentRun"
        ]
      },
      "get": {
        "description": "query paymentRun",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/paymentRun"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentRun"
        ]
      },
      "put": {
        "description": "update paymentRun",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentRun"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "paymentRun update response",
            "schema": {
              "$ref": "#/definitions/paymentRun"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentRun"
        ]
      }
    },
    "/paymentRunItem": {
      "get": {
        "description": "query paymentRunItem",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paymentRunItem response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/paymentRunItem"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentRunItem"
        ]
      }
    },
    "/paymentRunItem/count": {
      "get": {
        "description": "count paymentRunItem",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentRunItem"
        ]
      }
    },
    "/paymentRunItem/id/{id}": {
      "get": {
        "description": "query paymentRunItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/paymentRunItem"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "paymentRunItem"
        ]
      }
    },
    "/performanceRecord": {
      "get": {
        "description": "query performanceRecord",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "additionalProperties",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "performanceRecord response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/performanceRecord"
                  },
                  "type": "array"
                },
                "additionalProperties": {
                  "properties": {
                    "invoiced": {
                      "items": {
                        "type": "boolean"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      },
      "post": {
        "description": "create a performanceRecord",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/performanceRecord"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "performanceRecord create response",
            "schema": {
              "$ref": "#/definitions/performanceRecord"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      }
    },
    "/performanceRecord/count": {
      "get": {
        "description": "count performanceRecord",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      }
    },
    "/performanceRecord/id/{id}": {
      "delete": {
        "description": "delete a performanceRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "performanceRecord delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      },
      "get": {
        "description": "query performanceRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/performanceRecord"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      },
      "put": {
        "description": "update performanceRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/performanceRecord"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "performanceRecord update response",
            "schema": {
              "$ref": "#/definitions/performanceRecord"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      }
    },
    "/performanceRecord/id/{id}/addToPerformanceRecord": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "orderItemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "taskIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "timeRecordIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addToPerformanceRecord response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/performanceRecord"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      }
    },
    "/performanceRecord/id/{id}/createInvoice": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createInvoice response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      }
    },
    "/performanceRecord/id/{id}/downloadLatestPerformanceRecordPdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestPerformanceRecordPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      }
    },
    "/performanceRecord/id/{id}/downloadSignature": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "customerSignature",
            "required": true,
            "type": "boolean"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadSignature response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      }
    },
    "/performanceRecord/id/{id}/recalculateQuantities": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recalculateQuantities response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/performanceRecord"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      }
    },
    "/performanceRecord/id/{id}/removeSignature": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "customerSignature": {
                  "type": "boolean"
                }
              },
              "required": [
                "customerSignature"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "removeSignature response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      }
    },
    "/performanceRecord/id/{id}/uploadSignature": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "customerSignature",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "uploadSignature response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "performanceRecord"
        ]
      }
    },
    "/personDepartment": {
      "get": {
        "description": "query personDepartment",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "personDepartment response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personDepartment"
        ]
      },
      "post": {
        "description": "create a personDepartment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "personDepartment create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personDepartment"
        ]
      }
    },
    "/personDepartment/count": {
      "get": {
        "description": "count personDepartment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personDepartment"
        ]
      }
    },
    "/personDepartment/id/{id}": {
      "delete": {
        "description": "delete a personDepartment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "personDepartment delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personDepartment"
        ]
      },
      "get": {
        "description": "query personDepartment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personDepartment"
        ]
      },
      "put": {
        "description": "update personDepartment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "personDepartment update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personDepartment"
        ]
      }
    },
    "/personRole": {
      "get": {
        "description": "query personRole",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "personRole response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personRole"
        ]
      },
      "post": {
        "description": "create a personRole",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "personRole create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personRole"
        ]
      }
    },
    "/personRole/count": {
      "get": {
        "description": "count personRole",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personRole"
        ]
      }
    },
    "/personRole/id/{id}": {
      "delete": {
        "description": "delete a personRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "personRole delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personRole"
        ]
      },
      "get": {
        "description": "query personRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personRole"
        ]
      },
      "put": {
        "description": "update personRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "personRole update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personRole"
        ]
      }
    },
    "/personalAccountingCode": {
      "get": {
        "description": "query personalAccountingCode",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "personalAccountingCode response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personalAccountingCode"
        ]
      },
      "post": {
        "description": "create a personalAccountingCode",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "personalAccountingCode create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personalAccountingCode"
        ]
      }
    },
    "/personalAccountingCode/count": {
      "get": {
        "description": "count personalAccountingCode",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personalAccountingCode"
        ]
      }
    },
    "/personalAccountingCode/id/{id}": {
      "delete": {
        "description": "delete a personalAccountingCode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "personalAccountingCode delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personalAccountingCode"
        ]
      },
      "get": {
        "description": "query personalAccountingCode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personalAccountingCode"
        ]
      },
      "put": {
        "description": "update personalAccountingCode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "personalAccountingCode update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "personalAccountingCode"
        ]
      }
    },
    "/pick": {
      "get": {
        "description": "query pick",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "pick response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/pick"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "pick"
        ]
      }
    },
    "/pick/count": {
      "get": {
        "description": "count pick",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "pick"
        ]
      }
    },
    "/pick/id/{id}": {
      "get": {
        "description": "query pick",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/pick"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "pick"
        ]
      }
    },
    "/pickCheckReason": {
      "get": {
        "description": "query pickCheckReason",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "pickCheckReason response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "pickCheckReason"
        ]
      },
      "post": {
        "description": "create a pickCheckReason",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "pickCheckReason create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "pickCheckReason"
        ]
      }
    },
    "/pickCheckReason/count": {
      "get": {
        "description": "count pickCheckReason",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "pickCheckReason"
        ]
      }
    },
    "/pickCheckReason/id/{id}": {
      "delete": {
        "description": "delete a pickCheckReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "pickCheckReason delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "pickCheckReason"
        ]
      },
      "get": {
        "description": "query pickCheckReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "pickCheckReason"
        ]
      },
      "put": {
        "description": "update pickCheckReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "pickCheckReason update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "pickCheckReason"
        ]
      }
    },
    "/placeOfService": {
      "get": {
        "description": "query placeOfService",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "placeOfService response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "placeOfService"
        ]
      },
      "post": {
        "description": "create a placeOfService",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "placeOfService create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "placeOfService"
        ]
      }
    },
    "/placeOfService/count": {
      "get": {
        "description": "count placeOfService",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "placeOfService"
        ]
      }
    },
    "/placeOfService/id/{id}": {
      "delete": {
        "description": "delete a placeOfService",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "placeOfService delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "placeOfService"
        ]
      },
      "get": {
        "description": "query placeOfService",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "placeOfService"
        ]
      },
      "put": {
        "description": "update placeOfService",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "placeOfService update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "placeOfService"
        ]
      }
    },
    "/priceCalculationParameter": {
      "get": {
        "description": "query priceCalculationParameter",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "priceCalculationParameter response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/priceCalculationParameter"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "priceCalculationParameter"
        ]
      },
      "post": {
        "description": "create a priceCalculationParameter",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/priceCalculationParameter"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "priceCalculationParameter create response",
            "schema": {
              "$ref": "#/definitions/priceCalculationParameter"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "priceCalculationParameter"
        ]
      }
    },
    "/priceCalculationParameter/count": {
      "get": {
        "description": "count priceCalculationParameter",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "priceCalculationParameter"
        ]
      }
    },
    "/priceCalculationParameter/id/{id}": {
      "delete": {
        "description": "delete a priceCalculationParameter",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "priceCalculationParameter delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "priceCalculationParameter"
        ]
      },
      "get": {
        "description": "query priceCalculationParameter",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/priceCalculationParameter"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "priceCalculationParameter"
        ]
      },
      "put": {
        "description": "update priceCalculationParameter",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/priceCalculationParameter"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "priceCalculationParameter update response",
            "schema": {
              "$ref": "#/definitions/priceCalculationParameter"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "priceCalculationParameter"
        ]
      }
    },
    "/productionOrder": {
      "get": {
        "description": "query productionOrder",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "productionOrder response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/productionOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      },
      "post": {
        "description": "create a productionOrder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/productionOrder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "productionOrder create response",
            "schema": {
              "$ref": "#/definitions/productionOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      }
    },
    "/productionOrder/count": {
      "get": {
        "description": "count productionOrder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      }
    },
    "/productionOrder/fastProductionBooking": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "quantity": {
                  "format": "number",
                  "type": "string"
                },
                "productionOrderNumber": {
                  "type": "string"
                }
              },
              "required": [
                "quantity",
                "productionOrderNumber"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "fastProductionBooking response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/fastProductionBookingResult"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      }
    },
    "/productionOrder/id/{id}": {
      "delete": {
        "description": "delete a productionOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "productionOrder delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      },
      "get": {
        "description": "query productionOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/productionOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      },
      "put": {
        "description": "update productionOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/productionOrder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "productionOrder update response",
            "schema": {
              "$ref": "#/definitions/productionOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      }
    },
    "/productionOrder/id/{id}/createPickingList": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createPickingList response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      }
    },
    "/productionOrder/id/{id}/downloadLatestProductionOrderPdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestProductionOrderPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      }
    },
    "/productionOrder/id/{id}/picks": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "picks response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/pickData"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      }
    },
    "/productionOrder/id/{id}/updatePicks": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "picks": {
                  "items": {
                    "$ref": "#/definitions/pickData"
                  },
                  "type": "array"
                }
              },
              "required": [
                "picks"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePicks response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/pickData"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionOrder"
        ]
      }
    },
    "/productionWorkSchedule": {
      "get": {
        "description": "query productionWorkSchedule",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "productionWorkSchedule response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/productionWorkSchedule"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkSchedule"
        ]
      },
      "post": {
        "description": "create a productionWorkSchedule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/productionWorkSchedule"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "productionWorkSchedule create response",
            "schema": {
              "$ref": "#/definitions/productionWorkSchedule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkSchedule"
        ]
      }
    },
    "/productionWorkSchedule/count": {
      "get": {
        "description": "count productionWorkSchedule",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkSchedule"
        ]
      }
    },
    "/productionWorkSchedule/id/{id}": {
      "delete": {
        "description": "delete a productionWorkSchedule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "productionWorkSchedule delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkSchedule"
        ]
      },
      "get": {
        "description": "query productionWorkSchedule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/productionWorkSchedule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkSchedule"
        ]
      },
      "put": {
        "description": "update productionWorkSchedule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/productionWorkSchedule"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "productionWorkSchedule update response",
            "schema": {
              "$ref": "#/definitions/productionWorkSchedule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkSchedule"
        ]
      }
    },
    "/productionWorkScheduleAssignment": {
      "get": {
        "description": "query productionWorkScheduleAssignment",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "productionWorkScheduleAssignment response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/productionWorkScheduleAssignment"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkScheduleAssignment"
        ]
      },
      "post": {
        "description": "create a productionWorkScheduleAssignment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/productionWorkScheduleAssignment"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "productionWorkScheduleAssignment create response",
            "schema": {
              "$ref": "#/definitions/productionWorkScheduleAssignment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkScheduleAssignment"
        ]
      }
    },
    "/productionWorkScheduleAssignment/count": {
      "get": {
        "description": "count productionWorkScheduleAssignment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkScheduleAssignment"
        ]
      }
    },
    "/productionWorkScheduleAssignment/id/{id}": {
      "delete": {
        "description": "delete a productionWorkScheduleAssignment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "productionWorkScheduleAssignment delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkScheduleAssignment"
        ]
      },
      "get": {
        "description": "query productionWorkScheduleAssignment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/productionWorkScheduleAssignment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkScheduleAssignment"
        ]
      },
      "put": {
        "description": "update productionWorkScheduleAssignment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/productionWorkScheduleAssignment"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "productionWorkScheduleAssignment update response",
            "schema": {
              "$ref": "#/definitions/productionWorkScheduleAssignment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "productionWorkScheduleAssignment"
        ]
      }
    },
    "/project": {
      "get": {
        "description": "query project",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "project response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/project"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "project"
        ]
      },
      "post": {
        "description": "create a project",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/project"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "project create response",
            "schema": {
              "$ref": "#/definitions/project"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "project"
        ]
      }
    },
    "/project/count": {
      "get": {
        "description": "count project",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "project"
        ]
      }
    },
    "/project/id/{id}": {
      "get": {
        "description": "query project",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/project"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "project"
        ]
      },
      "put": {
        "description": "update project",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/project"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "project update response",
            "schema": {
              "$ref": "#/definitions/project"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "project"
        ]
      }
    },
    "/project/id/{id}/extraInfoForApp": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "extraInfoForApp response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/pmProjectExtraInformation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "project"
        ]
      }
    },
    "/projectTask": {
      "get": {
        "description": "query projectTask",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "projectTask response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/projectTask"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "projectTask"
        ]
      },
      "post": {
        "description": "create a projectTask",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectTask"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "projectTask create response",
            "schema": {
              "$ref": "#/definitions/projectTask"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "projectTask"
        ]
      }
    },
    "/projectTask/count": {
      "get": {
        "description": "count projectTask",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "projectTask"
        ]
      }
    },
    "/projectTask/id/{id}": {
      "delete": {
        "description": "delete a projectTask",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "projectTask delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "projectTask"
        ]
      },
      "get": {
        "description": "query projectTask",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/projectTask"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "projectTask"
        ]
      },
      "put": {
        "description": "update projectTask",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectTask"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "projectTask update response",
            "schema": {
              "$ref": "#/definitions/projectTask"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "projectTask"
        ]
      }
    },
    "/propertyTranslation/readPropertyTranslations": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "entityName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "locale",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "propertyNames",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "readPropertyTranslations response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/propertyTranslation"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "propertyTranslation"
        ]
      }
    },
    "/propertyTranslation/updatePropertyTranslations": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "entityName": {
                  "type": "string"
                },
                "entityId": {
                  "type": "string"
                },
                "propertyTranslations": {
                  "items": {
                    "$ref": "#/definitions/propertyTranslation"
                  },
                  "type": "array"
                }
              },
              "required": [
                "entityName",
                "entityId",
                "propertyTranslations"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePropertyTranslations response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/propertyTranslation"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "propertyTranslation"
        ]
      }
    },
    "/purchaseInvoice": {
      "get": {
        "description": "query purchaseInvoice",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "purchaseInvoice response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/purchaseInvoice"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      },
      "post": {
        "description": "create a purchaseInvoice",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseInvoice"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "purchaseInvoice create response",
            "schema": {
              "$ref": "#/definitions/purchaseInvoice"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      }
    },
    "/purchaseInvoice/count": {
      "get": {
        "description": "count purchaseInvoice",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      }
    },
    "/purchaseInvoice/createPurchaseInvoiceWithoutSupplier": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "purchaseInvoice": {
                  "$ref": "#/definitions/purchaseInvoice"
                }
              },
              "required": [
                "purchaseInvoice"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPurchaseInvoiceWithoutSupplier response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      }
    },
    "/purchaseInvoice/id/{id}": {
      "delete": {
        "description": "delete a purchaseInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "purchaseInvoice delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      },
      "get": {
        "description": "query purchaseInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/purchaseInvoice"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      },
      "put": {
        "description": "update purchaseInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseInvoice"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "purchaseInvoice update response",
            "schema": {
              "$ref": "#/definitions/purchaseInvoice"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      }
    },
    "/purchaseInvoice/id/{id}/createContract": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createContract response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/contract"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      }
    },
    "/purchaseInvoice/id/{id}/createCreditNote": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "itemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCreditNote response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      }
    },
    "/purchaseInvoice/id/{id}/downloadLatestPurchaseInvoiceDocument": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestPurchaseInvoiceDocument response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      }
    },
    "/purchaseInvoice/id/{id}/resetTaxes": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resetTaxes response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      }
    },
    "/purchaseInvoice/id/{id}/saveDuplicateInvoiceAsOriginal": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "saveDuplicateInvoiceAsOriginal response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      }
    },
    "/purchaseInvoice/startInvoiceDocumentProcessing": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "startInvoiceDocumentProcessing response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/jobResult"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseInvoice"
        ]
      }
    },
    "/purchaseOpenItem": {
      "get": {
        "description": "query purchaseOpenItem",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "purchaseOpenItem response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/purchaseOpenItem"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOpenItem"
        ]
      }
    },
    "/purchaseOpenItem/count": {
      "get": {
        "description": "count purchaseOpenItem",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOpenItem"
        ]
      }
    },
    "/purchaseOpenItem/id/{id}": {
      "get": {
        "description": "query purchaseOpenItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/purchaseOpenItem"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOpenItem"
        ]
      }
    },
    "/purchaseOpenItem/id/{id}/createPaymentApplication": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "moneyTransactionId": {
                  "type": "string"
                }
              },
              "required": [
                "moneyTransactionId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPaymentApplication response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseOpenItem"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOpenItem"
        ]
      }
    },
    "/purchaseOpenItem/id/{id}/markAsPaid": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "datePaid": {
                  "format": "timestamp",
                  "type": "integer"
                }
              },
              "required": [
                "datePaid"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "markAsPaid response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseOpenItem"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOpenItem"
        ]
      }
    },
    "/purchaseOpenItem/id/{id}/updatePaymentState": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "datePaid": {
                  "format": "timestamp",
                  "type": "integer"
                },
                "paymentState": {
                  "enum": [
                    "PAID",
                    "UNPAID"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "paymentState"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePaymentState response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseOpenItem"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOpenItem"
        ]
      }
    },
    "/purchaseOrder": {
      "get": {
        "description": "query purchaseOrder",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "additionalProperties",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "purchaseOrder response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/purchaseOrder"
                  },
                  "type": "array"
                },
                "additionalProperties": {
                  "properties": {
                    "validPreAdvancePartPaymentInvoices": {
                      "items": {
                        "items": {
                          "$ref": "#/definitions/purchaseInvoice"
                        },
                        "type": "array"
                      },
                      "type": "array"
                    },
                    "validStandardAndFinalInvoices": {
                      "items": {
                        "items": {
                          "$ref": "#/definitions/purchaseInvoice"
                        },
                        "type": "array"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      },
      "post": {
        "description": "create a purchaseOrder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseOrder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "purchaseOrder create response",
            "schema": {
              "$ref": "#/definitions/purchaseOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/count": {
      "get": {
        "description": "count purchaseOrder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/id/{id}": {
      "delete": {
        "description": "delete a purchaseOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "purchaseOrder delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      },
      "get": {
        "description": "query purchaseOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/purchaseOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      },
      "put": {
        "description": "update purchaseOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseOrder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "purchaseOrder update response",
            "schema": {
              "$ref": "#/definitions/purchaseOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/id/{id}/cancelDropshippingShipments": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "shipmentIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "shipmentIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cancelDropshippingShipments response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/id/{id}/createContract": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createContract response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/contract"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/id/{id}/createDropshippingDeliveryNotePdf": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createDropshippingDeliveryNotePdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/id/{id}/createIncomingGoods": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "additionalPurchaseOrderIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createIncomingGoods response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/incomingGoods"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/id/{id}/createPurchaseInvoice": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "invoiceType": {
                  "enum": [
                    "ADVANCE_PAYMENT_INVOICE",
                    "CREDIT_ADVICE",
                    "CREDIT_NOTE",
                    "FINAL_INVOICE",
                    "PART_PAYMENT_INVOICE",
                    "PREPAYMENT_INVOICE",
                    "STANDARD_INVOICE"
                  ],
                  "type": "string"
                },
                "invoiceDate": {
                  "format": "timestamp",
                  "type": "integer"
                },
                "paymentAmount": {
                  "format": "number",
                  "type": "string"
                },
                "isGross": {
                  "type": "boolean"
                },
                "invoiceNumber": {
                  "type": "string"
                },
                "allowExistingInvoiceNumber": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPurchaseInvoice response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/id/{id}/createSupplierReturn": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createSupplierReturn response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/shipment"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/id/{id}/downloadLatestDropshippingDeliveryNotePdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestDropshippingDeliveryNotePdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/id/{id}/downloadLatestPurchaseOrderPdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestPurchaseOrderPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrder/id/{id}/processDropshipping": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "processPurchaseOrderItems": {
                  "items": {
                    "$ref": "#/definitions/processPurchaseOrderItem"
                  },
                  "type": "array"
                },
                "shipmentParameters": {
                  "$ref": "#/definitions/dropshippingShipmentParameters"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "processDropshipping response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/purchaseOrderRequest": {
      "get": {
        "description": "query purchaseOrderRequest",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "purchaseOrderRequest response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/purchaseOrderRequest"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrderRequest"
        ]
      },
      "post": {
        "description": "create a purchaseOrderRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseOrderRequest"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "purchaseOrderRequest create response",
            "schema": {
              "$ref": "#/definitions/purchaseOrderRequest"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrderRequest"
        ]
      }
    },
    "/purchaseOrderRequest/count": {
      "get": {
        "description": "count purchaseOrderRequest",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrderRequest"
        ]
      }
    },
    "/purchaseOrderRequest/id/{id}": {
      "delete": {
        "description": "delete a purchaseOrderRequest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "purchaseOrderRequest delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrderRequest"
        ]
      },
      "get": {
        "description": "query purchaseOrderRequest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/purchaseOrderRequest"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrderRequest"
        ]
      },
      "put": {
        "description": "update purchaseOrderRequest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseOrderRequest"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "purchaseOrderRequest update response",
            "schema": {
              "$ref": "#/definitions/purchaseOrderRequest"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrderRequest"
        ]
      }
    },
    "/purchaseOrderRequest/id/{id}/createBlanketPurchaseOrder": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "offerItemId": {
                  "format": "int32",
                  "type": "integer"
                },
                "orderedQuantity": {
                  "format": "number",
                  "type": "string"
                }
              },
              "required": [
                "offerItemId",
                "orderedQuantity"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createBlanketPurchaseOrder response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/blanketPurchaseOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrderRequest"
        ]
      }
    },
    "/purchaseOrderRequest/id/{id}/createPurchaseOrder": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "offerId": {
                  "format": "int32",
                  "type": "integer"
                },
                "salesOrderId": {
                  "format": "int32",
                  "type": "integer"
                },
                "offerItemToUpdateSupplierInformation": {
                  "items": {
                    "$ref": "#/definitions/purchaseOrderRequestOfferItemInformation_V1"
                  },
                  "type": "array"
                }
              },
              "required": [
                "offerId",
                "offerItemToUpdateSupplierInformation"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPurchaseOrder response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrderRequest"
        ]
      }
    },
    "/purchaseOrderRequest/id/{id}/exportItemsAsCsv": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "supplierId": {
                  "type": "string"
                }
              },
              "required": [
                "supplierId"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "exportItemsAsCsv response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrderRequest"
        ]
      }
    },
    "/purchaseOrderRequest/id/{id}/pushPurchasePrices": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "supplierIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "supplierIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pushPurchasePrices response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseOrderRequest"
        ]
      }
    },
    "/purchaseRequisition": {
      "get": {
        "description": "query purchaseRequisition",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "purchaseRequisition response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/purchaseRequisition"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseRequisition"
        ]
      }
    },
    "/purchaseRequisition/count": {
      "get": {
        "description": "count purchaseRequisition",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseRequisition"
        ]
      }
    },
    "/purchaseRequisition/deleteAllRequisitions": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleteAllRequisitions response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseRequisition"
        ]
      }
    },
    "/purchaseRequisition/id/{id}": {
      "get": {
        "description": "query purchaseRequisition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/purchaseRequisition"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseRequisition"
        ]
      },
      "put": {
        "description": "update purchaseRequisition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseRequisition"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "purchaseRequisition update response",
            "schema": {
              "$ref": "#/definitions/purchaseRequisition"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseRequisition"
        ]
      }
    },
    "/purchaseRequisition/startMaterialPlanningRun": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "warehouseIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "startMaterialPlanningRun response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/jobResult"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "purchaseRequisition"
        ]
      }
    },
    "/quotation": {
      "get": {
        "description": "query quotation",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "quotation response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/quotation"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      },
      "post": {
        "description": "create a quotation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/quotation"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "quotation create response",
            "schema": {
              "$ref": "#/definitions/quotation"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/count": {
      "get": {
        "description": "count quotation",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/createItScopeQuote": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "quoteId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "createItScopeQuote response",
            "schema": {
              "properties": {
                "result": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}": {
      "delete": {
        "description": "delete a quotation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "quotation delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      },
      "get": {
        "description": "query quotation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/quotation"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      },
      "put": {
        "description": "update quotation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/quotation"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "quotation update response",
            "schema": {
              "$ref": "#/definitions/quotation"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/accept": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "acceptQuotationItems": {
                  "items": {
                    "$ref": "#/definitions/acceptQuotationItem"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "accept response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/quotation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/addDefaultScalePricesToItems": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "itemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "itemIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addDefaultScalePricesToItems response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/quotation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/calculateSalesPrices": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "calculationMode": {
                  "enum": [
                    "COST_SURCHARGE",
                    "TARGET_MARGIN"
                  ],
                  "type": "string"
                },
                "percentage": {
                  "format": "number",
                  "type": "string"
                },
                "quotationItemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "calculationMode",
                "percentage"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "calculateSalesPrices response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/quotation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/createNewVersion": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createNewVersion response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/quotation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/createPublicPageLink": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPublicPageLink response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/createPurchaseOrderRequest": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "requestType": {
                  "enum": [
                    "BLANKET_ORDER_REQUEST",
                    "BLANKET_PURCHASE_ORDER_REQUEST",
                    "DROP_SHIPPING_REQUEST",
                    "PURCHASE_ORDER_REQUEST",
                    "SALES_ORDER_COMMISSION_REQUEST"
                  ],
                  "type": "string"
                },
                "warehouseId": {
                  "type": "string"
                },
                "supplierIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "quotationItemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "useItemQuantity": {
                  "type": "boolean"
                },
                "mergeItems": {
                  "type": "boolean"
                }
              },
              "required": [
                "requestType",
                "warehouseId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPurchaseOrderRequest response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseOrderRequest"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/createQuotationPdf": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createQuotationPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/disablePublicPageLink": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "disablePublicPageLink response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/downloadLatestQuotationPdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestQuotationPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/inquire": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "taskId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "inquire response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/quotation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/printQuotationData": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "printQuotationData response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/recalculateCosts": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recalculateCosts response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/quotation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/resetTaxes": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resetTaxes response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/quotation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/setCostsForItemsWithoutCost": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "costUpdateMode": {
                  "enum": [
                    "SET_TO_NET_UNIT_PRICE",
                    "SET_TO_ZERO"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "costUpdateMode"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "setCostsForItemsWithoutCost response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/quotation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/quotation/id/{id}/updatePrices": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePrices response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/quotation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "quotation"
        ]
      }
    },
    "/reasonOfAbsence": {
      "get": {
        "description": "query reasonOfAbsence",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "reasonOfAbsence response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/reasonOfAbsence"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reasonOfAbsence"
        ]
      },
      "post": {
        "description": "create a reasonOfAbsence",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reasonOfAbsence"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "reasonOfAbsence create response",
            "schema": {
              "$ref": "#/definitions/reasonOfAbsence"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reasonOfAbsence"
        ]
      }
    },
    "/reasonOfAbsence/count": {
      "get": {
        "description": "count reasonOfAbsence",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reasonOfAbsence"
        ]
      }
    },
    "/reasonOfAbsence/id/{id}": {
      "delete": {
        "description": "delete a reasonOfAbsence",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "reasonOfAbsence delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reasonOfAbsence"
        ]
      },
      "get": {
        "description": "query reasonOfAbsence",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/reasonOfAbsence"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reasonOfAbsence"
        ]
      },
      "put": {
        "description": "update reasonOfAbsence",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reasonOfAbsence"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "reasonOfAbsence update response",
            "schema": {
              "$ref": "#/definitions/reasonOfAbsence"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reasonOfAbsence"
        ]
      }
    },
    "/recordEmailingRule": {
      "get": {
        "description": "query recordEmailingRule",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "recordEmailingRule response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/recordEmailingRule"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "recordEmailingRule"
        ]
      },
      "post": {
        "description": "create a recordEmailingRule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordEmailingRule"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "recordEmailingRule create response",
            "schema": {
              "$ref": "#/definitions/recordEmailingRule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "recordEmailingRule"
        ]
      }
    },
    "/recordEmailingRule/count": {
      "get": {
        "description": "count recordEmailingRule",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "recordEmailingRule"
        ]
      }
    },
    "/recordEmailingRule/id/{id}": {
      "delete": {
        "description": "delete a recordEmailingRule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "recordEmailingRule delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "recordEmailingRule"
        ]
      },
      "get": {
        "description": "query recordEmailingRule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/recordEmailingRule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "recordEmailingRule"
        ]
      },
      "put": {
        "description": "update recordEmailingRule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordEmailingRule"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "recordEmailingRule update response",
            "schema": {
              "$ref": "#/definitions/recordEmailingRule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "recordEmailingRule"
        ]
      }
    },
    "/region": {
      "get": {
        "description": "query region",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "region response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/region"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "region"
        ]
      },
      "post": {
        "description": "create a region",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/region"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "region create response",
            "schema": {
              "$ref": "#/definitions/region"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "region"
        ]
      }
    },
    "/region/count": {
      "get": {
        "description": "count region",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "region"
        ]
      }
    },
    "/region/id/{id}": {
      "delete": {
        "description": "delete a region",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "region delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "region"
        ]
      },
      "get": {
        "description": "query region",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/region"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "region"
        ]
      },
      "put": {
        "description": "update region",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/region"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "region update response",
            "schema": {
              "$ref": "#/definitions/region"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "region"
        ]
      }
    },
    "/reminder": {
      "get": {
        "description": "query reminder",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "reminder response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/reminder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reminder"
        ]
      },
      "post": {
        "description": "create a reminder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reminder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "reminder create response",
            "schema": {
              "$ref": "#/definitions/reminder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reminder"
        ]
      }
    },
    "/reminder/count": {
      "get": {
        "description": "count reminder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reminder"
        ]
      }
    },
    "/reminder/id/{id}": {
      "delete": {
        "description": "delete a reminder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "reminder delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reminder"
        ]
      },
      "get": {
        "description": "query reminder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/reminder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reminder"
        ]
      },
      "put": {
        "description": "update reminder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reminder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "reminder update response",
            "schema": {
              "$ref": "#/definitions/reminder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "reminder"
        ]
      }
    },
    "/remotePrintJob": {
      "get": {
        "description": "query remotePrintJob",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "remotePrintJob response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/remotePrintJob"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "remotePrintJob"
        ]
      },
      "post": {
        "description": "create a remotePrintJob",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/remotePrintJob"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "remotePrintJob create response",
            "schema": {
              "$ref": "#/definitions/remotePrintJob"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "remotePrintJob"
        ]
      }
    },
    "/remotePrintJob/count": {
      "get": {
        "description": "count remotePrintJob",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "remotePrintJob"
        ]
      }
    },
    "/remotePrintJob/createPrintJobWithDocument": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "weclappOsId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "printerName",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "quantity",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "documentName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentDescription",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "createPrintJobWithDocument response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/remotePrintJob"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "remotePrintJob"
        ]
      }
    },
    "/remotePrintJob/id/{id}": {
      "delete": {
        "description": "delete a remotePrintJob",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "remotePrintJob delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "remotePrintJob"
        ]
      },
      "get": {
        "description": "query remotePrintJob",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/remotePrintJob"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "remotePrintJob"
        ]
      },
      "put": {
        "description": "update remotePrintJob",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/remotePrintJob"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "remotePrintJob update response",
            "schema": {
              "$ref": "#/definitions/remotePrintJob"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "remotePrintJob"
        ]
      }
    },
    "/salesChannel/activeSalesChannels": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "activeSalesChannels response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/salesChannel"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesChannel"
        ]
      }
    },
    "/salesInvoice": {
      "get": {
        "description": "query salesInvoice",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "salesInvoice response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/salesInvoice"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      },
      "post": {
        "description": "create a salesInvoice",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesInvoice"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "salesInvoice create response",
            "schema": {
              "$ref": "#/definitions/salesInvoice"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/count": {
      "get": {
        "description": "count salesInvoice",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}": {
      "delete": {
        "description": "delete a salesInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "salesInvoice delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      },
      "get": {
        "description": "query salesInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/salesInvoice"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      },
      "put": {
        "description": "update salesInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesInvoice"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "salesInvoice update response",
            "schema": {
              "$ref": "#/definitions/salesInvoice"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}/addSalesOrders": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "salesOrderIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "collectiveInvoicePositionPrintType": {
                  "enum": [
                    "ORDER_POSITION_GROUP",
                    "PERFORMANCE_RECORD_POSITION_GROUP",
                    "SHIPMENT_POSITION_GROUP"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "salesOrderIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addSalesOrders response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}/calculateSalesPrices": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "calculationMode": {
                  "enum": [
                    "COST_SURCHARGE",
                    "TARGET_MARGIN"
                  ],
                  "type": "string"
                },
                "percentage": {
                  "format": "number",
                  "type": "string"
                },
                "invoiceItemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "calculationMode",
                "percentage"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "calculateSalesPrices response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}/createContract": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createContract response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/contract"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}/createCreditNote": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "itemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCreditNote response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}/downloadLatestSalesInvoicePdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestSalesInvoicePdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}/recalculateCosts": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recalculateCosts response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}/resetTaxes": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resetTaxes response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}/setCostsForItemsWithoutCost": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "costUpdateMode": {
                  "enum": [
                    "SET_TO_NET_UNIT_PRICE",
                    "SET_TO_ZERO"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "costUpdateMode"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "setCostsForItemsWithoutCost response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}/taxGroups": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "taxGroups response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/taxGroup"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesInvoice/id/{id}/updatePrices": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePrices response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesInvoice"
        ]
      }
    },
    "/salesOpenItem": {
      "get": {
        "description": "query salesOpenItem",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "salesOpenItem response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/salesOpenItem"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOpenItem"
        ]
      }
    },
    "/salesOpenItem/count": {
      "get": {
        "description": "count salesOpenItem",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOpenItem"
        ]
      }
    },
    "/salesOpenItem/id/{id}": {
      "get": {
        "description": "query salesOpenItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/salesOpenItem"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOpenItem"
        ]
      }
    },
    "/salesOpenItem/id/{id}/createPaymentApplication": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "moneyTransactionId": {
                  "type": "string"
                }
              },
              "required": [
                "moneyTransactionId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPaymentApplication response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOpenItem"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOpenItem"
        ]
      }
    },
    "/salesOpenItem/id/{id}/markAsPaid": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "datePaid": {
                  "format": "timestamp",
                  "type": "integer"
                }
              },
              "required": [
                "datePaid"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "markAsPaid response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOpenItem"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOpenItem"
        ]
      }
    },
    "/salesOpenItem/id/{id}/updatePaymentState": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "datePaid": {
                  "format": "timestamp",
                  "type": "integer"
                },
                "paymentState": {
                  "enum": [
                    "PAID",
                    "UNPAID"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "paymentState"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePaymentState response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOpenItem"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOpenItem"
        ]
      }
    },
    "/salesOrder": {
      "get": {
        "description": "query salesOrder",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "additionalProperties",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "salesOrder response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/salesOrder"
                  },
                  "type": "array"
                },
                "additionalProperties": {
                  "properties": {
                    "bookedBillableWork": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "bookedWork": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "costOfServices": {
                      "items": {
                        "$ref": "#/definitions/amount"
                      },
                      "type": "array"
                    },
                    "invoiceableServices": {
                      "items": {
                        "$ref": "#/definitions/amount"
                      },
                      "type": "array"
                    },
                    "invoicedServices": {
                      "items": {
                        "$ref": "#/definitions/amount"
                      },
                      "type": "array"
                    },
                    "notInvoicedServices": {
                      "items": {
                        "$ref": "#/definitions/amount"
                      },
                      "type": "array"
                    },
                    "plannedBillableEffort": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "plannedEffort": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      },
      "post": {
        "description": "create a salesOrder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesOrder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "salesOrder create response",
            "schema": {
              "$ref": "#/definitions/salesOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/calculatePossibleSalesOrder": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "salesOrder": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "required": [
                "salesOrder"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "calculatePossibleSalesOrder response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/calculateSalesOrder": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "salesOrder": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "required": [
                "salesOrder"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "calculateSalesOrder response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/calculateTaxGroups": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "salesOrder": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "required": [
                "salesOrder"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "calculateTaxGroups response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/taxGroup"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/count": {
      "get": {
        "description": "count salesOrder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/defaultValuesForCreate": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "customerId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "responsibleUserId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "defaultValuesForCreate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}": {
      "delete": {
        "description": "delete a salesOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "salesOrder delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      },
      "get": {
        "description": "query salesOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/salesOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      },
      "put": {
        "description": "update salesOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesOrder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "salesOrder update response",
            "schema": {
              "$ref": "#/definitions/salesOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/activateProjectView": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "activateProjectView response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/addItem": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "item": {
                  "$ref": "#/definitions/salesOrderItem"
                }
              },
              "required": [
                "item"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addItem response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/calculateSalesPrices": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "calculationMode": {
                  "enum": [
                    "COST_SURCHARGE",
                    "TARGET_MARGIN"
                  ],
                  "type": "string"
                },
                "percentage": {
                  "format": "number",
                  "type": "string"
                },
                "orderItemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "calculationMode",
                "percentage"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "calculateSalesPrices response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/cancelOrManuallyClose": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cancelOrManuallyClose response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createAdvancePaymentRequest": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createAdvancePaymentRequest response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createContract": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createContract response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/contract"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createCustomerReturn": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "itemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCustomerReturn response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/incomingGoods"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createDropshipping": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "supplierId": {
                  "type": "string"
                },
                "orderItemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "supplierId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createDropshipping response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createPartPaymentInvoice": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPartPaymentInvoice response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createPerformanceRecord": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPerformanceRecord response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/performanceRecord"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createPrepaymentFinalInvoice": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPrepaymentFinalInvoice response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createProductionOrders": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "orderItemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createProductionOrders response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/productionOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createPurchaseOrder": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "supplierId": {
                  "type": "string"
                },
                "warehouseId": {
                  "type": "string"
                },
                "multiplePurchaseOrders": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPurchaseOrder response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/purchaseOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createPurchaseOrderRequest": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "requestType": {
                  "enum": [
                    "BLANKET_ORDER_REQUEST",
                    "BLANKET_PURCHASE_ORDER_REQUEST",
                    "DROP_SHIPPING_REQUEST",
                    "PURCHASE_ORDER_REQUEST",
                    "SALES_ORDER_COMMISSION_REQUEST"
                  ],
                  "type": "string"
                },
                "warehouseId": {
                  "type": "string"
                },
                "supplierIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "orderItemIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "useItemQuantity": {
                  "type": "boolean"
                },
                "mergeItems": {
                  "type": "boolean"
                }
              },
              "required": [
                "requestType",
                "warehouseId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPurchaseOrderRequest response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/purchaseOrderRequest"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createReturnLabels": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createReturnLabels response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/document"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createSalesInvoice": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "additionalSalesOrderIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createSalesInvoice response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createShipment": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "additionalSalesOrderIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createShipment response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/shipment"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/createShippingLabels": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createShippingLabels response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/document"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/downloadLatestOrderConfirmationPdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestOrderConfirmationPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/manuallyClose": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "manuallyClose response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/printOrderData": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "printOrderData response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/recalculateCosts": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recalculateCosts response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/resetTaxes": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resetTaxes response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/setCostsForItemsWithoutCost": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "costUpdateMode": {
                  "enum": [
                    "SET_TO_NET_UNIT_PRICE",
                    "SET_TO_ZERO"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "costUpdateMode"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "setCostsForItemsWithoutCost response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/shipOrderForExternalFulfillment": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "shipOrderForExternalFulfillment response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/taxGroups": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "taxGroups response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/taxGroup"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/toggleProjectTeam": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "toggleProjectTeam response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/toggleServicesFinished": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "toggleServicesFinished response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/id/{id}/updatePrices": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePrices response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/suggestSalesOrdersForDropshippingOrder": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "suggest",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "suggestSalesOrdersForDropshippingOrder response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/salesOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesOrder/suggestSalesOrdersForSalesOrderCommission": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "suggest",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "suggestSalesOrdersForSalesOrderCommission response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/salesOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/salesPipeline": {
      "get": {
        "description": "query salesPipeline",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "salesPipeline response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/salesPipeline"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesPipeline"
        ]
      },
      "post": {
        "description": "create a salesPipeline",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesPipeline"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "salesPipeline create response",
            "schema": {
              "$ref": "#/definitions/salesPipeline"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesPipeline"
        ]
      }
    },
    "/salesPipeline/count": {
      "get": {
        "description": "count salesPipeline",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesPipeline"
        ]
      }
    },
    "/salesPipeline/id/{id}": {
      "delete": {
        "description": "delete a salesPipeline",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "salesPipeline delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesPipeline"
        ]
      },
      "get": {
        "description": "query salesPipeline",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/salesPipeline"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesPipeline"
        ]
      },
      "put": {
        "description": "update salesPipeline",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesPipeline"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "salesPipeline update response",
            "schema": {
              "$ref": "#/definitions/salesPipeline"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesPipeline"
        ]
      }
    },
    "/salesStage": {
      "get": {
        "description": "query salesStage",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "salesStage response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/salesStage"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesStage"
        ]
      },
      "post": {
        "description": "create a salesStage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesStage"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "salesStage create response",
            "schema": {
              "$ref": "#/definitions/salesStage"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesStage"
        ]
      }
    },
    "/salesStage/count": {
      "get": {
        "description": "count salesStage",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesStage"
        ]
      }
    },
    "/salesStage/id/{id}": {
      "delete": {
        "description": "delete a salesStage",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "salesStage delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesStage"
        ]
      },
      "get": {
        "description": "query salesStage",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/salesStage"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesStage"
        ]
      },
      "put": {
        "description": "update salesStage",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesStage"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "salesStage update response",
            "schema": {
              "$ref": "#/definitions/salesStage"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "salesStage"
        ]
      }
    },
    "/search/search": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeEntities",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeHiddenEndpoints",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeMissingEndpoints",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeTextMatches",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "search response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/searchResults"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "search"
        ]
      }
    },
    "/sector": {
      "get": {
        "description": "query sector",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "sector response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sector"
        ]
      },
      "post": {
        "description": "create a sector",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "sector create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sector"
        ]
      }
    },
    "/sector/count": {
      "get": {
        "description": "count sector",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sector"
        ]
      }
    },
    "/sector/id/{id}": {
      "delete": {
        "description": "delete a sector",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "sector delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sector"
        ]
      },
      "get": {
        "description": "query sector",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sector"
        ]
      },
      "put": {
        "description": "update sector",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "sector update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sector"
        ]
      }
    },
    "/sepaDirectDebitMandate": {
      "get": {
        "description": "query sepaDirectDebitMandate",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "sepaDirectDebitMandate response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/sepaDirectDebitMandate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sepaDirectDebitMandate"
        ]
      },
      "post": {
        "description": "create a sepaDirectDebitMandate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sepaDirectDebitMandate"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "sepaDirectDebitMandate create response",
            "schema": {
              "$ref": "#/definitions/sepaDirectDebitMandate"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sepaDirectDebitMandate"
        ]
      }
    },
    "/sepaDirectDebitMandate/count": {
      "get": {
        "description": "count sepaDirectDebitMandate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sepaDirectDebitMandate"
        ]
      }
    },
    "/sepaDirectDebitMandate/id/{id}": {
      "delete": {
        "description": "delete a sepaDirectDebitMandate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "sepaDirectDebitMandate delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sepaDirectDebitMandate"
        ]
      },
      "get": {
        "description": "query sepaDirectDebitMandate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/sepaDirectDebitMandate"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sepaDirectDebitMandate"
        ]
      },
      "put": {
        "description": "update sepaDirectDebitMandate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sepaDirectDebitMandate"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "sepaDirectDebitMandate update response",
            "schema": {
              "$ref": "#/definitions/sepaDirectDebitMandate"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "sepaDirectDebitMandate"
        ]
      }
    },
    "/serialNumber": {
      "get": {
        "description": "query serialNumber",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "serialNumber response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/serialNumber"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "serialNumber"
        ]
      }
    },
    "/serialNumber/count": {
      "get": {
        "description": "count serialNumber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "serialNumber"
        ]
      }
    },
    "/serialNumber/generateSerialNumbersFromNumberRange": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "generateSerialNumbersFromNumberRange response",
            "schema": {
              "properties": {
                "result": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "serialNumber"
        ]
      }
    },
    "/serialNumber/id/{id}": {
      "get": {
        "description": "query serialNumber",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/serialNumber"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "serialNumber"
        ]
      },
      "put": {
        "description": "update serialNumber",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serialNumber"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "serialNumber update response",
            "schema": {
              "$ref": "#/definitions/serialNumber"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "serialNumber"
        ]
      }
    },
    "/settings/read": {
      "get": {
        "description": "read settings",
        "parameters": [
          {
            "in": "query",
            "name": "modules",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "settings readResponse",
            "schema": {
              "properties": {
                "result": {
                  "properties": {
                    "accounting": {
                      "$ref": "#/definitions/accountingSettings"
                    },
                    "article": {
                      "$ref": "#/definitions/articleSettings"
                    },
                    "basic": {
                      "$ref": "#/definitions/basicSettings"
                    },
                    "contract": {
                      "$ref": "#/definitions/contractSettings"
                    },
                    "crm": {
                      "$ref": "#/definitions/crmSettings"
                    },
                    "humanResources": {
                      "$ref": "#/definitions/humanResourcesSettings"
                    },
                    "organizer": {
                      "$ref": "#/definitions/organizerSettings"
                    },
                    "platform": {
                      "$ref": "#/definitions/platformSettings"
                    },
                    "pmProject": {
                      "$ref": "#/definitions/pmProjectSettings"
                    },
                    "purchase": {
                      "$ref": "#/definitions/purchaseSettings"
                    },
                    "sales": {
                      "$ref": "#/definitions/salesSettings"
                    },
                    "salesChannel": {
                      "$ref": "#/definitions/salesChannelsSettings"
                    },
                    "ticket": {
                      "$ref": "#/definitions/ticketSettings"
                    },
                    "timeRecord": {
                      "$ref": "#/definitions/timeRecordSettings"
                    },
                    "view": {
                      "$ref": "#/definitions/viewSettings"
                    },
                    "warehouse": {
                      "$ref": "#/definitions/warehouseSettings"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "settings"
        ]
      }
    },
    "/settings/update": {
      "post": {
        "description": "update settings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "settings": {
                  "properties": {
                    "accounting": {
                      "$ref": "#/definitions/accountingSettings"
                    },
                    "article": {
                      "$ref": "#/definitions/articleSettings"
                    },
                    "basic": {
                      "$ref": "#/definitions/basicSettings"
                    },
                    "contract": {
                      "$ref": "#/definitions/contractSettings"
                    },
                    "crm": {
                      "$ref": "#/definitions/crmSettings"
                    },
                    "humanResources": {
                      "$ref": "#/definitions/humanResourcesSettings"
                    },
                    "organizer": {
                      "$ref": "#/definitions/organizerSettings"
                    },
                    "platform": {
                      "$ref": "#/definitions/platformSettings"
                    },
                    "pmProject": {
                      "$ref": "#/definitions/pmProjectSettings"
                    },
                    "purchase": {
                      "$ref": "#/definitions/purchaseSettings"
                    },
                    "sales": {
                      "$ref": "#/definitions/salesSettings"
                    },
                    "salesChannel": {
                      "$ref": "#/definitions/salesChannelsSettings"
                    },
                    "ticket": {
                      "$ref": "#/definitions/ticketSettings"
                    },
                    "timeRecord": {
                      "$ref": "#/definitions/timeRecordSettings"
                    },
                    "view": {
                      "$ref": "#/definitions/viewSettings"
                    },
                    "warehouse": {
                      "$ref": "#/definitions/warehouseSettings"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "settings updateResponse",
            "schema": {
              "properties": {
                "result": {
                  "properties": {
                    "accounting": {
                      "$ref": "#/definitions/accountingSettings"
                    },
                    "article": {
                      "$ref": "#/definitions/articleSettings"
                    },
                    "basic": {
                      "$ref": "#/definitions/basicSettings"
                    },
                    "contract": {
                      "$ref": "#/definitions/contractSettings"
                    },
                    "crm": {
                      "$ref": "#/definitions/crmSettings"
                    },
                    "humanResources": {
                      "$ref": "#/definitions/humanResourcesSettings"
                    },
                    "organizer": {
                      "$ref": "#/definitions/organizerSettings"
                    },
                    "platform": {
                      "$ref": "#/definitions/platformSettings"
                    },
                    "pmProject": {
                      "$ref": "#/definitions/pmProjectSettings"
                    },
                    "purchase": {
                      "$ref": "#/definitions/purchaseSettings"
                    },
                    "sales": {
                      "$ref": "#/definitions/salesSettings"
                    },
                    "salesChannel": {
                      "$ref": "#/definitions/salesChannelsSettings"
                    },
                    "ticket": {
                      "$ref": "#/definitions/ticketSettings"
                    },
                    "timeRecord": {
                      "$ref": "#/definitions/timeRecordSettings"
                    },
                    "view": {
                      "$ref": "#/definitions/viewSettings"
                    },
                    "warehouse": {
                      "$ref": "#/definitions/warehouseSettings"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "settings"
        ]
      }
    },
    "/shelf": {
      "get": {
        "description": "query shelf",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "shelf response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/shelf"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shelf"
        ]
      },
      "post": {
        "description": "create a shelf",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shelf"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "shelf create response",
            "schema": {
              "$ref": "#/definitions/shelf"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shelf"
        ]
      }
    },
    "/shelf/count": {
      "get": {
        "description": "count shelf",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shelf"
        ]
      }
    },
    "/shelf/id/{id}": {
      "delete": {
        "description": "delete a shelf",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "shelf delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shelf"
        ]
      },
      "get": {
        "description": "query shelf",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/shelf"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shelf"
        ]
      },
      "put": {
        "description": "update shelf",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shelf"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "shelf update response",
            "schema": {
              "$ref": "#/definitions/shelf"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shelf"
        ]
      }
    },
    "/shelf/id/{id}/activate": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "activate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/shelf"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shelf"
        ]
      }
    },
    "/shelf/id/{id}/deactivate": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deactivate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/shelf"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shelf"
        ]
      }
    },
    "/shipment": {
      "get": {
        "description": "query shipment",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "shipment response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/shipment"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      },
      "post": {
        "description": "create a shipment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipment"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "shipment create response",
            "schema": {
              "$ref": "#/definitions/shipment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/count": {
      "get": {
        "description": "count shipment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}": {
      "delete": {
        "description": "delete a shipment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "shipment delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      },
      "get": {
        "description": "query shipment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/shipment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      },
      "put": {
        "description": "update shipment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipment"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "shipment update response",
            "schema": {
              "$ref": "#/definitions/shipment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}/createPickingList": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createPickingList response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}/createReturnLabels": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createReturnLabels response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/document"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}/createSalesInvoice": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createSalesInvoice response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/salesInvoice"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}/createShippingLabelPdf": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "createShippingLabelPdf response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}/createShippingLabels": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createShippingLabels response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/document"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}/downloadLatestDeliveryNotePdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestDeliveryNotePdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}/downloadLatestPickingListPdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestPickingListPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}/downloadLatestShippingLabelPdf": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadLatestShippingLabelPdf response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}/picks": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "picks response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/pickData"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipment/id/{id}/updatePicks": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "picks": {
                  "items": {
                    "$ref": "#/definitions/pickData"
                  },
                  "type": "array"
                },
                "updateShipQuantity": {
                  "type": "boolean"
                }
              },
              "required": [
                "picks",
                "updateShipQuantity"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePicks response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/pickData"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipment"
        ]
      }
    },
    "/shipmentMethod": {
      "get": {
        "description": "query shipmentMethod",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "shipmentMethod response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/shipmentMethod"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentMethod"
        ]
      },
      "post": {
        "description": "create a shipmentMethod",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipmentMethod"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "shipmentMethod create response",
            "schema": {
              "$ref": "#/definitions/shipmentMethod"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentMethod"
        ]
      }
    },
    "/shipmentMethod/count": {
      "get": {
        "description": "count shipmentMethod",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentMethod"
        ]
      }
    },
    "/shipmentMethod/id/{id}": {
      "delete": {
        "description": "delete a shipmentMethod",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "shipmentMethod delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentMethod"
        ]
      },
      "get": {
        "description": "query shipmentMethod",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/shipmentMethod"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentMethod"
        ]
      },
      "put": {
        "description": "update shipmentMethod",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipmentMethod"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "shipmentMethod update response",
            "schema": {
              "$ref": "#/definitions/shipmentMethod"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentMethod"
        ]
      }
    },
    "/shipmentReturnAssessment": {
      "get": {
        "description": "query shipmentReturnAssessment",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "shipmentReturnAssessment response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/shipmentReturnDescription"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnAssessment"
        ]
      },
      "post": {
        "description": "create a shipmentReturnAssessment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "shipmentReturnAssessment create response",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnAssessment"
        ]
      }
    },
    "/shipmentReturnAssessment/count": {
      "get": {
        "description": "count shipmentReturnAssessment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnAssessment"
        ]
      }
    },
    "/shipmentReturnAssessment/id/{id}": {
      "delete": {
        "description": "delete a shipmentReturnAssessment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "shipmentReturnAssessment delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnAssessment"
        ]
      },
      "get": {
        "description": "query shipmentReturnAssessment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnAssessment"
        ]
      },
      "put": {
        "description": "update shipmentReturnAssessment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "shipmentReturnAssessment update response",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnAssessment"
        ]
      }
    },
    "/shipmentReturnError": {
      "get": {
        "description": "query shipmentReturnError",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "shipmentReturnError response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/shipmentReturnDescription"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnError"
        ]
      },
      "post": {
        "description": "create a shipmentReturnError",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "shipmentReturnError create response",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnError"
        ]
      }
    },
    "/shipmentReturnError/count": {
      "get": {
        "description": "count shipmentReturnError",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnError"
        ]
      }
    },
    "/shipmentReturnError/id/{id}": {
      "delete": {
        "description": "delete a shipmentReturnError",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "shipmentReturnError delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnError"
        ]
      },
      "get": {
        "description": "query shipmentReturnError",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnError"
        ]
      },
      "put": {
        "description": "update shipmentReturnError",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "shipmentReturnError update response",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnError"
        ]
      }
    },
    "/shipmentReturnReason": {
      "get": {
        "description": "query shipmentReturnReason",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "shipmentReturnReason response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/shipmentReturnDescription"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnReason"
        ]
      },
      "post": {
        "description": "create a shipmentReturnReason",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "shipmentReturnReason create response",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnReason"
        ]
      }
    },
    "/shipmentReturnReason/count": {
      "get": {
        "description": "count shipmentReturnReason",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnReason"
        ]
      }
    },
    "/shipmentReturnReason/id/{id}": {
      "delete": {
        "description": "delete a shipmentReturnReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "shipmentReturnReason delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnReason"
        ]
      },
      "get": {
        "description": "query shipmentReturnReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnReason"
        ]
      },
      "put": {
        "description": "update shipmentReturnReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "shipmentReturnReason update response",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnReason"
        ]
      }
    },
    "/shipmentReturnRectification": {
      "get": {
        "description": "query shipmentReturnRectification",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "shipmentReturnRectification response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/shipmentReturnDescription"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnRectification"
        ]
      },
      "post": {
        "description": "create a shipmentReturnRectification",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "shipmentReturnRectification create response",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnRectification"
        ]
      }
    },
    "/shipmentReturnRectification/count": {
      "get": {
        "description": "count shipmentReturnRectification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnRectification"
        ]
      }
    },
    "/shipmentReturnRectification/id/{id}": {
      "delete": {
        "description": "delete a shipmentReturnRectification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "shipmentReturnRectification delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnRectification"
        ]
      },
      "get": {
        "description": "query shipmentReturnRectification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnRectification"
        ]
      },
      "put": {
        "description": "update shipmentReturnRectification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "shipmentReturnRectification update response",
            "schema": {
              "$ref": "#/definitions/shipmentReturnDescription"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shipmentReturnRectification"
        ]
      }
    },
    "/shippingCarrier": {
      "get": {
        "description": "query shippingCarrier",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "shippingCarrier response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/shippingCarrier"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shippingCarrier"
        ]
      },
      "post": {
        "description": "create a shippingCarrier",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shippingCarrier"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "shippingCarrier create response",
            "schema": {
              "$ref": "#/definitions/shippingCarrier"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shippingCarrier"
        ]
      }
    },
    "/shippingCarrier/count": {
      "get": {
        "description": "count shippingCarrier",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shippingCarrier"
        ]
      }
    },
    "/shippingCarrier/id/{id}": {
      "delete": {
        "description": "delete a shippingCarrier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "shippingCarrier delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shippingCarrier"
        ]
      },
      "get": {
        "description": "query shippingCarrier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/shippingCarrier"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shippingCarrier"
        ]
      },
      "put": {
        "description": "update shippingCarrier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shippingCarrier"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "shippingCarrier update response",
            "schema": {
              "$ref": "#/definitions/shippingCarrier"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "shippingCarrier"
        ]
      }
    },
    "/stagedMoneyTransaction": {
      "get": {
        "description": "query stagedMoneyTransaction",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "stagedMoneyTransaction response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/stagedMoneyTransaction"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "stagedMoneyTransaction"
        ]
      }
    },
    "/stagedMoneyTransaction/count": {
      "get": {
        "description": "count stagedMoneyTransaction",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "stagedMoneyTransaction"
        ]
      }
    },
    "/stagedMoneyTransaction/id/{id}": {
      "get": {
        "description": "query stagedMoneyTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/stagedMoneyTransaction"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "stagedMoneyTransaction"
        ]
      }
    },
    "/storageLocation": {
      "get": {
        "description": "query storageLocation",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "storageLocation response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/storageLocation"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storageLocation"
        ]
      },
      "post": {
        "description": "create a storageLocation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageLocation"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "storageLocation create response",
            "schema": {
              "$ref": "#/definitions/storageLocation"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storageLocation"
        ]
      }
    },
    "/storageLocation/count": {
      "get": {
        "description": "count storageLocation",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storageLocation"
        ]
      }
    },
    "/storageLocation/id/{id}": {
      "delete": {
        "description": "delete a storageLocation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "storageLocation delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storageLocation"
        ]
      },
      "get": {
        "description": "query storageLocation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/storageLocation"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storageLocation"
        ]
      },
      "put": {
        "description": "update storageLocation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageLocation"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "storageLocation update response",
            "schema": {
              "$ref": "#/definitions/storageLocation"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storageLocation"
        ]
      }
    },
    "/storageLocation/id/{id}/activate": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "activate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/storageLocation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storageLocation"
        ]
      }
    },
    "/storageLocation/id/{id}/deactivate": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deactivate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/storageLocation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storageLocation"
        ]
      }
    },
    "/storagePlace": {
      "get": {
        "description": "query storagePlace",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "storagePlace response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/storagePlace"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlace"
        ]
      }
    },
    "/storagePlace/count": {
      "get": {
        "description": "count storagePlace",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlace"
        ]
      }
    },
    "/storagePlace/id/{id}": {
      "get": {
        "description": "query storagePlace",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/storagePlace"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlace"
        ]
      }
    },
    "/storagePlaceBlockingReason": {
      "get": {
        "description": "query storagePlaceBlockingReason",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "storagePlaceBlockingReason response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceBlockingReason"
        ]
      },
      "post": {
        "description": "create a storagePlaceBlockingReason",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "storagePlaceBlockingReason create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceBlockingReason"
        ]
      }
    },
    "/storagePlaceBlockingReason/count": {
      "get": {
        "description": "count storagePlaceBlockingReason",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceBlockingReason"
        ]
      }
    },
    "/storagePlaceBlockingReason/id/{id}": {
      "delete": {
        "description": "delete a storagePlaceBlockingReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "storagePlaceBlockingReason delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceBlockingReason"
        ]
      },
      "get": {
        "description": "query storagePlaceBlockingReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceBlockingReason"
        ]
      },
      "put": {
        "description": "update storagePlaceBlockingReason",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "storagePlaceBlockingReason update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceBlockingReason"
        ]
      }
    },
    "/storagePlaceSize": {
      "get": {
        "description": "query storagePlaceSize",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "storagePlaceSize response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/storagePlaceSize"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceSize"
        ]
      },
      "post": {
        "description": "create a storagePlaceSize",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePlaceSize"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "storagePlaceSize create response",
            "schema": {
              "$ref": "#/definitions/storagePlaceSize"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceSize"
        ]
      }
    },
    "/storagePlaceSize/count": {
      "get": {
        "description": "count storagePlaceSize",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceSize"
        ]
      }
    },
    "/storagePlaceSize/id/{id}": {
      "delete": {
        "description": "delete a storagePlaceSize",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "storagePlaceSize delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceSize"
        ]
      },
      "get": {
        "description": "query storagePlaceSize",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/storagePlaceSize"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceSize"
        ]
      },
      "put": {
        "description": "update storagePlaceSize",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePlaceSize"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "storagePlaceSize update response",
            "schema": {
              "$ref": "#/definitions/storagePlaceSize"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "storagePlaceSize"
        ]
      }
    },
    "/supplier": {
      "get": {
        "description": "query supplier",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "supplier response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/supplier"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "supplier"
        ]
      },
      "post": {
        "description": "create a supplier",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/supplier"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "supplier create response",
            "schema": {
              "$ref": "#/definitions/supplier"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "supplier"
        ]
      }
    },
    "/supplier/count": {
      "get": {
        "description": "count supplier",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "supplier"
        ]
      }
    },
    "/supplier/id/{id}": {
      "delete": {
        "description": "delete a supplier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "supplier delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "supplier"
        ]
      },
      "get": {
        "description": "query supplier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/supplier"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "supplier"
        ]
      },
      "put": {
        "description": "update supplier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/supplier"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "supplier update response",
            "schema": {
              "$ref": "#/definitions/supplier"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "supplier"
        ]
      }
    },
    "/supplier/id/{id}/downloadImage": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "downloadImage response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "supplier"
        ]
      }
    },
    "/supplier/id/{id}/uploadImage": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "uploadImage response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "supplier"
        ]
      }
    },
    "/system/activeFeatures": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "activeFeatures response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/createDemoTestSystem": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "preset": {
                  "enum": [
                    "NONE",
                    "PROD_SYSTEM",
                    "TEMPLATE_SYSTEM"
                  ],
                  "type": "string"
                },
                "allUsers": {
                  "type": "boolean"
                }
              },
              "required": [
                "label",
                "preset"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createDemoTestSystem response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/createSupportTicket": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "subject": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "additionalComment": {
                  "type": "string"
                },
                "categoryId": {
                  "type": "string"
                }
              },
              "required": [
                "subject",
                "description",
                "categoryId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createSupportTicket response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/customRequiredFields": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "customRequiredFields response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/demoTestSystemInfo": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "demoTestSystemInfo response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/demoTestSystemInfo"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/info": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "info response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/systemInfo"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/intercomSettings": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "intercomSettings response",
            "schema": {
              "properties": {
                "result": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/licenses": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "licenses response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/license"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/log": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "logMessages": {
                  "items": {
                    "$ref": "#/definitions/logMessage"
                  },
                  "type": "array"
                }
              },
              "required": [
                "logMessages"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "log response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/otherTenants": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "otherTenants response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/otherTenant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/permissions": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "permissions response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/system/ticketCategories": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "ticketCategories response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticketCategory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/tag": {
      "get": {
        "description": "query tag",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "tag response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/tag"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tag"
        ]
      },
      "post": {
        "description": "create a tag",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tag"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "tag create response",
            "schema": {
              "$ref": "#/definitions/tag"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tag"
        ]
      }
    },
    "/tag/count": {
      "get": {
        "description": "count tag",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tag"
        ]
      }
    },
    "/tag/id/{id}": {
      "delete": {
        "description": "delete a tag",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "tag delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tag"
        ]
      },
      "get": {
        "description": "query tag",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/tag"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tag"
        ]
      },
      "put": {
        "description": "update tag",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tag"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "tag update response",
            "schema": {
              "$ref": "#/definitions/tag"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tag"
        ]
      }
    },
    "/task": {
      "get": {
        "description": "query task",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "additionalProperties",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "task response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/task"
                  },
                  "type": "array"
                },
                "additionalProperties": {
                  "properties": {
                    "bookedBillableWork": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "bookedWork": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "costOfServices": {
                      "items": {
                        "$ref": "#/definitions/amount"
                      },
                      "type": "array"
                    },
                    "fullPositionNumber": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "orderItemNumber": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "post": {
        "description": "create a task",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/task"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "task create response",
            "schema": {
              "$ref": "#/definitions/task"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/task/count": {
      "get": {
        "description": "count task",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/task/createWithCalendar": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "task": {
                  "$ref": "#/definitions/task"
                },
                "calendarId": {
                  "type": "string"
                }
              },
              "required": [
                "task",
                "calendarId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createWithCalendar response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/task"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/task/getFromTemplate": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "templateId": {
                  "type": "string"
                }
              },
              "required": [
                "templateId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "getFromTemplate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/task"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/task/id/{id}": {
      "delete": {
        "description": "delete a task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "task delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "get": {
        "description": "query task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/task"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "put": {
        "description": "update task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/task"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "task update response",
            "schema": {
              "$ref": "#/definitions/task"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/task/id/{id}/createPerformanceRecord": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPerformanceRecord response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/performanceRecord"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/task/id/{id}/moveTask": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentTaskId": {
                  "format": "int32",
                  "type": "integer"
                },
                "orderItemId": {
                  "format": "int32",
                  "type": "integer"
                },
                "ticketId": {
                  "format": "int32",
                  "type": "integer"
                },
                "positionNumber": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "moveTask response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/task"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/task/id/{id}/updateWithCalendar": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "calendarId": {
                  "type": "string"
                },
                "task": {
                  "$ref": "#/definitions/task"
                }
              },
              "required": [
                "calendarId",
                "task"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateWithCalendar response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/task"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/task/suggestArticles": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "customerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "suggestArticles response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/article"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/task/suggestParentTasks": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "suggestParentTasks response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/task"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/task/suggestPreviousTasks": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limitToTaskOwner",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "suggestPreviousTasks response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/task"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "task"
        ]
      }
    },
    "/taskList": {
      "get": {
        "description": "query taskList",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "taskList response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/taskList"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskList"
        ]
      },
      "post": {
        "description": "create a taskList",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskList"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "taskList create response",
            "schema": {
              "$ref": "#/definitions/taskList"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskList"
        ]
      }
    },
    "/taskList/count": {
      "get": {
        "description": "count taskList",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskList"
        ]
      }
    },
    "/taskList/id/{id}": {
      "delete": {
        "description": "delete a taskList",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "taskList delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskList"
        ]
      },
      "get": {
        "description": "query taskList",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/taskList"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskList"
        ]
      },
      "put": {
        "description": "update taskList",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskList"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "taskList update response",
            "schema": {
              "$ref": "#/definitions/taskList"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskList"
        ]
      }
    },
    "/taskTemplate": {
      "get": {
        "description": "query taskTemplate",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "taskTemplate response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/taskTemplate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTemplate"
        ]
      },
      "post": {
        "description": "create a taskTemplate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskTemplate"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "taskTemplate create response",
            "schema": {
              "$ref": "#/definitions/taskTemplate"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTemplate"
        ]
      }
    },
    "/taskTemplate/count": {
      "get": {
        "description": "count taskTemplate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTemplate"
        ]
      }
    },
    "/taskTemplate/id/{id}": {
      "delete": {
        "description": "delete a taskTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "taskTemplate delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTemplate"
        ]
      },
      "get": {
        "description": "query taskTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/taskTemplate"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTemplate"
        ]
      },
      "put": {
        "description": "update taskTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskTemplate"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "taskTemplate update response",
            "schema": {
              "$ref": "#/definitions/taskTemplate"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTemplate"
        ]
      }
    },
    "/taskTopic": {
      "get": {
        "description": "query taskTopic",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "taskTopic response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTopic"
        ]
      },
      "post": {
        "description": "create a taskTopic",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "taskTopic create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTopic"
        ]
      }
    },
    "/taskTopic/count": {
      "get": {
        "description": "count taskTopic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTopic"
        ]
      }
    },
    "/taskTopic/id/{id}": {
      "delete": {
        "description": "delete a taskTopic",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "taskTopic delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTopic"
        ]
      },
      "get": {
        "description": "query taskTopic",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTopic"
        ]
      },
      "put": {
        "description": "update taskTopic",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "taskTopic update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskTopic"
        ]
      }
    },
    "/taskType": {
      "get": {
        "description": "query taskType",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "taskType response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskType"
        ]
      },
      "post": {
        "description": "create a taskType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "taskType create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskType"
        ]
      }
    },
    "/taskType/count": {
      "get": {
        "description": "count taskType",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskType"
        ]
      }
    },
    "/taskType/id/{id}": {
      "delete": {
        "description": "delete a taskType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "taskType delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskType"
        ]
      },
      "get": {
        "description": "query taskType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskType"
        ]
      },
      "put": {
        "description": "update taskType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "taskType update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taskType"
        ]
      }
    },
    "/tax": {
      "get": {
        "description": "query tax",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "tax response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/tax"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      },
      "post": {
        "description": "create a tax",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tax"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "tax create response",
            "schema": {
              "$ref": "#/definitions/tax"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      }
    },
    "/tax/configurePurchaseTaxes": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "countryCode": {
                  "type": "string"
                }
              },
              "required": [
                "countryCode"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "configurePurchaseTaxes response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      }
    },
    "/tax/configureSalesTaxes": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "countryCode": {
                  "type": "string"
                },
                "personsThirdCountryFreeTax": {
                  "type": "boolean"
                },
                "taxEuPersonsRecipientCountry": {
                  "type": "boolean"
                }
              },
              "required": [
                "countryCode",
                "personsThirdCountryFreeTax",
                "taxEuPersonsRecipientCountry"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "configureSalesTaxes response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      }
    },
    "/tax/count": {
      "get": {
        "description": "count tax",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      }
    },
    "/tax/findPurchaseTax": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "recipientCountryCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dispatchCountryCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "taxRateType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "partyType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "debtorCreditorCodeId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productCodeId",
            "required": false,
            "type": "string"
          },
          {
            "format": "timestamp",
            "in": "query",
            "name": "date",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "findPurchaseTax response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/tax"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      }
    },
    "/tax/findSalesTax": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "dispatchCountryCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "recipientCountryCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "taxRateType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "partyType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "debtorCreditorCodeId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productCodeId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "validVatId",
            "required": false,
            "type": "boolean"
          },
          {
            "format": "timestamp",
            "in": "query",
            "name": "date",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "findSalesTax response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/tax"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      }
    },
    "/tax/id/{id}": {
      "delete": {
        "description": "delete a tax",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "tax delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      },
      "get": {
        "description": "query tax",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/tax"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      },
      "put": {
        "description": "update tax",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tax"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "tax update response",
            "schema": {
              "$ref": "#/definitions/tax"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      }
    },
    "/tax/resetSystemTaxes": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "countryCode": {
                  "type": "string"
                },
                "personsThirdCountryFreeTax": {
                  "type": "boolean"
                },
                "initAllStores": {
                  "type": "boolean"
                },
                "taxRecipientCountry": {
                  "type": "boolean"
                }
              },
              "required": [
                "countryCode",
                "personsThirdCountryFreeTax",
                "initAllStores",
                "taxRecipientCountry"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resetSystemTaxes response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/successResponse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "tax"
        ]
      }
    },
    "/taxDeterminationRule": {
      "get": {
        "description": "query taxDeterminationRule",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "taxDeterminationRule response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/taxDeterminationRule"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taxDeterminationRule"
        ]
      },
      "post": {
        "description": "create a taxDeterminationRule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxDeterminationRule"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "taxDeterminationRule create response",
            "schema": {
              "$ref": "#/definitions/taxDeterminationRule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taxDeterminationRule"
        ]
      }
    },
    "/taxDeterminationRule/count": {
      "get": {
        "description": "count taxDeterminationRule",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taxDeterminationRule"
        ]
      }
    },
    "/taxDeterminationRule/id/{id}": {
      "delete": {
        "description": "delete a taxDeterminationRule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "taxDeterminationRule delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taxDeterminationRule"
        ]
      },
      "get": {
        "description": "query taxDeterminationRule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/taxDeterminationRule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taxDeterminationRule"
        ]
      },
      "put": {
        "description": "update taxDeterminationRule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxDeterminationRule"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "taxDeterminationRule update response",
            "schema": {
              "$ref": "#/definitions/taxDeterminationRule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "taxDeterminationRule"
        ]
      }
    },
    "/termOfPayment": {
      "get": {
        "description": "query termOfPayment",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "termOfPayment response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/termOfPayment"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "termOfPayment"
        ]
      },
      "post": {
        "description": "create a termOfPayment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/termOfPayment"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "termOfPayment create response",
            "schema": {
              "$ref": "#/definitions/termOfPayment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "termOfPayment"
        ]
      }
    },
    "/termOfPayment/count": {
      "get": {
        "description": "count termOfPayment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "termOfPayment"
        ]
      }
    },
    "/termOfPayment/id/{id}": {
      "delete": {
        "description": "delete a termOfPayment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "termOfPayment delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "termOfPayment"
        ]
      },
      "get": {
        "description": "query termOfPayment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/termOfPayment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "termOfPayment"
        ]
      },
      "put": {
        "description": "update termOfPayment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/termOfPayment"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "termOfPayment update response",
            "schema": {
              "$ref": "#/definitions/termOfPayment"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "termOfPayment"
        ]
      }
    },
    "/textModule": {
      "get": {
        "description": "query textModule",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "textModule response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/textModule"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "textModule"
        ]
      }
    },
    "/textModule/count": {
      "get": {
        "description": "count textModule",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "textModule"
        ]
      }
    },
    "/textModule/id/{id}": {
      "get": {
        "description": "query textModule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/textModule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "textModule"
        ]
      }
    },
    "/ticket": {
      "get": {
        "description": "query ticket",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "additionalProperties",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ticket response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticket"
                  },
                  "type": "array"
                },
                "additionalProperties": {
                  "properties": {
                    "assignmentTime": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "billableTime": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "costOfServices": {
                      "items": {
                        "$ref": "#/definitions/amount"
                      },
                      "type": "array"
                    },
                    "invoiceableTime": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "processTime": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "resolutionTime": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "responseTime": {
                      "items": {
                        "$ref": "#/definitions/duration"
                      },
                      "type": "array"
                    },
                    "tasksCompleted": {
                      "items": {
                        "type": "boolean"
                      },
                      "type": "array"
                    },
                    "tasksCompletedPercentage": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      },
      "post": {
        "description": "create a ticket",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "ticket create response",
            "schema": {
              "$ref": "#/definitions/ticket"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/addContractIfFound": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ticket": {
                  "$ref": "#/definitions/ticket"
                }
              },
              "required": [
                "ticket"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addContractIfFound response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/ticket"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/configuration": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "configuration response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/ticketConfiguration"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/count": {
      "get": {
        "description": "count ticket",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/createWithCopyTasks": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ticket": {
                  "$ref": "#/definitions/ticket"
                },
                "sourceTicketId": {
                  "type": "string"
                }
              },
              "required": [
                "ticket",
                "sourceTicketId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createWithCopyTasks response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/ticket"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/getFromTemplate": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "templateId": {
                  "type": "string"
                }
              },
              "required": [
                "templateId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "getFromTemplate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/ticket"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/id/{id}": {
      "delete": {
        "description": "delete a ticket",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "ticket delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      },
      "get": {
        "description": "query ticket",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/ticket"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      },
      "put": {
        "description": "update ticket",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ticket update response",
            "schema": {
              "$ref": "#/definitions/ticket"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/id/{id}/createPerformanceRecord": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPerformanceRecord response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/performanceRecord"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/id/{id}/createPublicPage": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPublicPage response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/ticket"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/id/{id}/disablePublicPage": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "disablePublicPage response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/ticket"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/id/{id}/extraInfoForApp": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "extraInfoForApp response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/ticketExtraInformation"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/id/{id}/linkSalesOrder": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "salesOrderId": {
                  "format": "int32",
                  "type": "integer"
                },
                "taskIdToOrderItemId": {
                  "type": "object"
                }
              },
              "required": [
                "salesOrderId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "linkSalesOrder response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/ticket"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/id/{id}/unlinkSalesOrder": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "unlinkSalesOrder response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/ticket"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/stateStatistic": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "stateStatistic response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticketGroupByStatusReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticket/ticketingUsers": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "ticketingUsers response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/onlyId"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticket"
        ]
      }
    },
    "/ticketAssignmentRule": {
      "get": {
        "description": "query ticketAssignmentRule",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketAssignmentRule response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticketAssignmentRule"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketAssignmentRule"
        ]
      },
      "post": {
        "description": "create a ticketAssignmentRule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticketAssignmentRule"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "ticketAssignmentRule create response",
            "schema": {
              "$ref": "#/definitions/ticketAssignmentRule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketAssignmentRule"
        ]
      }
    },
    "/ticketAssignmentRule/count": {
      "get": {
        "description": "count ticketAssignmentRule",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketAssignmentRule"
        ]
      }
    },
    "/ticketAssignmentRule/id/{id}": {
      "delete": {
        "description": "delete a ticketAssignmentRule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "ticketAssignmentRule delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketAssignmentRule"
        ]
      },
      "get": {
        "description": "query ticketAssignmentRule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/ticketAssignmentRule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketAssignmentRule"
        ]
      },
      "put": {
        "description": "update ticketAssignmentRule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticketAssignmentRule"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketAssignmentRule update response",
            "schema": {
              "$ref": "#/definitions/ticketAssignmentRule"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketAssignmentRule"
        ]
      }
    },
    "/ticketCategory": {
      "get": {
        "description": "query ticketCategory",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketCategory response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticketCategory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketCategory"
        ]
      }
    },
    "/ticketCategory/count": {
      "get": {
        "description": "count ticketCategory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketCategory"
        ]
      }
    },
    "/ticketCategory/id/{id}": {
      "get": {
        "description": "query ticketCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/ticketCategory"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketCategory"
        ]
      }
    },
    "/ticketChannel": {
      "get": {
        "description": "query ticketChannel",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketChannel response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketChannel"
        ]
      },
      "post": {
        "description": "create a ticketChannel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "ticketChannel create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketChannel"
        ]
      }
    },
    "/ticketChannel/count": {
      "get": {
        "description": "count ticketChannel",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketChannel"
        ]
      }
    },
    "/ticketChannel/id/{id}": {
      "delete": {
        "description": "delete a ticketChannel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "ticketChannel delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketChannel"
        ]
      },
      "get": {
        "description": "query ticketChannel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketChannel"
        ]
      },
      "put": {
        "description": "update ticketChannel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketChannel update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketChannel"
        ]
      }
    },
    "/ticketFaq": {
      "get": {
        "description": "query ticketFaq",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketFaq response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticketFaq"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketFaq"
        ]
      },
      "post": {
        "description": "create a ticketFaq",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticketFaq"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "ticketFaq create response",
            "schema": {
              "$ref": "#/definitions/ticketFaq"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketFaq"
        ]
      }
    },
    "/ticketFaq/count": {
      "get": {
        "description": "count ticketFaq",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketFaq"
        ]
      }
    },
    "/ticketFaq/id/{id}": {
      "delete": {
        "description": "delete a ticketFaq",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "ticketFaq delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketFaq"
        ]
      },
      "get": {
        "description": "query ticketFaq",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/ticketFaq"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketFaq"
        ]
      },
      "put": {
        "description": "update ticketFaq",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticketFaq"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketFaq update response",
            "schema": {
              "$ref": "#/definitions/ticketFaq"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketFaq"
        ]
      }
    },
    "/ticketPoolingGroup": {
      "get": {
        "description": "query ticketPoolingGroup",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketPoolingGroup response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticketPoolingGroup"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketPoolingGroup"
        ]
      }
    },
    "/ticketPoolingGroup/count": {
      "get": {
        "description": "count ticketPoolingGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketPoolingGroup"
        ]
      }
    },
    "/ticketPoolingGroup/id/{id}": {
      "get": {
        "description": "query ticketPoolingGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/ticketPoolingGroup"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketPoolingGroup"
        ]
      }
    },
    "/ticketPriority": {
      "get": {
        "description": "query ticketPriority",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketPriority response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticketPriority"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketPriority"
        ]
      }
    },
    "/ticketPriority/count": {
      "get": {
        "description": "count ticketPriority",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketPriority"
        ]
      }
    },
    "/ticketPriority/id/{id}": {
      "get": {
        "description": "query ticketPriority",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/ticketPriority"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketPriority"
        ]
      }
    },
    "/ticketServiceLevelAgreement": {
      "get": {
        "description": "query ticketServiceLevelAgreement",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketServiceLevelAgreement response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticketServiceLevelAgreement"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketServiceLevelAgreement"
        ]
      },
      "post": {
        "description": "create a ticketServiceLevelAgreement",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticketServiceLevelAgreement"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "ticketServiceLevelAgreement create response",
            "schema": {
              "$ref": "#/definitions/ticketServiceLevelAgreement"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketServiceLevelAgreement"
        ]
      }
    },
    "/ticketServiceLevelAgreement/count": {
      "get": {
        "description": "count ticketServiceLevelAgreement",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketServiceLevelAgreement"
        ]
      }
    },
    "/ticketServiceLevelAgreement/id/{id}": {
      "delete": {
        "description": "delete a ticketServiceLevelAgreement",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "ticketServiceLevelAgreement delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketServiceLevelAgreement"
        ]
      },
      "get": {
        "description": "query ticketServiceLevelAgreement",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/ticketServiceLevelAgreement"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketServiceLevelAgreement"
        ]
      },
      "put": {
        "description": "update ticketServiceLevelAgreement",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticketServiceLevelAgreement"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketServiceLevelAgreement update response",
            "schema": {
              "$ref": "#/definitions/ticketServiceLevelAgreement"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketServiceLevelAgreement"
        ]
      }
    },
    "/ticketStatus": {
      "get": {
        "description": "query ticketStatus",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketStatus response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticketStatus"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketStatus"
        ]
      },
      "post": {
        "description": "create a ticketStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticketStatus"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "ticketStatus create response",
            "schema": {
              "$ref": "#/definitions/ticketStatus"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketStatus"
        ]
      }
    },
    "/ticketStatus/count": {
      "get": {
        "description": "count ticketStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketStatus"
        ]
      }
    },
    "/ticketStatus/id/{id}": {
      "delete": {
        "description": "delete a ticketStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "ticketStatus delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketStatus"
        ]
      },
      "get": {
        "description": "query ticketStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/ticketStatus"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketStatus"
        ]
      },
      "put": {
        "description": "update ticketStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticketStatus"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketStatus update response",
            "schema": {
              "$ref": "#/definitions/ticketStatus"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketStatus"
        ]
      }
    },
    "/ticketType": {
      "get": {
        "description": "query ticketType",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketType response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/ticketType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketType"
        ]
      },
      "post": {
        "description": "create a ticketType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticketType"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "ticketType create response",
            "schema": {
              "$ref": "#/definitions/ticketType"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketType"
        ]
      }
    },
    "/ticketType/count": {
      "get": {
        "description": "count ticketType",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketType"
        ]
      }
    },
    "/ticketType/id/{id}": {
      "delete": {
        "description": "delete a ticketType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "ticketType delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketType"
        ]
      },
      "get": {
        "description": "query ticketType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/ticketType"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketType"
        ]
      },
      "put": {
        "description": "update ticketType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticketType"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ticketType update response",
            "schema": {
              "$ref": "#/definitions/ticketType"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "ticketType"
        ]
      }
    },
    "/timeRecord": {
      "get": {
        "description": "query timeRecord",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "additionalProperties",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "timeRecord response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/timeRecord"
                  },
                  "type": "array"
                },
                "additionalProperties": {
                  "properties": {
                    "costOfServices": {
                      "items": {
                        "$ref": "#/definitions/amount"
                      },
                      "type": "array"
                    },
                    "netValue": {
                      "items": {
                        "format": "number",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      },
      "post": {
        "description": "create a timeRecord",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/timeRecord"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "timeRecord create response",
            "schema": {
              "$ref": "#/definitions/timeRecord"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      }
    },
    "/timeRecord/configuration": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "configuration response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/timeRecordConfiguration"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      }
    },
    "/timeRecord/count": {
      "get": {
        "description": "count timeRecord",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      }
    },
    "/timeRecord/createWithExistingTask": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "timeRecord": {
                  "$ref": "#/definitions/timeRecord"
                },
                "articleId": {
                  "type": "string"
                }
              },
              "required": [
                "timeRecord"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createWithExistingTask response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/timeRecord"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      }
    },
    "/timeRecord/createWithNewTask": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "timeRecord": {
                  "$ref": "#/definitions/timeRecord"
                },
                "articleId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "ticketId": {
                  "type": "string"
                },
                "taskSubject": {
                  "type": "string"
                }
              },
              "required": [
                "timeRecord",
                "taskSubject"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createWithNewTask response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/timeRecord"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      }
    },
    "/timeRecord/id/{id}": {
      "delete": {
        "description": "delete a timeRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "timeRecord delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      },
      "get": {
        "description": "query timeRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/timeRecord"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      },
      "put": {
        "description": "update timeRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/timeRecord"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "timeRecord update response",
            "schema": {
              "$ref": "#/definitions/timeRecord"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      }
    },
    "/timeRecord/suggestBookingOnEntities": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "bookingViewType",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLegacy",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "optionalLegacyTaskId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "suggestBookingOnEntities response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/suggestReferencesResults"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      }
    },
    "/timeRecord/suggestSalesOrderItems": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "salesOrderId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeEntities",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "suggestSalesOrderItems response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/suggestReferencesResults"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      }
    },
    "/timeRecord/suggestSalesOrders": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "customerId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeEntities",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "suggestSalesOrders response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/suggestReferencesResults"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      }
    },
    "/timeRecord/suggestTasks": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "salesOrderId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "salesOrderItemId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "referenceEntityName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "referenceEntityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeEntities",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "suggestTasks response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/suggestReferencesResults"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "timeRecord"
        ]
      }
    },
    "/title": {
      "get": {
        "description": "query title",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "title response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/customValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "title"
        ]
      },
      "post": {
        "description": "create a title",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "title create response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "title"
        ]
      }
    },
    "/title/count": {
      "get": {
        "description": "count title",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "title"
        ]
      }
    },
    "/title/id/{id}": {
      "delete": {
        "description": "delete a title",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "title delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "title"
        ]
      },
      "get": {
        "description": "query title",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "title"
        ]
      },
      "put": {
        "description": "update title",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "title update response",
            "schema": {
              "$ref": "#/definitions/customValue"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "title"
        ]
      }
    },
    "/translation": {
      "get": {
        "description": "query translation",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "translation response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/translation"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "translation"
        ]
      },
      "post": {
        "description": "create a translation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/translation"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "translation create response",
            "schema": {
              "$ref": "#/definitions/translation"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "translation"
        ]
      }
    },
    "/translation/count": {
      "get": {
        "description": "count translation",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "translation"
        ]
      }
    },
    "/translation/id/{id}": {
      "delete": {
        "description": "delete a translation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "translation delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "translation"
        ]
      },
      "get": {
        "description": "query translation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/translation"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "translation"
        ]
      },
      "put": {
        "description": "update translation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/translation"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "translation update response",
            "schema": {
              "$ref": "#/definitions/translation"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "translation"
        ]
      }
    },
    "/transportationOrder": {
      "get": {
        "description": "query transportationOrder",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "transportationOrder response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/transportationOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      },
      "post": {
        "description": "create a transportationOrder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transportationOrder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "transportationOrder create response",
            "schema": {
              "$ref": "#/definitions/transportationOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      }
    },
    "/transportationOrder/count": {
      "get": {
        "description": "count transportationOrder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      }
    },
    "/transportationOrder/id/{id}": {
      "delete": {
        "description": "delete a transportationOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "transportationOrder delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      },
      "get": {
        "description": "query transportationOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/transportationOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      },
      "put": {
        "description": "update transportationOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transportationOrder"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "transportationOrder update response",
            "schema": {
              "$ref": "#/definitions/transportationOrder"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      }
    },
    "/transportationOrder/id/{id}/createPick": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "packagingUnitBaseArticleId": {
                  "type": "string"
                },
                "storagePlaceId": {
                  "type": "string"
                },
                "internalTransportReferenceId": {
                  "type": "string"
                },
                "batchNumber": {
                  "type": "string"
                },
                "orderItemId": {
                  "type": "string"
                },
                "quantity": {
                  "format": "number",
                  "type": "string"
                },
                "serialNumbers": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "existingReservations": {
                  "items": {
                    "$ref": "#/definitions/existingReservation"
                  },
                  "type": "array"
                }
              },
              "required": [
                "packagingUnitBaseArticleId",
                "storagePlaceId",
                "quantity"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPick response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/transportationOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      }
    },
    "/transportationOrder/id/{id}/createPickingList": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createPickingList response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      }
    },
    "/transportationOrder/id/{id}/createTransportationOrderFromUnpickedRecords": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "loadingEquipmentArticleId": {
                  "type": "string"
                },
                "loadingEquipmentIdentifierId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createTransportationOrderFromUnpickedRecords response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/transportationOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      }
    },
    "/transportationOrder/id/{id}/internalTransportReferencesForPickUp": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ignoreCurrentLoadingEquipment",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "internalTransportReferencesForPickUp response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/internalTransportReference"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      }
    },
    "/transportationOrder/id/{id}/pickPick": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "pickId": {
                  "type": "string"
                },
                "inputQuantity": {
                  "format": "number",
                  "type": "string"
                },
                "inputSerialNumbers": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "preferredPackagingUnitId": {
                  "type": "string"
                },
                "bookLoadingEquipmentOnDissolveOfPreferred": {
                  "type": "boolean"
                }
              },
              "required": [
                "pickId",
                "inputQuantity",
                "bookLoadingEquipmentOnDissolveOfPreferred"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pickPick response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/transportationOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      }
    },
    "/transportationOrder/id/{id}/putDownInternalTransportReference": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "targetStoragePlaceId": {
                  "type": "string"
                },
                "targetTransportReferenceId": {
                  "type": "string"
                },
                "targetLoadingEquipmentIdentifierId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "putDownInternalTransportReference response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/transportationOrder"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "transportationOrder"
        ]
      }
    },
    "/unit": {
      "get": {
        "description": "query unit",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "unit response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/unit"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "unit"
        ]
      },
      "post": {
        "description": "create a unit",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/unit"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "unit create response",
            "schema": {
              "$ref": "#/definitions/unit"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/count": {
      "get": {
        "description": "count unit",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/id/{id}": {
      "delete": {
        "description": "delete a unit",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "unit delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "unit"
        ]
      },
      "get": {
        "description": "query unit",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/unit"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "unit"
        ]
      },
      "put": {
        "description": "update unit",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/unit"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "unit update response",
            "schema": {
              "$ref": "#/definitions/unit"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "unit"
        ]
      }
    },
    "/user": {
      "get": {
        "description": "query user",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/user"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "post": {
        "description": "create a user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "user create response",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/count": {
      "get": {
        "description": "count user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/currentUser": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "currentUser response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/user"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/currentUserHiddenViewIds": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "currentUserHiddenViewIds response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/currentUserPermissions": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "currentUserPermissions response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/permission"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/defaultUserImageThumbnailScaled": {
      "get": {
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "defaultUserImageThumbnailScaled response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/id/{id}": {
      "delete": {
        "description": "delete a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "user delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "get": {
        "description": "query user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "put": {
        "description": "update user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "user update response",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/id/{id}/invite": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "invite response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/user"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/id/{id}/userImage": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "imageId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "userImage response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/id/{id}/userImageThumbnail": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleWidth",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "scaleHeight",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "imageId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "userImageThumbnail response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/id/{id}/userImageThumbnailScaled": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "bid",
            "required": true,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "userImageThumbnailScaled response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/suggestLicenses": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "userRoleIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "licenses": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "transientlyAssignedLicenses": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "suggestLicenses response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/licenseSuggestion"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/userRole": {
      "get": {
        "description": "query userRole",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "userRole response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/userRole"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      },
      "post": {
        "description": "create a userRole",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userRole"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "userRole create response",
            "schema": {
              "$ref": "#/definitions/userRole"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/userRole/count": {
      "get": {
        "description": "count userRole",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/userRole/disableUserRolesDuringTrial": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "disableUserRolesDuringTrial response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/userRole/enableUserRolesDuringTrial": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "enableUserRolesDuringTrial response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/userRole/id/{id}": {
      "delete": {
        "description": "delete a userRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "userRole delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      },
      "get": {
        "description": "query userRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/userRole"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      },
      "put": {
        "description": "update userRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userRole"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "userRole update response",
            "schema": {
              "$ref": "#/definitions/userRole"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/userRole/userRolesByPermission": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "permission",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "userRolesByPermission response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/userRole"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/variantArticle": {
      "get": {
        "description": "query variantArticle",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "variantArticle response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/variantArticle"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticle"
        ]
      },
      "post": {
        "description": "create a variantArticle",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/variantArticle"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "variantArticle create response",
            "schema": {
              "$ref": "#/definitions/variantArticle"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticle"
        ]
      }
    },
    "/variantArticle/count": {
      "get": {
        "description": "count variantArticle",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticle"
        ]
      }
    },
    "/variantArticle/id/{id}": {
      "delete": {
        "description": "delete a variantArticle",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "variantArticle delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticle"
        ]
      },
      "get": {
        "description": "query variantArticle",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/variantArticle"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticle"
        ]
      },
      "put": {
        "description": "update variantArticle",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/variantArticle"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "variantArticle update response",
            "schema": {
              "$ref": "#/definitions/variantArticle"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticle"
        ]
      }
    },
    "/variantArticleAttribute": {
      "get": {
        "description": "query variantArticleAttribute",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "variantArticleAttribute response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/variantArticleAttribute"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticleAttribute"
        ]
      },
      "post": {
        "description": "create a variantArticleAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/variantArticleAttribute"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "variantArticleAttribute create response",
            "schema": {
              "$ref": "#/definitions/variantArticleAttribute"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticleAttribute"
        ]
      }
    },
    "/variantArticleAttribute/count": {
      "get": {
        "description": "count variantArticleAttribute",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticleAttribute"
        ]
      }
    },
    "/variantArticleAttribute/id/{id}": {
      "delete": {
        "description": "delete a variantArticleAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "variantArticleAttribute delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticleAttribute"
        ]
      },
      "get": {
        "description": "query variantArticleAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/variantArticleAttribute"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticleAttribute"
        ]
      },
      "put": {
        "description": "update variantArticleAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/variantArticleAttribute"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "variantArticleAttribute update response",
            "schema": {
              "$ref": "#/definitions/variantArticleAttribute"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticleAttribute"
        ]
      }
    },
    "/variantArticleVariant": {
      "get": {
        "description": "query variantArticleVariant",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "variantArticleVariant response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/variantArticleVariant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticleVariant"
        ]
      }
    },
    "/variantArticleVariant/count": {
      "get": {
        "description": "count variantArticleVariant",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticleVariant"
        ]
      }
    },
    "/variantArticleVariant/id/{id}": {
      "get": {
        "description": "query variantArticleVariant",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/variantArticleVariant"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "variantArticleVariant"
        ]
      }
    },
    "/warehouse": {
      "get": {
        "description": "query warehouse",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "warehouse response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/warehouse"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouse"
        ]
      },
      "post": {
        "description": "create a warehouse",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/warehouse"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "warehouse create response",
            "schema": {
              "$ref": "#/definitions/warehouse"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouse"
        ]
      }
    },
    "/warehouse/count": {
      "get": {
        "description": "count warehouse",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouse"
        ]
      }
    },
    "/warehouse/id/{id}": {
      "delete": {
        "description": "delete a warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "warehouse delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouse"
        ]
      },
      "get": {
        "description": "query warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/warehouse"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouse"
        ]
      },
      "put": {
        "description": "update warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/warehouse"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "warehouse update response",
            "schema": {
              "$ref": "#/definitions/warehouse"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouse"
        ]
      }
    },
    "/warehouse/id/{id}/activate": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "activate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/warehouse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouse"
        ]
      }
    },
    "/warehouse/id/{id}/deactivate": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deactivate response",
            "schema": {
              "properties": {
                "result": {
                  "$ref": "#/definitions/warehouse"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouse"
        ]
      }
    },
    "/warehouseStock": {
      "get": {
        "description": "query warehouseStock",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "warehouseStock response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/warehouseStock"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStock"
        ]
      }
    },
    "/warehouseStock/count": {
      "get": {
        "description": "count warehouseStock",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStock"
        ]
      }
    },
    "/warehouseStock/id/{id}": {
      "get": {
        "description": "query warehouseStock",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/warehouseStock"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStock"
        ]
      }
    },
    "/warehouseStockMovement": {
      "get": {
        "description": "query warehouseStockMovement",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "warehouseStockMovement response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/warehouseStockMovement"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStockMovement"
        ]
      }
    },
    "/warehouseStockMovement/bookDirectStockTransfer": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "articleId": {
                  "type": "string"
                },
                "quantity": {
                  "format": "number",
                  "type": "string"
                },
                "sourceStoragePlaceId": {
                  "type": "string"
                },
                "internalTransportReferenceId": {
                  "type": "string"
                },
                "destinationStoragePlaceId": {
                  "type": "string"
                },
                "batchNumber": {
                  "type": "string"
                },
                "serialNumbers": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "customAttributes": {
                  "items": {
                    "$ref": "#/definitions/customAttribute"
                  },
                  "type": "array"
                }
              },
              "required": [
                "articleId",
                "quantity",
                "destinationStoragePlaceId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bookDirectStockTransfer response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/warehouseStockMovement"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStockMovement"
        ]
      }
    },
    "/warehouseStockMovement/bookFromLoadingEquipmentPlace": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "loadingEquipmentArticleId": {
                  "type": "string"
                },
                "quantity": {
                  "format": "number",
                  "type": "string"
                },
                "targetStoragePlaceId": {
                  "type": "string"
                },
                "targetInternalTransportReferenceId": {
                  "type": "string"
                },
                "movementNote": {
                  "type": "string"
                },
                "customAttributes": {
                  "items": {
                    "$ref": "#/definitions/customAttribute"
                  },
                  "type": "array"
                }
              },
              "required": [
                "loadingEquipmentArticleId",
                "quantity"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bookFromLoadingEquipmentPlace response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/warehouseStockMovement"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStockMovement"
        ]
      }
    },
    "/warehouseStockMovement/bookIncomingMovement": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "articleId": {
                  "type": "string"
                },
                "quantity": {
                  "format": "number",
                  "type": "string"
                },
                "articleValuationPrice": {
                  "format": "number",
                  "type": "string"
                },
                "targetStoragePlaceId": {
                  "type": "string"
                },
                "movementNote": {
                  "type": "string"
                },
                "batchNumber": {
                  "type": "string"
                },
                "batchNumberExpirationDate": {
                  "format": "timestamp",
                  "type": "integer"
                },
                "serialNumbers": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "internalTransportReferenceId": {
                  "type": "string"
                },
                "loadingEquipmentIdentifierId": {
                  "type": "string"
                },
                "customAttributes": {
                  "items": {
                    "$ref": "#/definitions/customAttribute"
                  },
                  "type": "array"
                }
              },
              "required": [
                "articleId",
                "quantity"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bookIncomingMovement response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/warehouseStockMovement"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStockMovement"
        ]
      }
    },
    "/warehouseStockMovement/bookOntoInternalTransportReference": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "articleId": {
                  "type": "string"
                },
                "baseArticleQuantity": {
                  "format": "number",
                  "type": "string"
                },
                "sourceInternalTransportReferenceId": {
                  "type": "string"
                },
                "sourceStoragePlaceId": {
                  "type": "string"
                },
                "targetInternalTransportReferenceId": {
                  "type": "string"
                },
                "loadingEquipmentArticleId": {
                  "type": "string"
                },
                "loadingEquipmentIdentifierId": {
                  "type": "string"
                },
                "bookFromLoadingEquipmentPlace": {
                  "type": "boolean"
                },
                "bookLoadingEquipmentOnDissolveOfPreferred": {
                  "type": "boolean"
                },
                "movementNote": {
                  "type": "string"
                },
                "batchNumber": {
                  "type": "string"
                },
                "serialNumbers": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "customAttributes": {
                  "items": {
                    "$ref": "#/definitions/customAttribute"
                  },
                  "type": "array"
                }
              },
              "required": [
                "articleId",
                "baseArticleQuantity"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bookOntoInternalTransportReference response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/warehouseStockMovement"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStockMovement"
        ]
      }
    },
    "/warehouseStockMovement/bookOutgoingMovement": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "internalTransportReferenceId": {
                  "type": "string"
                },
                "articleId": {
                  "type": "string"
                },
                "quantity": {
                  "format": "number",
                  "type": "string"
                },
                "sourceStoragePlaceId": {
                  "type": "string"
                },
                "movementNote": {
                  "type": "string"
                },
                "batchNumber": {
                  "type": "string"
                },
                "serialNumbers": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "customAttributes": {
                  "items": {
                    "$ref": "#/definitions/customAttribute"
                  },
                  "type": "array"
                },
                "costCenterId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bookOutgoingMovement response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/warehouseStockMovement"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStockMovement"
        ]
      }
    },
    "/warehouseStockMovement/bookToLoadingEquipmentPlace": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "loadingEquipmentArticleId": {
                  "type": "string"
                },
                "quantity": {
                  "format": "number",
                  "type": "string"
                },
                "sourceStoragePlaceId": {
                  "type": "string"
                },
                "sourceInternalTransportReferenceId": {
                  "type": "string"
                },
                "movementNote": {
                  "type": "string"
                },
                "customAttributes": {
                  "items": {
                    "$ref": "#/definitions/customAttribute"
                  },
                  "type": "array"
                }
              },
              "required": [
                "loadingEquipmentArticleId",
                "quantity"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bookToLoadingEquipmentPlace response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/warehouseStockMovement"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStockMovement"
        ]
      }
    },
    "/warehouseStockMovement/count": {
      "get": {
        "description": "count warehouseStockMovement",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStockMovement"
        ]
      }
    },
    "/warehouseStockMovement/createGenericLabel": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "articleId": {
                  "format": "int32",
                  "type": "integer"
                },
                "commonVariables": {
                  "type": "object"
                },
                "specificVariables": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "required": [
                "articleId",
                "commonVariables"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf",
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "createGenericLabel response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStockMovement"
        ]
      }
    },
    "/warehouseStockMovement/id/{id}": {
      "get": {
        "description": "query warehouseStockMovement",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/warehouseStockMovement"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "warehouseStockMovement"
        ]
      }
    },
    "/webhook": {
      "get": {
        "description": "query webhook",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "webhook response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/webhook"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "webhook"
        ]
      },
      "post": {
        "description": "create a webhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "webhook create response",
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/webhook/count": {
      "get": {
        "description": "count webhook",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/webhook/id/{id}": {
      "delete": {
        "description": "delete a webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "webhook delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "webhook"
        ]
      },
      "get": {
        "description": "query webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "webhook"
        ]
      },
      "put": {
        "description": "update webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "webhook update response",
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/weclappOs": {
      "get": {
        "description": "query weclappOs",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "weclappOs response",
            "schema": {
              "properties": {
                "result": {
                  "items": {
                    "$ref": "#/definitions/weclappOs"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "weclappOs"
        ]
      },
      "post": {
        "description": "create a weclappOs",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/weclappOs"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "weclappOs create response",
            "schema": {
              "$ref": "#/definitions/weclappOs"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "weclappOs"
        ]
      }
    },
    "/weclappOs/count": {
      "get": {
        "description": "count weclappOs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "count",
            "schema": {
              "properties": {
                "result": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "weclappOs"
        ]
      }
    },
    "/weclappOs/id/{id}": {
      "delete": {
        "description": "delete a weclappOs",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "weclappOs delete response"
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "weclappOs"
        ]
      },
      "get": {
        "description": "query weclappOs",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "schema": {
              "$ref": "#/definitions/weclappOs"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "weclappOs"
        ]
      },
      "put": {
        "description": "update weclappOs",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/weclappOs"
            }
          },
          {
            "in": "query",
            "name": "dryRun",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "weclappOs update response",
            "schema": {
              "$ref": "#/definitions/weclappOs"
            }
          },
          "default": {
            "description": "error response",
            "schema": {
              "$ref": "#/definitions/problem"
            }
          }
        },
        "tags": [
          "weclappOs"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "security": [
    {
      "API token": []
    }
  ],
  "securityDefinitions": {
    "API token": {
      "description": "API token",
      "in": "header",
      "name": "AuthenticationToken",
      "type": "apiKey"
    }
  },
  "swagger": "2.0"
}